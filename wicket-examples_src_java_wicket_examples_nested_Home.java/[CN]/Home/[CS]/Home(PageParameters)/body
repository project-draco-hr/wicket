{
  List<Object> l1=new ArrayList<Object>();
  l1.add("test 1.1");
  l1.add("test 1.2");
  List<Object> l2=new ArrayList<Object>();
  l2.add("test 2.1");
  l2.add("test 2.2");
  l2.add("test 2.3");
  List<String> l3=new ArrayList<String>();
  l3.add("test 3.1");
  l2.add(l3);
  l2.add("test 2.4");
  l1.add(l2);
  l1.add("test 1.3");
  new RecursivePanel(this,"panels",l1);
  TreeModel treeModel=convertToTreeModel(l1);
  final Tree tree=new Tree(this,"tree",treeModel){
    /** 
 * @see wicket.markup.html.tree.Tree#renderNode(javax.swing.tree.TreeNode)
 */
    @Override protected String renderNode(    TreeNode node){
      return node.isLeaf() ? node.toString() : "<sub>";
    }
  }
;
  new Link(this,"expandAll"){
    @Override public void onClick(){
      tree.getTreeState().expandAll();
    }
  }
;
  new Link(this,"collapseAll"){
    @Override public void onClick(){
      tree.getTreeState().collapseAll();
    }
  }
;
}
