{
  try {
    Args.notEmpty(algorithm,"algorithm");
    MessageDigest digest=java.security.MessageDigest.getInstance(algorithm);
    if (item.isInMemory()) {
      digest.update(getBytes());
      return digest.digest();
    }
    InputStream in=null;
    try {
      in=item.getInputStream();
      byte[] buf=new byte[Math.min((int)item.getSize(),4096 * 10)];
      int len;
      while (-1 != (len=in.read(buf))) {
        digest.update(buf,0,len);
      }
      return digest.digest();
    }
 catch (    IOException ex) {
      throw new WicketRuntimeException("Error while reading input data for " + algorithm + " checksum",ex);
    }
 finally {
      IOUtils.closeQuietly(in);
    }
  }
 catch (  NoSuchAlgorithmException ex) {
    String error=String.format("Your java runtime does not support digest algorithm [%s]. " + "Please see java.security.MessageDigest.getInstance(\"%s\")",algorithm,algorithm);
    throw new WicketRuntimeException(error,ex);
  }
}
