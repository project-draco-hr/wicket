{
  CommentForm commentForm=new CommentForm(this,"commentForm");
  comments=new WebMarkupContainer(this,"comments");
  comments.setOutputMarkupId(true);
  commentListView=new ListView<Comment>(comments,"comments",new PropertyModel<List<Comment>>(this,"commentList")){
    @Override public void populateItem(    final ListItem<Comment> listItem){
      final Comment comment=listItem.getModelObject();
      new Label(listItem,"date",new Model<Date>(comment.getDate()));
      new MultiLineLabel(listItem,"text",comment.getText());
    }
  }
;
  commentForm.add(new AjaxFormSubmitBehavior(commentForm,ClientEvent.SUBMIT){
    @Override protected IAjaxCallDecorator getAjaxCallDecorator(){
      return new AjaxCallDecorator(){
        @Override public CharSequence decorateScript(        CharSequence script){
          return script + "return false;";
        }
      }
;
    }
    @Override protected void onSubmit(    AjaxRequestTarget target){
      target.addComponent(comments);
      target.addComponent(text);
      target.addJavascript("document.getElementById('" + text.getMarkupId() + "').focus();");
    }
  }
);
}
