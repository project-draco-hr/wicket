{
  BoundCompoundPropertyModel<String> emptyModel=new BoundCompoundPropertyModel<String>("");
  String expected="Model:classname=[org.apache.wicket.model.BoundCompoundPropertyModel]:nestedModel=[]:bindings=[]";
  assertEquals(expected,emptyModel.toString());
  Properties properties=new Properties();
  properties.put("name","foo");
  BoundCompoundPropertyModel<String> stringProperty=new BoundCompoundPropertyModel<String>(properties);
  expected="Model:classname=[org.apache.wicket.model.BoundCompoundPropertyModel]:nestedModel=[{name=foo}]:bindings=[]";
  assertEquals(expected,stringProperty.toString());
  stringProperty.getObject();
  expected="Model:classname=[org.apache.wicket.model.BoundCompoundPropertyModel]:nestedModel=[{name=foo}]:bindings=[]";
  assertEquals(expected,stringProperty.toString());
  InnerPOJO innerPOJO=new InnerPOJO();
  BoundCompoundPropertyModel<InnerPOJO> pojoProperty=new BoundCompoundPropertyModel<InnerPOJO>(innerPOJO);
  expected="Model:classname=[org.apache.wicket.model.BoundCompoundPropertyModel]:nestedModel=[" + innerPOJO + "]:bindings=[]";
  assertEquals(expected,pojoProperty.toString());
  Component<?> component1=pojoProperty.bind(new Label<Object>("label"));
  expected="Model:classname=[org.apache.wicket.model.BoundCompoundPropertyModel]:nestedModel=[" + innerPOJO + "]:bindings=[Binding(:component=["+ component1+ "]:expression=[label])]";
  assertEquals(expected,pojoProperty.toString());
}
