{
  Iterator it;
  it=markupIdToComponent.entrySet().iterator();
  while (it.hasNext()) {
    final Component component=(Component)((Entry)it.next()).getValue();
    if (component instanceof MarkupContainer) {
      MarkupContainer container=(MarkupContainer)component;
      container.visitChildren(IFeedback.class,new IVisitor(){
        public Object component(        Component component){
          ((IFeedback)component).updateFeedback();
          return IVisitor.CONTINUE_TRAVERSAL;
        }
      }
);
    }
    if (component instanceof IFeedback) {
      ((IFeedback)component).updateFeedback();
    }
  }
  it=markupIdToComponent.values().iterator();
  while (it.hasNext()) {
    final Component component=(Component)it.next();
    component.attach();
  }
  it=markupIdToComponent.entrySet().iterator();
  while (it.hasNext()) {
    final Map.Entry entry=(Entry)it.next();
    final Component component=(Component)entry.getValue();
    final String markupId=(String)entry.getKey();
    respondComponent(response,markupId,component);
  }
}
