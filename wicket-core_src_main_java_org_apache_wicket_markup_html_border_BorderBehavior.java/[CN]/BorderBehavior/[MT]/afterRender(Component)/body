{
  final MarkupStream stream=getMarkupStream(component);
  final Response response=component.getResponse();
  while (stream.isCurrentIndexInsideTheStream()) {
    MarkupElement elem=stream.get();
    stream.next();
    if (elem instanceof WicketTag) {
      WicketTag wTag=(WicketTag)elem;
      if (wTag.isBorderTag() && wTag.isClose()) {
        break;
      }
 else {
        throw new WicketRuntimeException("Unexpected tag encountered in markup of component border " + getClass().getName() + ". Tag: "+ wTag.toString()+ ", expected tag: </wicket:border>");
      }
    }
    response.write(elem.toCharSequence());
  }
}
