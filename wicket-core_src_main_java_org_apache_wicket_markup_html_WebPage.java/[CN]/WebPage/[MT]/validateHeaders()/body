{
  HtmlHeaderContainer header=visitChildren(new IVisitor<Component,HtmlHeaderContainer>(){
    @Override public void component(    final Component component,    final IVisit<HtmlHeaderContainer> visit){
      if (component instanceof HtmlHeaderContainer) {
        visit.stop((HtmlHeaderContainer)component);
      }
 else       if (component instanceof TransparentWebMarkupContainer == false) {
        visit.dontGoDeeper();
      }
    }
  }
);
  if (header == null) {
    header=new HtmlHeaderContainer(HtmlHeaderSectionHandler.HEADER_ID);
    add(header);
    Response orgResponse=getRequestCycle().getResponse();
    try {
      final StringResponse response=new StringResponse();
      getRequestCycle().setResponse(response);
      AbstractHeaderRenderStrategy.get().renderHeader(header,getPage());
      response.close();
      if (response.getBuffer().length() > 0) {
        log.error("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^");
        log.error("You probably forgot to add a <body> or <head> tag to your markup since no Header Container was \n" + "found but components were found which want to write to the <head> section.\n" + response.getBuffer());
        log.error("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^");
      }
    }
 catch (    Exception e) {
      log.error("header/body check throws exception",e);
    }
 finally {
      this.remove(header);
      getRequestCycle().setResponse(orgResponse);
    }
  }
}
