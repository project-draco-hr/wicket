{
  HtmlHeaderContainer header=visitChildren(new IVisitor<Component,HtmlHeaderContainer>(){
    @Override public void component(    final Component component,    final IVisit<HtmlHeaderContainer> visit){
      if (component instanceof HtmlHeaderContainer) {
        visit.stop((HtmlHeaderContainer)component);
      }
 else       if (component instanceof TransparentWebMarkupContainer == false) {
        visit.dontGoDeeper();
      }
    }
  }
);
  if (header == null) {
    header=new HtmlHeaderContainer(HtmlHeaderSectionHandler.HEADER_ID);
    add(header);
    RequestCycle requestCycle=getRequestCycle();
    Response orgResponse=requestCycle.getResponse();
    try {
      StringResponse tempResponse=new StringResponse();
      requestCycle.setResponse(tempResponse);
      AbstractHeaderRenderStrategy.get().renderHeader(header,null,getPage());
      IHeaderResponse headerResponse=header.getHeaderResponse();
      headerResponse.close();
      CharSequence collectedHeaderOutput=tempResponse.getBuffer();
      if (collectedHeaderOutput.length() > 0) {
        reportMissingHead(collectedHeaderOutput);
      }
    }
 catch (    Exception e) {
      log.error("header/body check throws exception",e);
    }
 finally {
      this.remove(header);
      requestCycle.setResponse(orgResponse);
    }
  }
}
