{
  final ApplicationSettings settings=getApplicationSettings();
  try {
    final Watcher watcher=settings.getResourceWatcher();
    if (watcher != null) {
      watcher.add(markupResource,new IChangeListener(){
        public void changed(){
synchronized (markupCache) {
            try {
              log.info("Reloading markup from " + markupResource);
              loadMarkup(settings,key,markupResource);
            }
 catch (            ParseException e) {
              log.error("Unable to parse markup from " + markupResource,e);
            }
catch (            ResourceNotFoundException e) {
              log.error("Unable to find markup from " + markupResource,e);
            }
catch (            IOException e) {
              log.error("Unable to read markup from " + markupResource,e);
            }
          }
        }
      }
);
    }
    log.info("Loading markup from " + markupResource);
    return loadMarkup(settings,key,markupResource);
  }
 catch (  ParseException e) {
    throw new MarkupException(markupResource,exceptionMessage("Unable to parse markup"),e);
  }
catch (  ResourceNotFoundException e) {
    throw new MarkupException(markupResource,exceptionMessage("Unable to find markup"),e);
  }
catch (  IOException e) {
    throw new MarkupException(markupResource,exceptionMessage("Unable to read markup"),e);
  }
}
