{
  final IModel<String> labelModel=new Model<String>("");
  Label passFail=new Label("passFail",labelModel);
  add(passFail);
  final SubmitLink submitComponent=new SubmitLink("submitComponent");
  final SubmitLink submitFormComponent=new SubmitLink("submitFormComponent");
  final SubmitLink submitForm=new SubmitLink("submitForm");
  final InvalidPanel invalidPanel=new InvalidPanel("invalidPanel");
  final CheckBox formComponent=new CheckBox("formComponent",new Model());
  Form form=new Form("form"){
    @Override protected void onError(){
      super.onError();
      labelModel.setObject("Test PASSED - an error was expected.");
    }
    @Override protected void onSubmit(){
      super.onSubmit();
      labelModel.setObject("Test FAILED - an error was expected");
      Assert.fail("A validation error should've been detected by the Form processing");
    }
    @Override public void process(    IFormSubmittingComponent submittingComponent){
      if (submittingComponent == submitFormComponent) {
        formComponent.error("FormComponent validation error");
      }
 else       if (submittingComponent == submitComponent) {
        invalidPanel.error("Panel validation error");
      }
 else {
        error("Form validation error");
      }
      super.process(submittingComponent);
    }
  }
;
  add(form);
  form.add(submitComponent);
  form.add(submitFormComponent);
  form.add(submitForm);
  form.add(invalidPanel);
  form.add(formComponent);
  add(new FeedbackPanel("feedback"));
}
