{
  final MarkupFilterList filters=new MarkupFilterList();
  MarkupResourceStream markupResourceStream=markup.getMarkupResourceStream();
  filters.add(new WicketTagIdentifier(markupResourceStream));
  filters.add(new HtmlHandler());
  filters.add(new WicketRemoveTagHandler(markupResourceStream));
  filters.add(new WicketLinkTagHandler(markupResourceStream));
  filters.add(new AutoLabelTagHandler(markupResourceStream));
  filters.add(new WicketNamespaceHandler(markupResourceStream));
  filters.add(new WicketMessageTagHandler(markupResourceStream));
  if ((markupResourceStream != null) && (markupResourceStream.getResource() != null)) {
    final ContainerInfo containerInfo=markupResourceStream.getContainerInfo();
    if (containerInfo != null) {
      if (Page.class.isAssignableFrom(containerInfo.getContainerClass())) {
        filters.add(new HtmlHeaderSectionHandler(markup));
      }
      filters.add(new HeadForceTagIdHandler(containerInfo.getContainerClass()));
    }
  }
  filters.add(new OpenCloseTagExpander());
  filters.add(new RelativePathPrefixHandler(markupResourceStream));
  filters.add(new EnclosureHandler(markupResourceStream));
  filters.add(new InlineEnclosureHandler(markupResourceStream));
  filters.add(new StyleAndScriptIdentifier(),StyleAndScriptIdentifier.class);
  filters.add(new WicketContainerTagHandler(markupResourceStream,Application.get().usesDevelopmentConfig()));
  return filters;
}
