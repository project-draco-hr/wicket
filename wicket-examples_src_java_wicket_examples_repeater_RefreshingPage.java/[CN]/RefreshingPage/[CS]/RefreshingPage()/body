{
  final List contacts=new ArrayList(10);
  ContactDataProvider dp=new ContactDataProvider();
  Iterator it=dp.iterator(0,10);
  while (it.hasNext()) {
    contacts.add(dp.model((Contact)it.next()));
  }
  RefreshingView view=new RefreshingView(this,"view"){
    /** 
 * Return an iterator over models for items in the view
 */
    @Override protected Iterator getItemModels(){
      return contacts.iterator();
    }
    @Override protected void populateItem(    final Item item){
      Contact contact=(Contact)item.getModelObject();
      item.add(new Label(item,"itemid",item.getId()));
      item.add(new ActionPanel(item,"actions",item.getModel()));
      item.add(new Label(item,"contactid",String.valueOf(contact.getId())));
      item.add(new Label(item,"firstname",contact.getFirstName()));
      item.add(new Label(item,"lastname",contact.getLastName()));
      item.add(new Label(item,"homephone",contact.getHomePhone()));
      item.add(new Label(item,"cellphone",contact.getCellPhone()));
      item.add(new AttributeModifier("class",true,new AbstractReadOnlyModel(){
        @Override public Object getObject(        Component component){
          return (item.getIndex() % 2 == 1) ? "even" : "odd";
        }
      }
));
    }
  }
;
  add(view);
  add(new Link(this,"refreshLink"){
    @Override public void onClick(){
    }
  }
);
}
