{
  Url url=request.getUrl();
  if (canBeHandled(url)) {
    final int segmentsSize=url.getSegments().size();
    PageParameters pageParameters=extractPageParameters(request,segmentsSize,pageParametersEncoder);
    String className=url.getSegments().get(2);
    StringBuilder name=new StringBuilder(segmentsSize * 2);
    for (int i=3; i < segmentsSize; ++i) {
      String segment=url.getSegments().get(i);
      if (segment.contains("/")) {
        return null;
      }
      if (i + 1 == segmentsSize && Strings.isEmpty(segment) == false) {
        ResourceUrl resourceUrl=new ResourceUrl(segment,pageParameters);
        getCachingStrategy().undecorateUrl(resourceUrl);
        segment=resourceUrl.getFileName();
        Checks.notEmpty(segment,"Caching strategy returned empty name for '%s'",resourceUrl);
      }
      if (name.length() > 0) {
        name.append("/");
      }
      name.append(segment);
    }
    ResourceReference.UrlAttributes attributes=getResourceReferenceAttributes(url);
    Class<?> scope=resolveClass(className);
    if (scope != null && scope.getPackage() != null) {
      ResourceReference res=getContext().getResourceReferenceRegistry().getResourceReference(scope,name.toString(),attributes.getLocale(),attributes.getStyle(),attributes.getVariation(),true,true);
      if (res != null) {
        return new ResourceReferenceRequestHandler(res,pageParameters);
      }
    }
  }
  return null;
}
