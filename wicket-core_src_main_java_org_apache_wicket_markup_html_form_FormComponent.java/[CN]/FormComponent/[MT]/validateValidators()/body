{
  final IValidatable<T> validatable=newValidatable();
  boolean isNull=getConvertedInput() == null;
  IValidator<T> validator=null;
  for (  Behavior behavior : getBehaviors()) {
    validator=null;
    if (behavior instanceof ValidatorAdapter) {
      validator=((ValidatorAdapter<T>)behavior).getValidator();
    }
 else     if (behavior instanceof IValidator) {
      validator=(IValidator<T>)behavior;
    }
    if (validator != null) {
      if (isNull == false || validator instanceof INullAcceptingValidator<?>) {
        try {
          validator.validate(validatable);
        }
 catch (        Exception e) {
          throw new WicketRuntimeException("Exception '" + e.getMessage() + "' occurred during validation "+ validator.getClass().getName()+ " on component "+ getPath(),e);
        }
      }
      if (!isValid()) {
        break;
      }
    }
  }
}
