{
  super();
  cdModel=new HibernateObjectModel(id,CD.class,new HibernateHelperSessionDelegate());
  this.searchCDPage=searchCDPage;
  add(new Label("cdTitle",new TitleModel(cdModel)));
  FeedbackPanel feedback=new FeedbackPanel("feedback");
  add(feedback);
  add(new DetailForm("detailForm",feedback,cdModel));
  add(new ImageUploadForm("imageUpload",cdModel));
  ImageResource thumbImgResource=new ImageResource(){
    public IResource getResource(){
      final CD cd=(CD)cdModel.getObject(null);
      if (cd.getImage() == null) {
        return IMG_UNKNOWN.getResource();
      }
 else {
        DynamicImageResource img=new DynamicImageResource(){
          protected byte[] getImageData(){
            return cd.getImage();
          }
        }
;
        ThumbnailImageResource res=new ThumbnailImageResource(img,100);
        return res.getResource();
      }
    }
    public String getPath(){
      reset();
      return super.getPath();
    }
  }
;
  ImagePopupLink popupImageLink=new ImagePopupLink("popupImageLink",cdModel);
  popupImageLink.add(new Image("cdimage",thumbImgResource));
  add(popupImageLink);
  add(new DeleteImageLink("deleteImageLink",cdModel));
}
