{
  JSONObject settings=new JSONObject();
  settings.put("minWidth",getMinimalWidth());
  settings.put("minHeight",getMinimalHeight());
  settings.put("className",getCssClassName());
  settings.put("width",getInitialWidth());
  if ((isUseInitialHeight() == true) || (isCustomComponent() == false)) {
    settings.put("height",getInitialHeight());
  }
 else {
    settings.put("height",(Object)null);
  }
  settings.put("resizable",isResizable());
  if (isResizable() == false) {
    settings.put("widthUnit",getWidthUnit());
    settings.put("heightUnit",getHeightUnit());
  }
  if (isCustomComponent() == false) {
    Page page=createPage();
    if (page == null) {
      throw new WicketRuntimeException("Error creating page for modal dialog.");
    }
    CharSequence pageUrl;
    RequestCycle requestCycle=RequestCycle.get();
    page.getSession().getPageManager().touchPage(page);
    if (page.isPageStateless()) {
      pageUrl=requestCycle.urlFor(page.getClass(),page.getPageParameters());
    }
 else {
      IRequestHandler handler=new RenderPageRequestHandler(new PageProvider(page));
      pageUrl=requestCycle.urlFor(handler);
    }
    settings.put("src",pageUrl);
  }
 else {
    settings.put("element",new JsonFunction("document.getElementById(\"" + getContentMarkupId() + "\")"));
  }
  if (getCookieName() != null) {
    settings.put("cookieId",getCookieName());
  }
  String title=getTitle() != null ? getTitle().getObject() : null;
  if (title != null) {
    settings.put("title",getDefaultModelObjectAsString(title));
  }
  if (getMaskType() == MaskType.TRANSPARENT) {
    settings.put("mask","transparent");
  }
 else   if (getMaskType() == MaskType.SEMI_TRANSPARENT) {
    settings.put("mask","semi-transparent");
  }
  settings.put("autoSize",autoSize);
  settings.put("unloadConfirmation",showUnloadConfirmation());
  boolean haveCloseCallback=false;
  if (windowClosedCallback != null) {
    WindowClosedBehavior behavior=getBehaviors(WindowClosedBehavior.class).get(0);
    settings.put("onClose",new JsonFunction("function() { " + behavior.getCallbackScript() + " }"));
    haveCloseCallback=true;
  }
  if ((closeButtonCallback != null) || (haveCloseCallback == false)) {
    CloseButtonBehavior behavior=getBehaviors(CloseButtonBehavior.class).get(0);
    settings.put("onCloseButton",new JsonFunction("function() { " + behavior.getCallbackScript() + "; return false; }"));
  }
  postProcessSettings(settings);
  AppendingStringBuffer buffer=new AppendingStringBuffer(500);
  buffer.append("var settings = ");
  buffer.append(settings.toString());
  buffer.append(";");
  buffer.append(getShowJavaScript());
  return buffer.toString();
}
