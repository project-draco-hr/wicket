{
  try {
    final MarkupFragment markup=newMarkupLoader().loadMarkup(container,markupResourceStream);
    if (markupResourceStream.getCacheKey() != null) {
      markup.makeImmutable();
      markupCache.put(markupResourceStream.getCacheKey(),markup);
    }
    afterLoadListeners.notifyListeners(markupResourceStream);
    return markup;
  }
 catch (  final ResourceStreamNotFoundException e) {
    log.error("Unable to find markup from " + markupResourceStream,e);
  }
catch (  final IOException e) {
    log.error("Unable to read markup from " + markupResourceStream,e);
  }
synchronized (markupCache) {
    markupCache.remove(markupResourceStream.getCacheKey());
    afterLoadListeners.remove(markupResourceStream);
  }
  return MarkupFragment.NO_MARKUP_FRAGMENT;
}
