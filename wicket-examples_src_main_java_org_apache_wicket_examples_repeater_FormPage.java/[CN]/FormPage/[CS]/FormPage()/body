{
  form=new Form("form");
  add(form);
  RefreshingView<Contact> refreshingView=new RefreshingView<Contact>("simple"){
    @Override protected Iterator<IModel<Contact>> getItemModels(){
      SortParam sort=new SortParam("firstName",SortOrder.ASCENDING);
      Iterator<Contact> contacts=DatabaseLocator.getDatabase().find(0,10,sort).iterator();
      return new ModelIteratorAdapter<Contact>(contacts){
        @Override protected IModel<Contact> model(        Contact object){
          return new CompoundPropertyModel<Contact>(new DetachableContactModel(object));
        }
      }
;
    }
    @Override protected void populateItem(    final Item<Contact> item){
      IModel<Contact> contact=item.getModel();
      item.add(new ActionPanel("actions",contact));
      item.add(new TextField<Long>("id"));
      item.add(new TextField<String>("firstName"));
      item.add(new TextField<String>("lastName"));
      item.add(new TextField<String>("homePhone"));
      item.add(new TextField<String>("cellPhone"));
    }
    @Override protected Item<Contact> newItem(    String id,    int index,    IModel<Contact> model){
      return new OddEvenItem<Contact>(id,index,model);
    }
  }
;
  refreshingView.setItemReuseStrategy(ReuseIfModelsEqualStrategy.getInstance());
  form.add(refreshingView);
}
