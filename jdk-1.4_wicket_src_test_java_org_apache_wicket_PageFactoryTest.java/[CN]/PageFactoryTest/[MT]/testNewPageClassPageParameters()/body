{
  assertEquals(MyPage0.class,factory.newPage(MyPage0.class,(PageParameters)null).getClass());
  assertEquals(MyPage0.class,factory.newPage(MyPage0.class,new PageParameters()).getClass());
  assertEquals(MyPage1.class,factory.newPage(MyPage1.class,new PageParameters()).getClass());
  assertEquals(MyPage2.class,factory.newPage(MyPage2.class,new PageParameters()).getClass());
  Exception e=null;
  try {
    factory.newPage(MyPage3.class,new PageParameters()).getClass();
  }
 catch (  WicketRuntimeException ex) {
    e=ex;
  }
  assertNotNull("MyPage4 should have thrown an exception as it does not have a default or no constructor",e);
  e=null;
  try {
    factory.newPage(MyPage4.class,new PageParameters()).getClass();
  }
 catch (  WicketRuntimeException ex) {
    e=ex;
  }
  assertNotNull("MyPage4 should have thrown an exception as it does not have a default or no constructor",e);
  assertEquals(MyPage5.class,factory.newPage(MyPage5.class,new PageParameters()).getClass());
  e=null;
  try {
    factory.newPage(String.class,new PageParameters()).getClass();
  }
 catch (  ClassCastException ex) {
    e=ex;
  }
  assertNotNull("String does not extend Page. Should have thrown an exception",e);
}
