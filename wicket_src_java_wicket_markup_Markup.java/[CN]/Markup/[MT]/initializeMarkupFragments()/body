{
  if (markup == null) {
    return;
  }
  this.markupFragments=new MarkupFragment(this);
  Stack<String> stack=new Stack<String>();
  String basePath=null;
  Stack<MarkupFragment> fragmentStack=new Stack<MarkupFragment>();
  MarkupFragment current=this.markupFragments;
  for (  MarkupElement elem : this.markup) {
    if (elem instanceof RawMarkup) {
      current.addMarkupElement(elem);
    }
 else {
      final ComponentTag tag=(ComponentTag)elem;
      final String path=(basePath == null ? tag.getId() : basePath + Component.PATH_SEPARATOR + tag.getId());
      if (tag.isOpen()) {
        if (tag.hasNoCloseTag()) {
          current.addMarkupElement(new MarkupFragment(this,tag));
        }
 else {
          stack.push(basePath);
          fragmentStack.push(current);
          MarkupFragment newFragment=new MarkupFragment(this,tag);
          current.addMarkupElement(newFragment);
          current=newFragment;
          if (!tag.getId().startsWith(Component.AUTO_COMPONENT_PREFIX)) {
            basePath=path;
          }
        }
      }
 else       if (tag.isOpenClose()) {
        MarkupFragment newFragment=new MarkupFragment(this,tag);
        current.addMarkupElement(newFragment);
      }
 else {
        current.addMarkupElement(tag);
        current=fragmentStack.pop();
        basePath=stack.pop();
      }
    }
  }
  if ((this.markupFragments.size() == 1) && (this.markupFragments.get(0) instanceof MarkupFragment)) {
    this.markupFragments=(MarkupFragment)this.markupFragments.get(0);
  }
}
