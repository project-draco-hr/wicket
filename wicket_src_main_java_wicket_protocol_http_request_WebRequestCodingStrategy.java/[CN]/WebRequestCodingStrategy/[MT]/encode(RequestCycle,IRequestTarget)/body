{
  CharSequence url=pathForTarget(requestTarget);
  if (url != null) {
  }
 else   if (requestTarget instanceof IBookmarkablePageRequestTarget) {
    url=encode(requestCycle,(IBookmarkablePageRequestTarget)requestTarget);
  }
 else   if (requestTarget instanceof ISharedResourceRequestTarget) {
    url=encode(requestCycle,(ISharedResourceRequestTarget)requestTarget);
  }
 else   if (requestTarget instanceof IListenerInterfaceRequestTarget) {
    url=encode(requestCycle,(IListenerInterfaceRequestTarget)requestTarget);
  }
 else   if (requestTarget instanceof IPageRequestTarget) {
    url=encode(requestCycle,(IPageRequestTarget)requestTarget);
    return url;
  }
 else {
    url=doEncode(requestCycle,requestTarget);
  }
  if (url != null) {
    String relativeUrl=requestCycle.getRequest().getPath();
    PrependingStringBuffer prepender=new PrependingStringBuffer(url.toString());
    HttpServletRequest httpRequest=((WebRequest)requestCycle.getRequest()).getHttpServletRequest();
    String errorUrl=(String)httpRequest.getAttribute("javax.servlet.error.request_uri");
    String forwardUrl=(String)httpRequest.getAttribute("javax.servlet.forward.servlet_path");
    if (errorUrl != null) {
      String servletPath=httpRequest.getServletPath();
      if (servletPath.endsWith(relativeUrl)) {
        servletPath=servletPath.substring(0,servletPath.length() - relativeUrl.length() - 1);
      }
      String foo=httpRequest.getPathInfo();
      errorUrl=errorUrl.substring(httpRequest.getContextPath().length());
      if (!errorUrl.startsWith(servletPath)) {
        prepender.prepend(servletPath.substring(1) + "/");
      }
      for (int i=servletPath.length() + 1; i < errorUrl.length(); i++) {
        if (errorUrl.charAt(i) == '?') {
          break;
        }
        if (errorUrl.charAt(i) == '/') {
          prepender.prepend("../");
        }
      }
      return requestCycle.getOriginalResponse().encodeURL(prepender.toString());
    }
    if (forwardUrl != null) {
      relativeUrl=forwardUrl.substring(relativeUrl.length() > 0 ? 1 : 0);
    }
    if (requestTarget instanceof BookmarkablePageRequestTarget || requestTarget instanceof ISharedResourceRequestTarget) {
      for (int i=0; i < relativeUrl.length(); i++) {
        if (relativeUrl.charAt(i) == '?') {
          break;
        }
        if (relativeUrl.charAt(i) == '/') {
          prepender.prepend("../");
        }
      }
    }
 else     if (url.length() > 0 && url.charAt(0) == '?') {
      prepender.prepend(relativeUrl.substring(relativeUrl.lastIndexOf("/") + 1));
    }
    if (prepender.length() == 0) {
      prepender.prepend("./");
    }
    return requestCycle.getOriginalResponse().encodeURL(prepender.toString());
  }
  return null;
}
