{
  CharSequence path=pathForTarget(requestTarget);
  if (path != null) {
    CharSequence prefix=urlPrefix(requestCycle);
    if (prefix.length() > 0) {
      if (prefix.charAt(prefix.length() - 1) == '/') {
        prefix=prefix.subSequence(0,prefix.length() - 1);
      }
    }
    final AppendingStringBuffer buffer=new AppendingStringBuffer(prefix.length() + path.length());
    buffer.append(prefix);
    buffer.append(path);
    return requestCycle.getOriginalResponse().encodeURL(buffer);
  }
  if (requestTarget instanceof IBookmarkablePageRequestTarget) {
    return encode(requestCycle,(IBookmarkablePageRequestTarget)requestTarget);
  }
 else   if (requestTarget instanceof ISharedResourceRequestTarget) {
    return encode(requestCycle,(ISharedResourceRequestTarget)requestTarget);
  }
 else   if (requestTarget instanceof IListenerInterfaceRequestTarget) {
    return encode(requestCycle,(IListenerInterfaceRequestTarget)requestTarget);
  }
 else   if (requestTarget instanceof IPageRequestTarget) {
    return encode(requestCycle,(IPageRequestTarget)requestTarget);
  }
  String url=doEncode(requestCycle,requestTarget);
  if (url != null) {
    return url;
  }
  return null;
}
