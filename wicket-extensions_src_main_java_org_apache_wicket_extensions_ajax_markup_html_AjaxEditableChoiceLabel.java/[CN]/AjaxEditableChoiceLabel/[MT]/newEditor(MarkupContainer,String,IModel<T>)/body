{
  IModel<List<? extends T>> choiceModel=new AbstractReadOnlyModel<List<? extends T>>(){
    private static final long serialVersionUID=1L;
    @Override public List<? extends T> getObject(){
      return choices.getObject();
    }
  }
;
  DropDownChoice<T> editor=new DropDownChoice<T>(componentId,model,choiceModel,renderer){
    private static final long serialVersionUID=1L;
    @Override protected void onModelChanged(){
      AjaxEditableChoiceLabel.this.onModelChanged();
    }
    @Override protected void onModelChanging(){
      AjaxEditableChoiceLabel.this.onModelChanging();
    }
  }
;
  editor.setOutputMarkupId(true);
  editor.setVisible(false);
  editor.add(new EditorAjaxBehavior(){
    private static final long serialVersionUID=1L;
    @Override public void renderHead(    final Component component,    final IHeaderResponse response){
      super.renderHead(component,response);
      AjaxRequestAttributes saveAttributes=getAttributes();
      saveAttributes.getExtraParameters().put("save","true");
      saveAttributes.getDynamicExtraParameters().add("this.name+'='+Wicket.Form.encode(this.value)");
      saveAttributes.setEventName("change");
      CharSequence saveAttributesJson=renderAjaxAttributes(component,saveAttributes);
      String saveCall="Wicket.Ajax.ajax(" + saveAttributesJson + ")";
      AjaxRequestTarget target=AjaxRequestTarget.get();
      if (target != null) {
        target.appendJavaScript(saveCall);
      }
 else {
        response.render(JavaScriptHeaderItem.forScript(saveCall,"editable-blur-" + component.getMarkupId()));
      }
    }
  }
);
  return editor;
}
