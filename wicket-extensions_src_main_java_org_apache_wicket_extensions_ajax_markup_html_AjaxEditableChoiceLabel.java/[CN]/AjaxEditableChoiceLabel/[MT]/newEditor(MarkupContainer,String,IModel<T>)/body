{
  IModel<List<? extends T>> choiceModel=new AbstractReadOnlyModel<List<? extends T>>(){
    private static final long serialVersionUID=1L;
    @Override public List<? extends T> getObject(){
      return choices.getObject();
    }
  }
;
  DropDownChoice<T> editor=new DropDownChoice<T>(componentId,model,choiceModel,renderer){
    private static final long serialVersionUID=1L;
    @Override protected void onModelChanged(){
      AjaxEditableChoiceLabel.this.onModelChanged();
    }
    @Override protected void onModelChanging(){
      AjaxEditableChoiceLabel.this.onModelChanging();
    }
  }
;
  editor.setOutputMarkupId(true);
  editor.setVisible(false);
  editor.add(new EditorAjaxBehavior(){
    private static final long serialVersionUID=1L;
    @Override protected void updateAjaxAttributes(    AjaxRequestAttributes attributes){
      super.updateAjaxAttributes(attributes);
      attributes.setEventNames("change");
      attributes.getExtraParameters().put("save","true");
      List<CharSequence> dynamicParameters=attributes.getDynamicExtraParameters();
      dynamicParameters.add("return Wicket.Form.serializeElement(attrs.c)");
    }
  }
);
  return editor;
}
