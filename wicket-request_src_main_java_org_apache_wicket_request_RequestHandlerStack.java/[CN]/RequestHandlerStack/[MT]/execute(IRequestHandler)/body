{
  requestHandlers.add(handler);
  try {
    respond(handler);
  }
 catch (  RuntimeException exception) {
    ReplaceHandlerException replacer=Exceptions.findCause(exception,ReplaceHandlerException.class);
    if (replacer == null) {
      throw exception;
    }
    if (replacer.removeAll) {
      scheduledAfterCurrent=null;
      throw exception;
    }
  }
 finally {
    requestHandlers.poll();
    inactiveRequestHandlers.add(handler);
  }
  IRequestHandler scheduled=scheduledAfterCurrent;
  scheduledAfterCurrent=null;
  return scheduled;
}
