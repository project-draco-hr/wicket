{
  try {
    IRequestCodingStrategy requestCodingStrategy=requestCycle.getProcessor().getRequestCodingStrategy();
    final String path=requestParameters.getPath();
    IRequestHandler target=null;
    if (requestParameters.getBookmarkablePageClass() != null) {
      target=resolveBookmarkablePage(requestCycle,requestParameters);
    }
 else     if (requestParameters.getComponentPath() != null) {
      int processRequest=0;
      if (processRequest == 0) {
        try {
          target=resolveRenderedPage(requestCycle,requestParameters);
        }
 catch (        IgnoreAjaxRequestException e) {
          target=EmptyAjaxRequestHandler.getInstance();
        }
      }
 else {
        Request request=requestCycle.getRequest();
        if (request instanceof WebRequest && ((WebRequest)request).isAjax() && processRequest == 2) {
          target=EmptyAjaxRequestHandler.getInstance();
        }
 else {
          throw new PageExpiredException("Request cannot be processed");
        }
      }
    }
 else     if (requestParameters.getResourceKey() != null) {
      target=resolveSharedResource(requestCycle,requestParameters);
    }
 else     if (Strings.isEmpty(path) || ("/".equals(path))) {
      target=resolveHomePageTarget(requestCycle,requestParameters);
    }
    if (target == null) {
      target=requestCodingStrategy.targetForRequest(requestParameters);
      if (target == null && requestParameters.getComponentPath() != null) {
        throw new PageExpiredException("Cannot find the rendered page in session [pagemap=" + requestParameters.getPageMapName() + ",componentPath="+ requestParameters.getComponentPath()+ ",versionNumber="+ requestParameters.getVersionNumber()+ "]");
      }
    }
 else {
      if (Application.get().getSecuritySettings().getEnforceMounts() && requestCodingStrategy.pathForTarget(target) != null) {
        boolean homepage=false;
        if (target instanceof BookmarkablePageRequestTarget) {
          final BookmarkablePageRequestTarget bt=(BookmarkablePageRequestTarget)target;
          if (bt.getPageClass().equals(Application.get().getHomePage())) {
            homepage=true;
          }
        }
        if (!homepage) {
          String msg="Direct access not allowed for mounted targets";
          log.error(msg + " [request=" + requestCycle.getRequest()+ ",target="+ target+ ",session="+ Session.get()+ "]");
          throw new AbortWithWebErrorCodeException(HttpServletResponse.SC_FORBIDDEN,msg);
        }
      }
    }
    return target;
  }
 catch (  WicketRuntimeException e) {
    if (e instanceof PageExpiredException) {
      throw e;
    }
 else     if (e.getCause() instanceof PageExpiredException) {
      throw e;
    }
 else {
      throw new InvalidUrlException(e);
    }
  }
}
