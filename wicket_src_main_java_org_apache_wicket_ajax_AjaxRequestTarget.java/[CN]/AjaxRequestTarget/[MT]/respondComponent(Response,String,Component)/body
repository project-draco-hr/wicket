{
  if (component.getRenderBodyOnly() == true) {
    throw new IllegalStateException("Ajax render cannot be called on component that has setRenderBodyOnly enabled. Component: " + component.toString());
  }
  component.setOutputMarkupId(true);
  final Response originalResponse=response;
  encodingBodyResponse.reset();
  RequestCycle.get().setResponse(encodingBodyResponse);
  final Page page=component.findParent(Page.class);
  if (page == null) {
    LOG.debug("component: " + component + " with markupid: "+ markupId+ " not rendered because it was already removed from page");
    return;
  }
  page.startComponentRender(component);
  try {
    component.prepareForRender();
    respondHeaderContribution(response,component);
  }
 catch (  RuntimeException e) {
    try {
      component.afterRender();
    }
 catch (    RuntimeException e2) {
    }
    RequestCycle.get().setResponse(originalResponse);
    encodingBodyResponse.reset();
    throw e;
  }
  try {
    component.render();
  }
 catch (  RuntimeException e) {
    RequestCycle.get().setResponse(originalResponse);
    encodingBodyResponse.reset();
    throw e;
  }
  page.endComponentRender(component);
  RequestCycle.get().setResponse(originalResponse);
  response.write("<component id=\"");
  response.write(markupId);
  response.write("\" ");
  if (encodingBodyResponse.isContentsEncoded()) {
    response.write(" encoding=\"");
    response.write(getEncodingName());
    response.write("\" ");
  }
  response.write("><![CDATA[");
  response.write(encodingBodyResponse.getContents());
  response.write("]]></component>");
  encodingBodyResponse.reset();
}
