{
  final GuiceInjectorHolder holder=Application.get().getMetaData(GuiceInjectorHolder.INJECTOR_KEY);
  final Type type;
  try {
    Class<?> clazz=WicketObjects.resolveClass(className);
    final Field field=clazz.getDeclaredField(fieldName);
    type=field.getGenericType();
  }
 catch (  Exception e) {
    throw new WicketRuntimeException("Error accessing member: " + fieldName + " of class: "+ className,e);
  }
  final Key<?> key;
  if (bindingAnnotation == null) {
    key=Key.get(TypeLiteral.get(type));
  }
 else {
    key=Key.get(TypeLiteral.get(type),bindingAnnotation);
  }
  Injector injector=holder.getInjector();
  if (optional) {
    try {
      if (injector.getBinding(key) == null) {
        return null;
      }
    }
 catch (    RuntimeException e) {
      return null;
    }
  }
  return injector.getInstance(key);
}
