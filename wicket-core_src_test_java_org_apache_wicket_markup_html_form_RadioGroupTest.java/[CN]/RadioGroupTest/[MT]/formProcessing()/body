{
  Model<String> model=new Model<String>();
  RadioGroupProcessingTestPage page=new RadioGroupProcessingTestPage(model);
  model.setObject("initial");
  tester.startPage(page);
  tester.submitForm(page.form);
  assertTrue("group: running with nothing selected - model must be set to null",model.getObject() == null);
  tester.getRequest().getPostParameters().setParameterValue(page.group.getInputName(),page.radio1.getValue());
  tester.submitForm(page.form);
  assertEquals("group: running with choice1 selected - model must be set to value of radio1",model.getObject(),"radio1");
  tester.getRequest().getPostParameters().setParameterValue(page.group.getInputName(),page.radio2.getValue());
  tester.submitForm(page.form);
  assertEquals("group: running with choice2 selected - model must be set to value of radio2",model.getObject(),"radio2");
  tester.getRequest().getPostParameters().setParameterValue(page.group.getInputName(),"some weird choice uuid to test error");
  try {
    tester.submitForm(page.form);
    fail("group: ran with an invalid choice selected but did not fail");
  }
 catch (  WicketRuntimeException e) {
  }
}
