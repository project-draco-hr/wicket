{
  this.path=path;
  this.workingForm=workingForm;
  baseWicketTester=wicketTester;
  baseWicketTester.setupRequestAndResponse();
  workingForm.visitFormComponents(new FormComponent.AbstractVisitor(){
    public void onFormComponent(    final FormComponent formComponent){
      if (!formComponent.isVisibleInHierarchy()) {
        return;
      }
      if (formComponent instanceof AbstractTextComponent) {
        if (Strings.isEmpty(formComponent.getValue())) {
          if (fillBlankString) {
            setFormComponentValue(formComponent,"");
          }
        }
 else {
          setFormComponentValue(formComponent,formComponent.getValue());
        }
      }
 else       if ((formComponent instanceof DropDownChoice) || (formComponent instanceof RadioChoice) || (formComponent instanceof CheckBox)) {
        setFormComponentValue(formComponent,formComponent.getValue());
      }
 else       if (formComponent instanceof ListMultipleChoice) {
        final String[] modelValues=formComponent.getValue().split(FormComponent.VALUE_SEPARATOR);
        for (int i=0; i < modelValues.length; i++) {
          addFormComponentValue(formComponent,modelValues[i]);
        }
      }
 else       if (formComponent instanceof CheckGroup) {
        final Collection checkGroupValues=(Collection)formComponent.getModelObject();
        formComponent.visitChildren(Check.class,new IVisitor(){
          public Object component(          Component component){
            if (checkGroupValues.contains(component.getModelObject())) {
              addFormComponentValue(formComponent,((Check)component).getValue());
            }
            return CONTINUE_TRAVERSAL;
          }
        }
);
      }
 else       if (formComponent instanceof RadioGroup) {
        final Object value=formComponent.getModelObject();
        if (value != null) {
          formComponent.visitChildren(Radio.class,new IVisitor(){
            public Object component(            Component component){
              if (value.equals(component.getModelObject())) {
                addFormComponentValue(formComponent,((Radio)component).getValue());
                return STOP_TRAVERSAL;
              }
              return CONTINUE_TRAVERSAL_BUT_DONT_GO_DEEPER;
            }
          }
);
        }
      }
    }
  }
);
}
