{
  final Page page=container.getPage();
  final String originalHref=tag.getAttributes().getString("href");
  PageParameters pageParameters=null;
  String classPath=originalHref;
  int pos=originalHref.indexOf("?");
  if (pos != -1) {
    final String queryString=originalHref.substring(pos + 1);
    pageParameters=new PageParameters(new ValueMap(queryString,"&"));
    classPath=originalHref.substring(0,pos);
  }
  final String autoId=id + Integer.toString(page.getAutoIndex());
  tag.setId(autoId);
  String extension=null;
  pos=classPath.lastIndexOf(".");
  if (pos != -1) {
    extension=classPath.substring(pos + 1);
    classPath=classPath.substring(0,pos);
  }
  if ("html".equalsIgnoreCase(extension)) {
    classPath=Strings.replaceAll(classPath,"/",".");
    if (!classPath.startsWith(".")) {
      final String className=page.getClass().getPackage().getName() + "." + classPath;
      final Class clazz=page.getApplicationSettings().getDefaultClassResolver().resolveClass(className);
      return new AutolinkBookmarkablePageLink(autoId,clazz,pageParameters);
    }
 else {
      final String className=classPath.substring(1);
      try {
        final Class clazz=page.getApplicationSettings().getDefaultClassResolver().resolveClass(className);
        return new AutolinkBookmarkablePageLink(autoId,clazz,pageParameters);
      }
 catch (      WicketRuntimeException ex) {
        ;
      }
    }
  }
 else {
    if (classPath.startsWith("/") || classPath.startsWith("\\")) {
    }
 else {
      Component relevantContainer=container;
      if (container instanceof HtmlHeaderContainer) {
        relevantContainer=findPanelComponent(container);
      }
      if (container instanceof BodyOnLoadContainer) {
        relevantContainer=container.getParent();
      }
      String href=relevantContainer.getClass().getPackage().getName();
      href=Strings.replaceAll(href,".","/") + "/" + originalHref;
      return new AutolinkExternalLink(autoId,href);
    }
  }
  return new AutolinkExternalLink(autoId,originalHref);
}
