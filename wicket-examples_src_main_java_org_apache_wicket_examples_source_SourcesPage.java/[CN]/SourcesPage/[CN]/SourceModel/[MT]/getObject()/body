{
  StringValue sourceParam=getPageParameters().get(SOURCE);
  if (Strings.isEmpty(name) && sourceParam.isEmpty()) {
    return "";
  }
  BufferedReader br=null;
  String source=null;
  try {
    StringBuilder sb=new StringBuilder();
    source=(name != null) ? name : sourceParam.toString();
    InputStream resourceAsStream=getPageTargetClass().getResourceAsStream(source);
    if (resourceAsStream == null) {
      return "Unable to read the source for " + source;
    }
    br=new BufferedReader(new InputStreamReader(resourceAsStream));
    while (br.ready()) {
      sb.append(br.readLine());
      sb.append('\n');
    }
    int lastDot=source.lastIndexOf('.');
    if (lastDot != -1) {
      String type=source.substring(lastDot + 1);
      Renderer renderer=XhtmlRendererFactory.getRenderer(type);
      if (renderer != null) {
        return renderer.highlight(source,sb.toString(),"UTF-8",true);
      }
    }
    CharSequence escaped=Strings.escapeMarkup(sb.toString(),false,true);
    return Strings.replaceAll(escaped,"\n","<br />").toString();
  }
 catch (  IOException e) {
    log.error("Unable to read resource stream for: " + source + "; Page="+ page.toString(),e);
    return "";
  }
 finally {
    IOUtils.closeQuietly(br);
  }
}
