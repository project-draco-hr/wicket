{
  StringValue sourceParam=getPageParameters().get(SOURCE);
  if (Strings.isEmpty(name) && sourceParam.isEmpty()) {
    return "";
  }
  String source=null;
  InputStream resourceAsStream=null;
  try {
    source=(name != null) ? name : sourceParam.toString();
    resourceAsStream=getPageTargetClass().getResourceAsStream(source);
    if (resourceAsStream == null) {
      return "Unable to read the source for " + source;
    }
    int lastDot=source.lastIndexOf('.');
    if (lastDot != -1) {
      String type=source.substring(lastDot + 1);
      Renderer renderer=XhtmlRendererFactory.getRenderer(type);
      if (renderer != null) {
        ByteArrayOutputStream output=new ByteArrayOutputStream();
        renderer.highlight(source,resourceAsStream,output,"UTF-8",true);
        return output.toString("UTF-8");
      }
    }
    CharSequence escaped=Strings.escapeMarkup(IOUtils.toString(resourceAsStream),false,true);
    return Strings.replaceAll(escaped,"\n","<br />").toString();
  }
 catch (  IOException e) {
    log.error("Unable to read resource stream for: " + source + "; Page="+ page.toString(),e);
    return "";
  }
 finally {
    IOUtils.closeQuietly(resourceAsStream);
  }
}
