{
  super(id);
  ListView<String> lv=new ListView<String>("file",new PackagedResourcesModel()){
    @Override protected void populateItem(    final ListItem<String> item){
      AjaxFallbackLink<String> link=new AjaxFallbackLink<String>("link",item.getModel()){
        @Override public void onClick(        AjaxRequestTarget target){
          setName(getDefaultModelObjectAsString());
          if (target != null) {
            target.addComponent(codePanel);
            target.addComponent(filename);
          }
        }
        @Override protected CharSequence getURL(){
          CharSequence url=urlFor(SourcesPage.class,SourcesPage.generatePageParameters(getPageTargetClass(),item.getModel().getObject()));
          return url;
        }
        @Override protected IAjaxCallDecorator getAjaxCallDecorator(){
          return new IAjaxCallDecorator(){
            public CharSequence decorateOnFailureScript(            Component c,            CharSequence script){
              return "window.location=this.href;";
            }
            public CharSequence decorateOnSuccessScript(            Component c,            CharSequence script){
              if (script == null) {
                return "";
              }
              return script;
            }
            public CharSequence decorateScript(            Component c,            CharSequence script){
              int index=script.toString().indexOf('?');
              if (index >= 0) {
                String test=script.subSequence(0,index + 1) + PAGE_CLASS + "=1"+ "&"+ script.subSequence(index + 1,script.length());
                return test;
              }
              return script;
            }
          }
;
        }
      }
;
      link.add(new Label("name",item.getDefaultModelObjectAsString()));
      item.add(link);
    }
  }
;
  add(lv);
}
