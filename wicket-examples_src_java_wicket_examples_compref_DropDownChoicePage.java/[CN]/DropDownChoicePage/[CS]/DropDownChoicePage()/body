{
  final Input input=new Input();
  setModel(new CompoundPropertyModel<Input>(input));
  FeedbackPanel feedbackPanel=new FeedbackPanel(this,"feedback");
  Form form=new Form(this,"form"){
    @Override protected void onSubmit(){
      info("input: " + input);
    }
  }
;
  new DropDownChoice<String>(form,"site",SITES);
  new DropDownChoice<Integer>(form,"integer",INTEGERS,new IChoiceRenderer<Integer>(){
    /** 
 * Gets the display value that is visible to the end user.
 * @see wicket.markup.html.form.IChoiceRenderer#getDisplayValue(java.lang.Object)
 */
    public Object getDisplayValue(    Integer object){
      String stringrep;
      int value=((Integer)object).intValue();
switch (value) {
case 1:
        stringrep="One";
      break;
case 2:
    stringrep="Two";
  break;
case 3:
stringrep="Three";
break;
default :
throw new IllegalStateException(value + " is not mapped!");
}
return stringrep;
}
/** 
 * Gets the value that is invisble to the end user, and that is used
 * as the selection id.
 * @see wicket.markup.html.form.IChoiceRenderer#getIdValue(java.lang.Object,int)
 */
public String getIdValue(Integer object,int index){
return String.valueOf(INTEGERS.get(index));
}
}
);
}
