{
  if (getApplication().getMarkupFragmentEnabled()) {
    IMarkupFragment markup=getMarkup();
    if (!(this instanceof Page) && (markup == null)) {
      throw new IllegalArgumentException("MarkupFragment not found: " + toString() + ". Please see Application.getMarkupFragmentEnabled() as well.");
    }
    if ((markupStream != null) || !(this instanceof Page)) {
      MarkupStream ms=new MarkupStream(markup);
      if (markupStream != null) {
        markupStream.skipComponent();
      }
      markupStream=ms;
    }
  }
  if (markupStream != null) {
    markupIndex=markupStream.getCurrentIndex();
  }
  markRendering(true);
  setMarkupStream(markupStream);
  if (markupStream != null) {
    markupStream.getTag().onBeforeRender(this,markupStream);
  }
  if (determineVisibility()) {
    setFlag(FLAG_HAS_BEEN_RENDERED,true);
    if (log.isDebugEnabled()) {
      log.debug("Begin render " + this);
    }
    try {
      notifyBehaviorsComponentBeforeRender();
      onRender(markupStream);
      notifyBehaviorsComponentRendered();
      rendered();
    }
 catch (    RuntimeException ex) {
      for (      IBehavior behavior : getBehaviors()) {
        if (isBehaviorAccepted(behavior)) {
          try {
            behavior.exception(this,ex);
          }
 catch (          Throwable ex2) {
            log.error("Error while cleaning up after exception",ex2);
          }
        }
      }
      throw ex;
    }
    if (log.isDebugEnabled()) {
      log.debug("End render " + this);
    }
  }
 else   if (markupStream != null) {
    if (getFlag(FLAG_PLACEHOLDER)) {
      final ComponentTag tag=markupStream.getTag();
      renderPlaceholderTag(tag,getResponse());
    }
    markupStream.skipComponent();
  }
}
