{
  String userAgent=(getUserAgent() != null) ? getUserAgent().toLowerCase() : "";
  boolean browserChrome=userAgent.indexOf("chrome") != -1;
  boolean browserOpera=userAgent.indexOf("opera") != -1;
  boolean browserKonqueror=userAgent.indexOf("konqueror") != -1;
  boolean deceptiveUserAgent=browserOpera || browserKonqueror || browserChrome;
  boolean browserSafari=!deceptiveUserAgent && userAgent.indexOf("safari") != -1;
  deceptiveUserAgent=deceptiveUserAgent || browserSafari;
  boolean browserMozilla=!deceptiveUserAgent && userAgent.indexOf("gecko") != -1;
  boolean browserFireFox=userAgent.indexOf("firefox") != -1;
  boolean browserInternetExplorer=!deceptiveUserAgent && userAgent.indexOf("msie") != -1;
  int majorVersion=-1, minorVersion=-1;
  if (browserOpera) {
    properties.setBrowserOpera(true);
  }
 else   if (browserKonqueror) {
    properties.setBrowserKonqueror(true);
  }
 else   if (browserSafari) {
    properties.setBrowserSafari(true);
  }
 else   if (browserChrome) {
    properties.setBrowserChrome(true);
  }
 else   if (browserMozilla) {
    properties.setBrowserMozilla(true);
    if (browserFireFox) {
      properties.setBrowserMozillaFirefox(true);
    }
  }
 else   if (browserInternetExplorer) {
    properties.setBrowserInternetExplorer(true);
    Matcher matcher=Pattern.compile("msie (\\d+)").matcher(userAgent);
    if (matcher.find()) {
      majorVersion=Integer.parseInt(matcher.group(1));
    }
  }
  if (majorVersion != -1) {
    properties.setBrowserVersionMajor(majorVersion);
  }
  if (minorVersion != -1) {
    properties.setBrowserVersionMinor(minorVersion);
  }
  if (browserInternetExplorer) {
    properties.setProprietaryIECssExpressionsSupported(true);
    properties.setQuirkCssPositioningOneSideOnly(true);
    properties.setQuirkIERepaint(true);
    properties.setQuirkIESelectZIndex(true);
    properties.setQuirkIETextareaNewlineObliteration(true);
    properties.setQuirkIESelectPercentWidth(true);
    properties.setQuirkIESelectListDomUpdate(true);
    properties.setQuirkIETablePercentWidthScrollbarError(true);
    properties.setQuirkCssBackgroundAttachmentUseFixed(true);
    properties.setQuirkCssBorderCollapseInside(true);
    properties.setQuirkCssBorderCollapseFor0Padding(true);
    if (majorVersion < 7) {
      properties.setProprietaryIEPngAlphaFilterRequired(true);
    }
  }
  if (browserMozilla) {
    properties.setQuirkMozillaTextInputRepaint(true);
    properties.setQuirkMozillaPerformanceLargeDomRemove(true);
  }
  if (log.isDebugEnabled()) {
    log.debug("determined user agent: " + properties);
  }
}
