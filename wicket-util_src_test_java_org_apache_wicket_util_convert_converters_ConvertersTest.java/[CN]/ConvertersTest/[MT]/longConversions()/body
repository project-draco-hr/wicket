{
  LongConverter converter=new LongConverter();
  assertNull(converter.convertToObject("",Locale.US));
  assertEquals(new Long(10),converter.convertToObject("10",Locale.US));
  assertEquals("10",converter.convertToString((long)10,Locale.US));
  try {
    converter.convertToObject("whatever",Locale.US);
    fail("Conversion should have thrown an exception");
  }
 catch (  ConversionException e) {
  }
  try {
    converter.convertToObject("10whatever",Locale.US);
    fail("Conversion should have thrown an exception");
  }
 catch (  ConversionException e) {
  }
  try {
    converter.convertToObject("1" + Long.MAX_VALUE,Locale.US);
    fail("Conversion should have thrown an exception");
  }
 catch (  ConversionException e) {
  }
  try {
    final String biggerThanLong="9223372036854776833";
    assertEquals(1,new BigDecimal(biggerThanLong).compareTo(BigDecimal.valueOf(Long.MAX_VALUE)));
    converter.convertToObject(biggerThanLong,Locale.US);
    fail("Conversion should have thrown an exception");
  }
 catch (  ConversionException e) {
  }
  try {
    final String biggerThanLong="9223372036854776832";
    assertEquals(1,new BigDecimal(biggerThanLong).compareTo(BigDecimal.valueOf(Long.MAX_VALUE)));
    converter.convertToObject(biggerThanLong,Locale.US);
    fail("Conversion should have thrown an exception");
  }
 catch (  ConversionException e) {
  }
}
