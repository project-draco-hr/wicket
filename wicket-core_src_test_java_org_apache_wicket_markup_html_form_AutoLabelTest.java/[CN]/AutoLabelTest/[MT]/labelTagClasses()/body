{
class MyTestPage extends TestPage {
    private static final long serialVersionUID=1L;
    public MyTestPage(){
      super("<label wicket:for='t'><span class='label-text'>field</span></label>");
    }
  }
class MyErrorTestPage extends MyTestPage {
    private static final long serialVersionUID=1L;
    @Override protected void onConfigure(){
      super.onConfigure();
      field.error("too short");
    }
  }
  TestPage page=new MyTestPage();
  assertNotRendered(page,"class='required'");
  page.field.setRequired(true);
  assertRendered(page,"class='required'");
  page=new MyTestPage();
  assertNotRendered(page,"class='error'");
  page=new MyErrorTestPage();
  assertRendered(page,"class='error'");
  page=new MyErrorTestPage();
  page.field.setRequired(true);
  tester.startPage(page);
  String markup=tester.getLastResponse().getDocument();
  assertTrue(markup.contains("class=\"required error\"") || markup.contains("class=\"error required\""));
class MyTestPage2 extends TestPage {
    private static final long serialVersionUID=1L;
    public MyTestPage2(){
      super("<label class='long' wicket:for='t'><wicket:label>field</wicket:label></label>");
    }
  }
  MyTestPage2 page2=new MyTestPage2();
  page2.field.setRequired(true);
  tester.startPage(page2);
  markup=tester.getLastResponse().getDocument();
  assertTrue(markup.contains("class=\"required long\"") || markup.contains("class=\"long required\""));
}
