{
  super(parent,id);
  if (settings == null) {
    throw new IllegalArgumentException("Settings must be non null when using this constructor");
  }
  this.settings=settings;
  if (target == null) {
    throw new IllegalArgumentException("Target must be not null");
  }
  target.add(new PathAttributeModifier("id",target));
  this.target=target;
  if (label != null) {
    label.add(new PathAttributeModifier("for",target));
  }
  triggerButton=new TriggerButton(this,"trigger",settings.getIcon());
  new InitScript(this,"script");
  new JavaScriptReference(this,"calendarMain",DatePicker.class,"calendar.js");
  new JavaScriptReference(this,"calendarSetup",DatePicker.class,"calendar-setup.js");
  new JavaScriptReference(this,"calendarLanguage",new Model<ResourceReference>(){
    private static final long serialVersionUID=1L;
    @Override public ResourceReference getObject(    Component component){
      return settings.getLanguage(DatePicker.this.getLocale());
    }
  }
);
  new StyleSheetReference(this,"calendarStyle",settings.getStyle());
}
