{
  Map beans=BeanFactoryUtils.beansOfTypeIncludingAncestors(ctx,clazz);
  if (beans.size() == 0) {
    throw new IllegalStateException("bean of type [" + clazz.getName() + "] not found");
  }
  if (beans.size() > 1) {
    final String defaultName=Classes.simpleName(clazz);
    final Iterator entries=beans.entrySet().iterator();
    while (entries.hasNext()) {
      Map.Entry beanDef=(Entry)entries.next();
      if (defaultName.equalsIgnoreCase((String)beanDef.getKey())) {
        return beanDef.getValue();
      }
    }
    String msg="more then one bean of type [[" + clazz.getName() + "]] found, you have to specify the name of the bean (@SpringBean(name=\"foo\")) in order to resolve this conflict. Beans that match type [[";
    Iterator beanNames=beans.keySet().iterator();
    while (beanNames.hasNext()) {
      String beanName=(String)beanNames.next();
      msg+=beanName;
      if (beanNames.hasNext()) {
        msg+=", ";
      }
    }
    msg+="]]";
    throw new IllegalStateException(msg);
  }
  return beans.values().iterator().next();
}
