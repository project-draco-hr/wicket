{
  super(id,new Model<Integer>(-1));
  this.tabs=Args.notNull(tabs,"tabs");
  final IModel<Long> tabCount=new AbstractReadOnlyModel<Long>(){
    private static final long serialVersionUID=1L;
    @Override public Long getObject(){
      return (long)TabbedPanel.this.tabs.size();
    }
  }
;
  WebMarkupContainer tabsContainer=newTabsContainer("tabs-container");
  add(tabsContainer);
  tabsContainer.add(new Loop("tabs",tabCount){
    private static final long serialVersionUID=1L;
    @Override protected void populateItem(    final LoopItem item){
      final int index=(int)item.getIndex();
      final ITab tab=TabbedPanel.this.tabs.get(index);
      final WebMarkupContainer titleLink=newLink("link",index);
      titleLink.add(newTitle("title",tab.getTitle(),index));
      item.add(titleLink);
    }
    @Override protected LoopItem newItem(    final long iteration){
      return newTabContainer(iteration);
    }
  }
);
}
