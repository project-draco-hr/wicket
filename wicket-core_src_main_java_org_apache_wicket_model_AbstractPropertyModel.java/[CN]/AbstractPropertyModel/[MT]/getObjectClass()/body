{
  final String expression=propertyExpression();
  if (Strings.isEmpty(expression)) {
    Object target=getInnermostModelOrObject();
    return (Class<T>)(target != null ? target.getClass() : null);
  }
  final Object target=getInnermostModelOrObject();
  if (target != null) {
    try {
      return (Class<T>)PropertyResolver.getPropertyClass(expression,target);
    }
 catch (    Exception e) {
    }
  }
 else   if (getTarget() instanceof IObjectClassAwareModel) {
    try {
      Class<?> targetClass=((IObjectClassAwareModel<?>)getTarget()).getObjectClass();
      if (targetClass != null) {
        return PropertyResolver.getPropertyClass(expression,targetClass);
      }
    }
 catch (    WicketRuntimeException e) {
    }
  }
  return null;
}
