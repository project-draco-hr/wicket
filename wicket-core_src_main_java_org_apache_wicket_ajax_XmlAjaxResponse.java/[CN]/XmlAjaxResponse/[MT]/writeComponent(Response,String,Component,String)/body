{
  if (component.getRenderBodyOnly() == true) {
    throw new IllegalStateException("Ajax render cannot be called on component that has setRenderBodyOnly enabled. Component: " + component.toString());
  }
  component.setOutputMarkupId(true);
  final Page page=component.findParent(Page.class);
  if (page == null) {
    LOG.warn("Component '{}' with markupid: '{}' not rendered because it was already removed from page",component,markupId);
    return;
  }
  Response oldResponse=RequestCycle.get().setResponse(encodingBodyResponse);
  try {
    encodingBodyResponse.reset();
    page.startComponentRender(component);
    try {
      component.prepareForRender();
      writeHeaderContribution(response,component);
    }
 catch (    RuntimeException e) {
      try {
        component.afterRender();
      }
 catch (      RuntimeException e2) {
      }
      encodingBodyResponse.reset();
      throw e;
    }
    try {
      component.render();
    }
 catch (    RuntimeException e) {
      encodingBodyResponse.reset();
      throw e;
    }
    page.endComponentRender(component);
  }
  finally {
    RequestCycle.get().setResponse(oldResponse);
  }
  response.write("<component id=\"");
  response.write(markupId);
  response.write("\" ");
  if (encodingBodyResponse.isContentsEncoded()) {
    response.write(" encoding=\"");
    response.write(getEncodingName());
    response.write("\" ");
  }
  response.write("><![CDATA[");
  response.write(encodingBodyResponse.getContents());
  response.write("]]></component>");
  encodingBodyResponse.reset();
}
