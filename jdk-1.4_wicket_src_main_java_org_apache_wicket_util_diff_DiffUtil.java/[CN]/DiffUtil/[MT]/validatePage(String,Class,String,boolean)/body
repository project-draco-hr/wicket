{
  String filename=clazz.getPackage().getName();
  filename=filename.replace('.','/');
  filename+="/" + file;
  InputStream in=clazz.getClassLoader().getResourceAsStream(filename);
  if (in == null) {
    throw new IOException("File not found: " + filename);
  }
  String reference=Streams.readString(in);
  reference=reference.replaceAll("\n\r","\n");
  reference=reference.replaceAll("\r\n","\n");
  document=document.replaceAll("\n\r","\n");
  document=document.replaceAll("\r\n","\n");
  boolean equals=compareMarkup(document,reference);
  if (equals == false) {
    if (Boolean.getBoolean("wicket.replace.expected.results")) {
      in.close();
      in=null;
      replaceExpectedResultFile(document,clazz,file);
      return true;
    }
    log.error("File name: " + file);
    log.error("===================");
    log.error(reference);
    log.error("===================");
    log.error(document);
    log.error("===================");
    String[] test1=StringList.tokenize(reference,"\n").toArray();
    String[] test2=StringList.tokenize(document,"\n").toArray();
    Diff df=new Diff(test1);
    Revision r;
    try {
      r=df.diff(test2);
    }
 catch (    DifferentiationFailedException e) {
      throw new RuntimeException(e);
    }
    System.out.println(r.toString());
    if (failWithAssert) {
      Assert.assertEquals(filename,reference,document);
    }
  }
  return equals;
}
