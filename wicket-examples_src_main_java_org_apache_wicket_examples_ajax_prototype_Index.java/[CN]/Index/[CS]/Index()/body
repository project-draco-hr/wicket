{
  add(new Link<Void>("link"){
    private static final long serialVersionUID=1L;
    /** 
 * Handles a click on the link. This method is accessed normally using a standard http
 * request, but in this example, we use Ajax to perform the call.
 */
    @Override public void onClick(){
      count++;
      getRequestCycle().replaceAllRequestHandlers(new ComponentRenderingRequestHandler(counter));
    }
    /** 
 * Alter the javascript 'onclick' event to emit the Ajax call and update the counter
 * label.
 */
    @Override protected String getOnClickScript(    CharSequence url){
      IRequestHandler handler=new ListenerInterfaceRequestHandler(new PageAndComponentProvider(getPage(),this),ILinkListener.INTERFACE);
      Url componentUrl=RequestCycle.get().mapUrlFor(handler);
      componentUrl.addQueryParameter("anticache",Math.random());
      return new AppendingStringBuffer("new Ajax.Updater('counter', '").append(componentUrl).append("', {method:'get'}); return false;").toString();
    }
  }
);
  add(counter=new Label("counter",new PropertyModel<>(this,"count")));
}
