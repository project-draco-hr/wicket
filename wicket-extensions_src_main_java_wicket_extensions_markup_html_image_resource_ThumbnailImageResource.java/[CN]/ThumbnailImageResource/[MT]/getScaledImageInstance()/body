{
  InputStream is=null;
  BufferedImage originalImage=null;
  try {
    is=unscaledImageResource.getResourceStream().getInputStream();
    originalImage=ImageIO.read(is);
    if (originalImage == null) {
      throw new IOException("unable to read image");
    }
  }
 catch (  IOException e) {
    throw new WicketRuntimeException(e);
  }
catch (  ResourceStreamNotFoundException e) {
    throw new WicketRuntimeException(e);
  }
 finally {
    if (is != null) {
      try {
        is.close();
      }
 catch (      IOException e) {
        log.error(e.getMessage(),e);
      }
    }
  }
  int originalWidth=originalImage.getWidth();
  int originalHeight=originalImage.getHeight();
  if (originalWidth > maxSize || originalHeight > maxSize) {
    final int newWidth;
    final int newHeight;
    if (originalWidth > originalHeight) {
      newWidth=maxSize;
      newHeight=(maxSize * originalHeight) / originalWidth;
    }
 else {
      newWidth=(maxSize * originalWidth) / originalHeight;
      newHeight=maxSize;
    }
    Image image=originalImage.getScaledInstance(newWidth,newHeight,scaleHints);
    BufferedImage bufferedImage=new BufferedImage(newWidth,newHeight,BufferedImage.TYPE_INT_ARGB);
    bufferedImage.createGraphics().drawImage(image,0,0,null);
    return bufferedImage;
  }
  return originalImage;
}
