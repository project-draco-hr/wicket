{
  Iterator<URL> wicketResources=getApplicationSettings().getClassResolver().getResources("META-INF/wicket/");
  while (wicketResources.hasNext()) {
    URL metaInfWicket=wicketResources.next();
    String protocol=metaInfWicket.getProtocol();
    if ("jar".equals(protocol) || "wsjar".equals(protocol)) {
      final URLConnection urlConnection=metaInfWicket.openConnection();
      if (urlConnection instanceof JarURLConnection) {
        JarURLConnection jarURLConnection=(JarURLConnection)urlConnection;
        JarFile jarFile=jarURLConnection.getJarFile();
        Enumeration<JarEntry> jarEntries=jarFile.entries();
        while (jarEntries.hasMoreElements()) {
          JarEntry jarEntry=jarEntries.nextElement();
          String entryName=jarEntry.getName();
          if (entryName.startsWith("META-INF/wicket/") && entryName.endsWith(".properties")) {
            try (InputStream jarEntryStream=jarFile.getInputStream(jarEntry)){
              log.warn("Found '{}' in '{}'. /META-INF/wicket/*.properties doesn't work in OSGi " + "and single-jar environments and is not supported anymore! " + "Please see https://issues.apache.org/jira/browse/WICKET-5997 for more details "+ "and report a issue for the library that still uses it.",entryName,metaInfWicket);
              Properties properties=new Properties();
              properties.load(jarEntryStream);
              load(properties);
              break;
            }
           }
        }
      }
    }
 else     if ("vfs".equals(protocol)) {
      URLConnection connection=metaInfWicket.openConnection();
      JarInputStream inputStream=(JarInputStream)connection.getInputStream();
      int offset=0;
      JarEntry jarEntry;
      while ((jarEntry=inputStream.getNextJarEntry()) != null) {
        String jarEntryName=jarEntry.getName();
        int size=(int)jarEntry.getSize();
        if (jarEntryName.endsWith(PROPERTIES_FILE_EXTENSION)) {
          byte[] buf=new byte[size];
          int read=inputStream.read(buf,offset,size);
          if (read == size) {
            log.warn("Found '{}' in '{}'. /META-INF/wicket/*.properties doesn't work in OSGi " + "and single-jar environments and is not supported anymore! " + "Please see https://issues.apache.org/jira/browse/WICKET-5997 for more "+ "details and report a issue for the library that still uses it.",jarEntryName,metaInfWicket);
            Properties properties=new Properties();
            properties.load(new ByteArrayInputStream(buf));
            load(properties);
          }
 else {
            log.warn("Expected to read '{}' bytes from '{}' but actually read '{}'",size,jarEntryName,read);
          }
        }
        offset+=size;
      }
    }
 else     if ("file".equals(protocol)) {
      Folder metaInfWicketFolder=new Folder(metaInfWicket.toURI());
      File[] files=metaInfWicketFolder.getFiles(new Folder.FileFilter(){
        @Override public boolean accept(        File file){
          String fileName=file.getAbsolutePath();
          return fileName.contains(META_INF_WICKET_PATH) && fileName.endsWith(PROPERTIES_FILE_EXTENSION);
        }
      }
);
      for (      File wicketPropertiesFile : files) {
        try (InputStream stream=wicketPropertiesFile.inputStream()){
          log.warn("Found '{}'. /META-INF/wicket/*.properties doesn't work in OSGi " + "and single-jar environments and is not supported anymore! " + "Please see https://issues.apache.org/jira/browse/WICKET-5997 for more "+ "details and report a issue for the library that still uses it.",wicketPropertiesFile);
          Properties properties=new Properties();
          properties.load(stream);
          load(properties);
        }
       }
    }
 else {
      log.error("Cannot load '{}'. The protocol '{}' is not supported!",metaInfWicket,protocol);
    }
  }
}
