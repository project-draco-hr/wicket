{
  while (!stop) {
    try {
      while (pagesToBeSerialized.size() == 0) {
        Thread.sleep(2000);
        if (stop)         return;
      }
      Iterator it=pagesToBeSerialized.entrySet().iterator();
      outer:       while (it.hasNext()) {
        Map.Entry entry=(Entry)it.next();
        List sessionList=(List)entry.getValue();
        while (true) {
          Page page=null;
          SessionPageKey key=null;
synchronized (sessionList) {
            if (sessionList.size() != 0) {
              key=(SessionPageKey)sessionList.get(0);
              if (key.data instanceof Page) {
                page=(Page)key.data;
                key.setObject(SERIALIZING);
              }
 else {
                sessionList.remove(0);
                System.err.println("shouldn't happen");
                continue;
              }
            }
            if (key == null) {
              pagesToBeSerialized.remove(entry.getKey());
              continue outer;
            }
          }
          byte[] pageBytes=serializePage(key,page);
          serializedInThread++;
synchronized (sessionList) {
            key.setObject(pageBytes);
            sessionList.remove(key);
            sessionList.notifyAll();
          }
          pagesToBeSaved.put(key,key);
        }
      }
    }
 catch (    Exception e) {
      log.error("Error in page save thread",e);
    }
  }
}
