{
  super(parameters);
  final Form<?> form=new Form<>("form");
  add(form);
  final CheckGroup<Integer> checkgroup=new CheckGroup<>("checkgroup",Arrays.asList(1,2,3,4));
  form.add(checkgroup);
  checkgroup.add(new Check<>("check1",Model.of(1)));
  checkgroup.add(new Check<>("check2",Model.of(2)));
  checkgroup.add(new Check<>("check3",Model.of(3)));
  checkgroup.add(new Check<>("check4",Model.of(4)));
  checkgroup.add(new CheckGroupSelector("groupSelector"){
    private static final long serialVersionUID=1L;
    @Override protected boolean wantAutomaticUpdate(){
      return true;
    }
  }
);
  form.add(new CheckGroupSelector("groupSelectorOutside",checkgroup){
    private static final long serialVersionUID=1L;
    @Override protected boolean wantAutomaticUpdate(){
      return true;
    }
  }
);
  final CheckBoxMultipleChoice<Integer> choice=new CheckBoxMultipleChoice<>("choice",Model.ofList(new ArrayList<>()),Arrays.asList(1,2,3,4));
  form.add(choice);
  form.add(new CheckboxMultipleChoiceSelector("choiceSelector",choice));
  final CheckBox loose1=new CheckBox("looseCheck1",Model.of(Boolean.FALSE));
  final CheckBox loose2=new CheckBox("looseCheck2",Model.of(Boolean.FALSE));
  final CheckBox loose3=new CheckBox("looseCheck3",Model.of(Boolean.FALSE));
  final CheckBox loose4=new CheckBox("looseCheck4",Model.of(Boolean.FALSE));
  form.add(loose1,loose2,loose3,loose4);
  form.add(new CheckBoxSelector("looseSelector",loose1,loose2,loose3,loose4));
}
