{
  final boolean first=requestHandlers.isEmpty();
  requestHandlers.add(handler);
  RequestHandler replacementHandler=null;
  Response originalResponse=response;
  try {
    handler.respond(getRequestCycle());
  }
 catch (  ReplaceHandlerException exception) {
    if (exception.removeAll && !first) {
      throw exception;
    }
    replacementHandler=exception.replacementRequestHandler;
  }
 finally {
    response=originalResponse;
    requestHandlers.poll();
    inactiveRequestHandlers.add(handler);
  }
  RequestHandler scheduled=scheduledAfterCurrent;
  scheduledAfterCurrent=null;
  if (replacementHandler != null) {
    executeRequestHandler(replacementHandler);
  }
 else   if (scheduled != null) {
    executeRequestHandler(scheduled);
  }
}
