{
  if (!isStarted) {
    final Runnable runnable=new Runnable(){
      @Override public void run(){
        startTime.fromNow().sleep();
        final Logger log=getLog();
        try {
          while (!stop) {
            final Time startOfPeriod=Time.now();
            if (log.isTraceEnabled()) {
              log.trace("Run the job: '{}'",code);
            }
            try {
              code.run(getLog());
            }
 catch (            Exception e) {
              log.error("Unhandled exception thrown by user code in task " + name,e);
            }
            if (log.isTraceEnabled()) {
              log.trace("Finished with job: '{}'",code);
            }
            startOfPeriod.add(frequency).fromNow().sleep();
          }
        }
 catch (        Exception x) {
          log.error("Task '{}' terminated",name,x);
        }
 finally {
          isStarted=false;
        }
      }
    }
;
    thread=new Thread(runnable,name + " Task");
    thread.setDaemon(isDaemon);
    thread.start();
    isStarted=true;
  }
 else {
    throw new IllegalStateException("Attempt to start task that has already been started");
  }
}
