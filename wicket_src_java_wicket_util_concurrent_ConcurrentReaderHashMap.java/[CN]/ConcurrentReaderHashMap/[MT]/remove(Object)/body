{
  int hash=hash(key);
  Entry[] tab=table;
  int index=hash & (tab.length - 1);
  Entry first=tab[index];
  Entry e=first;
  for (e=first; e != null; e=e.next)   if (e.hash == hash && eq(key,e.key))   break;
synchronized (this) {
    if (tab == table) {
      if (e == null) {
        if (first == tab[index])         return null;
      }
 else {
        Object oldValue=e.value;
        if (first == tab[index] && oldValue != null) {
          e.value=null;
          count--;
          Entry head=e.next;
          for (Entry p=first; p != e; p=p.next)           head=new Entry(p.hash,p.key,p.value,head);
          tab[index]=head;
          recordModification(head);
          return oldValue;
        }
      }
    }
    return sremove(key,hash);
  }
}
