{
  Entry[] oldTable=table;
  int oldCapacity=oldTable.length;
  if (oldCapacity >= MAXIMUM_CAPACITY) {
    threshold=Integer.MAX_VALUE;
    return;
  }
  int newCapacity=oldCapacity << 1;
  int mask=newCapacity - 1;
  threshold=(int)(newCapacity * loadFactor);
  Entry[] newTable=new Entry[newCapacity];
  for (int i=0; i < oldCapacity; i++) {
    Entry e=oldTable[i];
    if (e != null) {
      int idx=e.hash & mask;
      Entry next=e.next;
      if (next == null)       newTable[idx]=e;
 else {
        Entry lastRun=e;
        int lastIdx=idx;
        for (Entry last=next; last != null; last=last.next) {
          int k=last.hash & mask;
          if (k != lastIdx) {
            lastIdx=k;
            lastRun=last;
          }
        }
        newTable[lastIdx]=lastRun;
        for (Entry p=e; p != lastRun; p=p.next) {
          int k=p.hash & mask;
          newTable[k]=new Entry(p.hash,p.key,p.value,newTable[k]);
        }
      }
    }
  }
  table=newTable;
  recordModification(newTable);
}
