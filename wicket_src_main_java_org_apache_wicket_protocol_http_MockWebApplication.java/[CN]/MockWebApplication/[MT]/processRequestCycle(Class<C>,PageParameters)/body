{
  final WebRequestCycle cycle=setupRequestAndResponse();
  try {
    BookmarkablePageRequestTarget requestTarget=new BookmarkablePageRequestTarget(pageClass,params);
    if (pageClass == application.getHomePage()) {
      String pageMapName;
      IRequestTarget currentTarget=cycle.getRequestTarget();
      if (currentTarget instanceof IPageRequestTarget) {
        pageMapName="";
      }
 else {
        pageMapName="";
      }
      AppendingStringBuffer buffer=new AppendingStringBuffer(64);
      WebRequestEncoder encoder=new WebRequestEncoder(buffer);
      encoder.addValue(WebRequestCodingStrategy.BOOKMARKABLE_PAGE_PARAMETER_NAME,pageMapName + Component.PATH_SEPARATOR + pageClass.getName());
      if (params != null) {
        final Iterator<String> iterator=params.keySet().iterator();
        while (iterator.hasNext()) {
          final String key=iterator.next();
          final String values[]=params.getStringArray(key);
          if (values != null) {
            for (int i=0; i < values.length; i++) {
              encoder.addValue(key,values[i]);
            }
          }
        }
      }
      String url=buffer.toString();
      String path=application.getClass().getName();
      path=path.substring(path.lastIndexOf('.') + 1);
      path="/" + path + "/"+ path+ "/";
      getServletRequest().setURL(path + url);
    }
 else     if (application.getHomePage() != null) {
      String url=cycle.urlFor(requestTarget).toString();
      String path=application.getClass().getName();
      path=path.substring(path.lastIndexOf('.') + 1);
      path="/" + path + "/"+ path+ "/";
      getServletRequest().setURL(path + url);
    }
 else {
      log.warn("The application does not have a HomePage, this might cause problems or unexpected behavior");
    }
    cycle.request(requestTarget);
  }
  finally {
    cycle.getResponse().close();
  }
  postProcessRequestCycle(cycle);
}
