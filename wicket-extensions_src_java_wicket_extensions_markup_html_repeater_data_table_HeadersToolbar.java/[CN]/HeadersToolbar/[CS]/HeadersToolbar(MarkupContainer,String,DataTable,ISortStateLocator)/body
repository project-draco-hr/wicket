{
  super(parent,id,table);
  new RefreshingView(this,"headers"){
    private static final long serialVersionUID=1L;
    @Override protected Iterator getItemModels(){
      return new ArrayIteratorAdapter(table.getColumns()){
        @Override protected IModel model(        Object object){
          return new Model((IColumn)object);
        }
      }
;
    }
    @Override protected void populateItem(    Item item){
      item.setRenderBodyOnly(true);
      IColumn column=(IColumn)item.getModelObject();
      WebMarkupContainer header=null;
      if (column.isSortable()) {
        header=newSortableHeader(item,"header",column.getSortProperty(),stateLocator);
      }
 else {
        header=new WebMarkupContainer(item,"header");
      }
      column.getHeader(header,"label");
    }
  }
;
}
