{
  IPropertyReflectionAwareModel<?> delegate=ValidationModelResolver.resolvePropertyModelFrom(component);
  if (delegate == null) {
    return null;
  }
  String name;
  Method getter=delegate.getPropertyGetter();
  if (getter != null) {
    String methodName=getter.getName();
    if (methodName.startsWith("get")) {
      name=methodName.substring(3,4).toLowerCase() + methodName.substring(4);
    }
 else     if (methodName.startsWith("is")) {
      name=methodName.substring(2,3).toLowerCase() + methodName.substring(3);
    }
 else {
      throw new WicketRuntimeException("Invalid name for a getter method: '" + methodName + "'. It must start either with 'get' or 'is'.");
    }
    return new Property(getter.getDeclaringClass(),name);
  }
  Field field=delegate.getPropertyField();
  if (field != null) {
    return new Property(field.getDeclaringClass(),field.getName());
  }
  return null;
}
