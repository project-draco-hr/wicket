{
  Class type=field.getClass();
  if (type == Field.class) {
    return null;
  }
  ClassLoader classLoader=Thread.currentThread().getContextClassLoader();
  if (classLoader == null) {
    classLoader=getClass().getClassLoader();
  }
  String editorTypeName=type.getName() + "Editor";
  try {
    Class editorClass=classLoader.loadClass(editorTypeName);
    try {
      Constructor constructor=editorClass.getConstructor(new Class[]{String.class,IModel.class,Field.class});
      Object[] args=new Object[]{panelId,FieldsPanel.this.getModel(),field};
      PropertyEditor editor=(PropertyEditor)constructor.newInstance(args);
      return editor;
    }
 catch (    SecurityException e) {
      throw new WicketRuntimeException(e);
    }
catch (    NoSuchMethodException e) {
      throw new WicketRuntimeException(e);
    }
catch (    InstantiationException e) {
      throw new WicketRuntimeException(e);
    }
catch (    IllegalAccessException e) {
      throw new WicketRuntimeException(e);
    }
catch (    InvocationTargetException e) {
      throw new WicketRuntimeException(e);
    }
  }
 catch (  ClassNotFoundException e) {
  }
  return null;
}
