{
  IKey key=getRegistryKey();
  IWebSocketConnection connection=connectionRegistry.getConnection(application,sessionId,key);
  if (connection != null && connection.isOpen()) {
    Application oldApplication=ThreadContext.getApplication();
    Session oldSession=ThreadContext.getSession();
    RequestCycle oldRequestCycle=ThreadContext.getRequestCycle();
    WebResponse webResponse=webSocketSettings.newWebSocketResponse(connection);
    try {
      WebSocketRequestMapper requestMapper=new WebSocketRequestMapper(application.getRootRequestMapper());
      RequestCycle requestCycle=createRequestCycle(requestMapper,webResponse);
      ThreadContext.setRequestCycle(requestCycle);
      ThreadContext.setApplication(application);
      Session session;
      if (oldSession == null || message instanceof IWebSocketPushMessage) {
        ISessionStore sessionStore=application.getSessionStore();
        session=sessionStore.lookup(webRequest);
        ThreadContext.setSession(session);
      }
 else {
        session=oldSession;
      }
      IPageManager pageManager=session.getPageManager();
      Page page=getPage(pageManager);
      WebSocketRequestHandler requestHandler=new WebSocketRequestHandler(page,connection);
      WebSocketPayload payload=createEventPayload(message,requestHandler);
      if (!(message instanceof ConnectedMessage || message instanceof ClosedMessage)) {
        requestCycle.scheduleRequestHandlerAfterCurrent(requestHandler);
      }
      IRequestHandler broadcastingHandler=new WebSocketMessageBroadcastHandler(pageId,resourceName,payload);
      requestMapper.setHandler(broadcastingHandler);
      requestCycle.processRequestAndDetach();
    }
 catch (    Exception x) {
      LOG.error("An error occurred during processing of a WebSocket message",x);
    }
 finally {
      try {
        webResponse.close();
      }
  finally {
        ThreadContext.setApplication(oldApplication);
        ThreadContext.setRequestCycle(oldRequestCycle);
        ThreadContext.setSession(oldSession);
      }
    }
  }
 else {
    LOG.debug("Either there is no connection({}) or it is closed.",connection);
  }
}
