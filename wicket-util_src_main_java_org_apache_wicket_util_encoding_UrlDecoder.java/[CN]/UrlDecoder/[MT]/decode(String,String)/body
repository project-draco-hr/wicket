{
  if (Strings.isEmpty(s)) {
    return s;
  }
  int numChars=s.length();
  StringBuilder sb=new StringBuilder(numChars > 500 ? numChars / 2 : numChars);
  int i=0;
  if (enc.length() == 0) {
    throw new RuntimeException(new UnsupportedEncodingException("URLDecoder: empty string enc parameter"));
  }
  char c;
  byte[] bytes=null;
  while (i < numChars) {
    c=s.charAt(i);
switch (c) {
case '+':
      sb.append(decodePlus ? ' ' : '+');
    i++;
  break;
case '%':
try {
  if (bytes == null) {
    bytes=new byte[(numChars - i) / 3];
  }
  int pos=0;
  while (((i + 2) < numChars) && (c == '%')) {
    bytes[pos++]=(byte)Integer.parseInt(s.substring(i + 1,i + 3),16);
    i+=3;
    if (i < numChars) {
      c=s.charAt(i);
    }
  }
  if ((i < numChars) && (c == '%')) {
    LOG.info("Incomplete trailing escape (%) pattern in '%s'. The escape character (%) will be ignored.",s);
    i++;
    break;
  }
  try {
    sb.append(new String(bytes,0,pos,enc));
  }
 catch (  UnsupportedEncodingException e) {
    throw new RuntimeException(e);
  }
}
 catch (NumberFormatException e) {
  LOG.info("Illegal hex characters in escape (%) pattern in '{}'. " + "The escape character (%) will be ignored. NumberFormatException: {} ",s,e.getMessage());
  i++;
}
break;
default :
sb.append(c);
i++;
break;
}
}
return sb.toString().replace("\0","NULL");
}
