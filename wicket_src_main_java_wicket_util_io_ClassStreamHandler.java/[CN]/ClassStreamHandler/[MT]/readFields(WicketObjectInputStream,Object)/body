{
  try {
    for (int i=0; i < fields.size(); i++) {
      Object value;
      FieldAndIndex fai=(FieldAndIndex)fields.get(i);
      Field field=fai.field;
      Class cls=field.getType();
      boolean prim=cls.isPrimitive();
      if (!prim) {
        prim=Number.class.isAssignableFrom(cls);
      }
      if (prim) {
        if (cls == Boolean.class || cls == boolean.class) {
          value=new Boolean(wois.getInputStream().readBoolean());
          if (cls == boolean.class) {
            unsafe.putBoolean(object,fai.index,((Boolean)value).booleanValue());
          }
 else {
            unsafe.putObject(object,fai.index,value);
          }
        }
 else         if (cls == Byte.class || cls == byte.class) {
          value=new Byte(wois.getInputStream().readByte());
          if (cls == byte.class) {
            unsafe.putByte(object,fai.index,((Byte)value).byteValue());
          }
 else {
            unsafe.putObject(object,fai.index,value);
          }
        }
 else         if (cls == Short.class || cls == short.class) {
          value=new Short(wois.getInputStream().readShort());
          if (cls == short.class) {
            unsafe.putShort(object,fai.index,((Short)value).byteValue());
          }
 else {
            unsafe.putObject(object,fai.index,value);
          }
        }
 else         if (cls == Character.class || cls == char.class) {
          value=new Character(wois.getInputStream().readChar());
          if (cls == char.class) {
            unsafe.putChar(object,fai.index,((Character)value).charValue());
          }
 else {
            unsafe.putObject(object,fai.index,value);
          }
        }
 else         if (cls == Integer.class || cls == int.class) {
          value=new Integer(wois.getInputStream().readInt());
          if (cls == int.class) {
            unsafe.putInt(object,fai.index,((Integer)value).intValue());
          }
 else {
            unsafe.putObject(object,fai.index,value);
          }
        }
 else         if (cls == Long.class || cls == long.class) {
          value=new Long(wois.getInputStream().readLong());
          if (cls == long.class) {
            unsafe.putLong(object,fai.index,((Long)value).longValue());
          }
 else {
            unsafe.putObject(object,fai.index,value);
          }
        }
 else         if (cls == Float.class || cls == float.class) {
          value=new Float(wois.getInputStream().readFloat());
          if (cls == float.class) {
            unsafe.putFloat(object,fai.index,((Float)value).floatValue());
          }
 else {
            unsafe.putObject(object,fai.index,value);
          }
        }
 else         if (cls == Double.class || cls == double.class) {
          value=new Double(wois.getInputStream().readDouble());
          if (cls == double.class) {
            unsafe.putDouble(object,fai.index,((Double)value).doubleValue());
          }
 else {
            unsafe.putObject(object,fai.index,value);
          }
        }
 else {
          throw new RuntimeException("not support prim type?? " + cls);
        }
      }
 else {
        value=wois.readObject();
        unsafe.putObject(object,fai.index,value);
      }
    }
  }
 catch (  IllegalArgumentException ex) {
    throw new RuntimeException(ex);
  }
catch (  IOException ex) {
    throw new RuntimeException(ex);
  }
catch (  ClassNotFoundException ex) {
    throw new RuntimeException(ex);
  }
}
