{
  if (timeZone == null) {
    String utc=getUtcOffset();
    if (utc != null) {
      int dotPos=utc.indexOf('.');
      if (dotPos >= 0) {
        String hours=utc.substring(0,dotPos);
        String hourPart=utc.substring(dotPos + 1);
        if (hours.startsWith("+")) {
          hours=hours.substring(1);
        }
        int offsetHours=Integer.parseInt(hours);
        int offsetMins=(int)(Double.parseDouble(hourPart) * 6);
        AppendingStringBuffer sb=new AppendingStringBuffer("GMT");
        sb.append(offsetHours > 0 ? "+" : "-");
        sb.append(Math.abs(offsetHours));
        sb.append(":");
        if (offsetMins < 10) {
          sb.append("0");
        }
        sb.append(offsetMins);
        timeZone=TimeZone.getTimeZone(sb.toString());
      }
 else {
        int offset=Integer.parseInt(utc);
        if (offset < 0) {
          utc=utc.substring(1);
        }
        timeZone=TimeZone.getTimeZone("GMT" + ((offset > 0) ? "+" : "-") + utc);
      }
      String dstOffset=getUtcDSTOffset();
      if (timeZone != null && dstOffset != null) {
        TimeZone dstTimeZone=null;
        dotPos=dstOffset.indexOf('.');
        if (dotPos >= 0) {
          String hours=dstOffset.substring(0,dotPos);
          String hourPart=dstOffset.substring(dotPos + 1);
          if (hours.startsWith("+")) {
            hours=hours.substring(1);
          }
          int offsetHours=Integer.parseInt(hours);
          int offsetMins=(int)(Double.parseDouble(hourPart) * 6);
          AppendingStringBuffer sb=new AppendingStringBuffer("GMT");
          sb.append(offsetHours > 0 ? "+" : "-");
          sb.append(Math.abs(offsetHours));
          sb.append(":");
          if (offsetMins < 10) {
            sb.append("0");
          }
          sb.append(offsetMins);
          dstTimeZone=TimeZone.getTimeZone(sb.toString());
        }
 else {
          int offset=Integer.parseInt(dstOffset);
          if (offset < 0) {
            dstOffset=dstOffset.substring(1);
          }
          dstTimeZone=TimeZone.getTimeZone("GMT" + ((offset > 0) ? "+" : "-") + dstOffset);
        }
        if (dstTimeZone != null && dstTimeZone.getRawOffset() != timeZone.getRawOffset()) {
          int dstSaving=dstTimeZone.getRawOffset() - timeZone.getRawOffset();
          String[] availableIDs=TimeZone.getAvailableIDs(timeZone.getRawOffset());
          for (int i=0; i < availableIDs.length; i++) {
            TimeZone zone=TimeZone.getTimeZone(availableIDs[i]);
            if (zone.getDSTSavings() == dstSaving) {
              timeZone=zone;
              break;
            }
          }
        }
      }
    }
  }
  return timeZone;
}
