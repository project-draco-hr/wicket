{
  modelsMap.put("AUDI",Arrays.asList(new String[]{"A4","A6","TT"}));
  modelsMap.put("CADILLAC",Arrays.asList(new String[]{"CTS","DTS","ESCALADE","SRX","DEVILLE"}));
  modelsMap.put("FORD",Arrays.asList(new String[]{"CROWN","ESCAPE","EXPEDITION","EXPLORER","F-150"}));
  IModel makeChoices=new AbstractReadOnlyModel(){
    @Override public Object getObject(    Component component){
      Set<String> keys=modelsMap.keySet();
      List<String> list=new ArrayList<String>(keys);
      return list;
    }
  }
;
  IModel modelChoices=new AbstractReadOnlyModel(){
    @Override public Object getObject(    Component component){
      List models=(List)modelsMap.get(selectedMake);
      if (models == null) {
        models=Collections.EMPTY_LIST;
      }
      return models;
    }
  }
;
  Form form=new Form(this,"form");
  final DropDownChoice makes=new DropDownChoice(form,"makes",new PropertyModel(this,"selectedMake"),makeChoices);
  final DropDownChoice models=new DropDownChoice(form,"models",new Model(),modelChoices);
  models.setOutputMarkupId(true);
  makes.add(new AjaxFormComponentUpdatingBehavior("onchange"){
    @Override protected void onUpdate(    AjaxRequestTarget target){
      target.addComponent(models);
    }
  }
);
}
