{
  markFormsSubmitted();
  if (handleMultiPart()) {
    inputChanged();
    String url=getRequest().getRequestParameters().getParameterValue(getHiddenFieldId()).toString();
    if (!Strings.isEmpty(url)) {
      dispatchEvent(getPage(),url);
    }
 else {
      if (submitter == null) {
        submitter=findSubmittingButton();
      }
      if (submitter != null && !submitter.getDefaultFormProcessing()) {
        submitter.onSubmit();
        submitter.onAfterSubmit();
      }
 else {
        final Form<?> formToProcess=findFormToProcess(submitter);
        formToProcess.process(submitter);
      }
    }
  }
 else   if (hasError()) {
    callOnError(submitter);
  }
  final AjaxRequestTarget target=getRequestCycle().find(AjaxRequestTarget.class);
  if (target != null) {
    visitChildren(FormComponent.class,new IVisitor<FormComponent<?>,Void>(){
      @Override public void component(      FormComponent<?> component,      IVisit<Void> visit){
        component.updateAutoLabels(target);
      }
    }
);
  }
}
