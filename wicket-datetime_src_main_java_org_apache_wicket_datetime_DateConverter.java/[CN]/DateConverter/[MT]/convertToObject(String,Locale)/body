{
  if (Strings.isEmpty(value)) {
    return null;
  }
  DateTimeFormatter format=getFormat(locale);
  if (format == null) {
    throw new IllegalStateException("format must be not null");
  }
  if (applyTimeZoneDifference) {
    TimeZone zone=getClientTimeZone();
    DateTime dateTime;
    format=format.withZone(getTimeZone());
    try {
      dateTime=format.parseDateTime(value);
    }
 catch (    RuntimeException e) {
      throw newConversionException(e,locale);
    }
    if (zone != null) {
      dateTime=dateTime.withZoneRetainFields(DateTimeZone.forTimeZone(zone));
    }
    return dateTime.toDate();
  }
 else {
    try {
      DateTime date=format.parseDateTime(value);
      return date.toDate();
    }
 catch (    RuntimeException e) {
      throw newConversionException(e,locale);
    }
  }
}
