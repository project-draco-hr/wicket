{
  final TreeNode node=(TreeNode)item.getDefaultModelObject();
  item.add(newIndentation(item,"indent",(TreeNode)item.getDefaultModelObject(),level));
  item.add(newJunctionLink(item,"link","image",node));
  MarkupContainer nodeLink=newNodeLink(item,"nodeLink",node);
  item.add(nodeLink);
  nodeLink.add(newNodeIcon(nodeLink,"icon",node));
  nodeLink.add(new Label("label",new AbstractReadOnlyModel<String>(){
    private static final long serialVersionUID=1L;
    @Override public String getObject(){
      return renderNode(node);
    }
  }
));
  item.add(new Behavior(){
    private static final long serialVersionUID=1L;
    /** 
 * @see org.apache.wicket.behavior.AbstractBehavior#onComponentTag(org.apache.wicket.Component,org.apache.wicket.markup.ComponentTag)
 */
    @Override public void onComponentTag(    Component component,    ComponentTag tag){
      super.onComponentTag(component,tag);
      if (getTreeState().isNodeSelected(node)) {
        tag.put("class","row-selected");
      }
 else {
        tag.put("class","row");
      }
    }
  }
);
}
