{
  if (tag instanceof WicketTag) {
    return tag;
  }
  String enclosureAttr=getAttribute(tag,null);
  if (enclosureAttr != null) {
    if (tag.isOpen()) {
      String htmlId=tag.getAttribute("id");
      if ((tag.getId() != null) && !Strings.isEmpty(htmlId) && !htmlId.equals(tag.getId())) {
        throw new ParseException("Make sure that 'id' and 'wicket:id' are the same if both are provided. Tag:" + tag.toString(),tag.getPos());
      }
      if (Strings.isEmpty(tag.getId())) {
        if (Strings.isEmpty(htmlId)) {
          String id=getWicketNamespace() + "_" + INLINE_ENCLOSURE_ID_PREFIX+ (counter++);
          tag.setId(id);
        }
 else {
          tag.setId(htmlId);
        }
        tag.setAutoComponentTag(true);
        tag.setModified(true);
      }
      if (enclosures == null) {
        enclosures=new ArrayDeque<>();
      }
      enclosures.push(tag);
    }
 else {
      throw new ParseException("Open-close tags don't make sense for InlineEnclosure. Tag:" + tag.toString(),tag.getPos());
    }
  }
 else   if ((enclosures != null) && (enclosures.size() > 0)) {
    if (tag.isOpen() && (tag.getId() != null) && !(tag instanceof WicketTag)&& !tag.isAutoComponentTag()) {
      Iterator<ComponentTag> componentTagIterator=enclosures.descendingIterator();
      while (componentTagIterator.hasNext()) {
        ComponentTag lastEnclosure=componentTagIterator.next();
        String attr=getAttribute(lastEnclosure,null);
        if (Strings.isEmpty(attr) == true) {
          lastEnclosure.getAttributes().put(getInlineEnclosureAttributeName(null),tag.getId());
          lastEnclosure.setModified(true);
        }
      }
    }
 else     if (tag.isClose() && tag.closes(enclosures.peek())) {
      ComponentTag lastEnclosure=enclosures.pop();
      String attr=getAttribute(lastEnclosure,null);
      if (Strings.isEmpty(attr) == true) {
        throw new ParseException("Did not find any child for InlineEnclosure. Tag:" + lastEnclosure.toString(),tag.getPos());
      }
    }
  }
  return tag;
}
