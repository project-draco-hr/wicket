{
  final Input input=new Input();
  setDefaultModel(new CompoundPropertyModel<>(input));
  FeedbackPanel feedbackPanel=new FeedbackPanel("feedback");
  add(feedbackPanel);
  Form<Void> form=new Form<Void>("form"){
    @Override protected void onSubmit(){
      info("input: " + input);
    }
  }
;
  add(form);
  form.add(new DropDownChoice<>("site",SITES));
  form.add(new DropDownChoice<>("integer",INTEGERS,new ChoiceRenderer<Integer>(){
    /** 
 * Gets the display value that is visible to the end user.
 * @see org.apache.wicket.markup.html.form.IChoiceRenderer#getDisplayValue(java.lang.Object)
 */
    @Override public Object getDisplayValue(    Integer value){
switch (value) {
case 1:
        return "One";
case 2:
      return "Two";
case 3:
    return "Three";
default :
  throw new IllegalStateException(value + " is not mapped!");
}
}
/** 
 * Gets the value that is invisible to the end user, and that is used as the selection
 * id.
 * @see org.apache.wicket.markup.html.form.IChoiceRenderer#getIdValue(java.lang.Object,int)
 */
@Override public String getIdValue(Integer object,int index){
return String.valueOf(INTEGERS.get(index));
}
}
));
}
