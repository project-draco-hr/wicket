{
  super.internalOnBeginRequest();
  if (isVisibleInHierarchy()) {
    int offset=getViewOffset();
    int size=getViewSize();
    IItemFactory itemFactory=new IItemFactory(){
      public Item newItem(      int index,      IModel model){
        String id=AbstractPageableView.this.newChildId();
        Item item=AbstractPageableView.this.newItem(id,index,model);
        AbstractPageableView.this.populateItem(item);
        return item;
      }
    }
;
    Iterator models=getItemModels(offset,size);
    models=new CappedIteratorAdapter(models,size);
    Iterator items=getItemReuseStrategy().getItems(itemFactory,models,getItems());
    removeAll();
    addItems(items);
  }
}
