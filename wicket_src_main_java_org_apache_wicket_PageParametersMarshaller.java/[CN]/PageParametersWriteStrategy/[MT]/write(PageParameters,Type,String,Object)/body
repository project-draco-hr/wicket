{
  if (o == null) {
    p.remove(name);
    return;
  }
switch (type) {
case BOOLEAN:
case INT:
case STRING:
case LONG:
case DOUBLE:
case FLOAT:
case BYTE:
case SHORT:
case CHAR:
    p.put(name,o);
  break;
case BYTE_ARRAY:
byte[] bytes=(byte[])o;
String s=bytesToString(bytes);
p.put(name,s);
break;
case SERIALIZABLE:
ByteArrayOutputStream out=new ByteArrayOutputStream(512);
try {
ObjectOutputStream oout=new ObjectOutputStream(out);
oout.writeObject(o);
out.close();
String asString=bytesToString(out.toByteArray());
p.put(name,asString);
}
 catch (IOException ex) {
log.error("Error while reading Serializable into a String",ex);
}
 finally {
try {
out.close();
}
 catch (IOException ex) {
log.error(null,ex);
}
}
break;
default :
throw new AssertionError("Must be primitive type, byte array or serializable: " + o + " does not match type "+ type);
}
}
