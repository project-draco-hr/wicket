{
  final MarkupElement element=markupStream.get();
  if (element instanceof ComponentTag && !markupStream.atCloseTag()) {
    final ComponentTag tag=(ComponentTag)element;
    final String id=tag.getId();
    final Component component=get(id);
    if (component != null) {
      component.render();
    }
 else {
      final List componentResolvers=this.getApplication().getComponentResolvers();
      final Iterator iterator=componentResolvers.iterator();
      while (iterator.hasNext()) {
        final IComponentResolver resolver=(IComponentResolver)iterator.next();
        if (resolver.resolve(this,markupStream,tag)) {
          return;
        }
      }
      MarkupContainer container=this;
      while (container != null) {
        if (container instanceof IComponentResolver) {
          if (((IComponentResolver)container).resolve(this,markupStream,tag)) {
            return;
          }
        }
        container=container.findParent(MarkupContainer.class);
      }
      markupStream.throwMarkupException("Unable to find component with id '" + id + "' in "+ this);
    }
  }
 else {
    log.debug("Rendering raw markup");
    getResponse().write(element.toString());
    markupStream.next();
  }
}
