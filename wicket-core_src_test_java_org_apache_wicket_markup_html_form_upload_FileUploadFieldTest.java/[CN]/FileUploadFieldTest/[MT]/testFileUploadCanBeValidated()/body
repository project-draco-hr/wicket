{
  final Set<IValidatable> validatedComponents=new HashSet<IValidatable>();
  final File tmpFile=writeTestFile(1);
  tmpFile.deleteOnExit();
  final IValidator testValidator=new IValidator(){
    private static final long serialVersionUID=1L;
    public void validate(    IValidatable validatable){
      validatedComponents.add(validatable);
      assertEquals(ArrayList.class,validatable.getValue().getClass());
      List<FileUpload> uploads=(List<FileUpload>)validatable.getValue();
      FileUpload upload=uploads.get(0);
      assertEquals(tmpFile.getName(),upload.getClientFileName());
      assertEquals(new String(read(tmpFile)),new String(upload.getBytes()));
    }
  }
;
  final MockPageWithFormAndUploadField page=new MockPageWithFormAndUploadField();
  page.getForm().visitChildren(FileUploadField.class,new IVisitor<FileUploadField,Void>(){
    public void component(    FileUploadField uploadField,    IVisit<Void> visit){
      uploadField.add(testValidator);
      visit.stop();
    }
  }
);
  tester.startPage(page);
  FormTester formtester=tester.newFormTester("form");
  formtester.setFile("upload",tmpFile,"text/plain");
  formtester.submit();
  assertEquals(validatedComponents.size(),1);
}
