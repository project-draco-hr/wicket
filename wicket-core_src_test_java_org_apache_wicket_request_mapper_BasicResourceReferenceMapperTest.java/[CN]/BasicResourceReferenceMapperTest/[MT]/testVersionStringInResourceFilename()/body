{
  final IResource resource=new IResource(){
    public void respond(    Attributes attributes){
    }
  }
;
  final ResourceReference reference=new ResourceReference(getClass(),"versioned",Locale.ENGLISH,"style",null){
    @Override public IResource getResource(){
      return resource;
    }
  }
;
  FilenameWithStaticVersionResourceCachingStrategy strategy=new FilenameWithStaticVersionResourceCachingStrategy("-version-","foobar");
  INamedParameters params=new PageParameters();
  ResourceUrl url=new ResourceUrl("test.js",params);
  strategy.decorateUrl(url,reference);
  assertEquals("test-version-foobar.js",url.getFileName());
  strategy.undecorateUrl(url);
  assertEquals("test.js",url.getFileName());
  url=new ResourceUrl("test",params);
  strategy.decorateUrl(url,reference);
  assertEquals("test-version-foobar",url.getFileName());
  strategy.undecorateUrl(url);
  assertEquals("test",url.getFileName());
  url=new ResourceUrl("test-version-older.txt",params);
  strategy.undecorateUrl(url);
  assertEquals("test.txt",url.getFileName());
  url=new ResourceUrl("test-version-.txt",params);
  strategy.undecorateUrl(url);
  assertEquals("test.txt",url.getFileName());
  url=new ResourceUrl("test-version--------",params);
  strategy.undecorateUrl(url);
  assertEquals("test",url.getFileName());
}
