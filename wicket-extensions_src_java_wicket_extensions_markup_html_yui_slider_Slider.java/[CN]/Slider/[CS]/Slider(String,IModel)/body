{
  super(id,model);
  add(HeaderContributor.forJavaScript(Slider.class,"slider.js"));
  add(HeaderContributor.forCss(Slider.class,"css/screen.css"));
  IModel variablesModel=new AbstractReadOnlyModel(){
    private static final long serialVersionUID=1L;
    /** 
 * cached variables; we only need to fill this once. 
 */
    private Map variables;
    /** 
 * @see wicket.model.AbstractReadOnlyModel#getObject(wicket.Component)
 */
    public Object getObject(    Component component){
      if (variables == null) {
        this.variables=new MiniMap(3);
        variables.put("javaScriptId",javaScriptId);
        variables.put("backGroundElementId",backgroundElementId);
        variables.put("imageElementId",imageElementId);
      }
      return variables;
    }
  }
;
  add(TextTemplateHeaderContributor.forJavaScript(Slider.class,"init.js",variablesModel));
  WebMarkupContainer backgroundElement=new WebMarkupContainer("backgroundElement");
  backgroundElement.add(new AttributeModifier("id",true,new PropertyModel(this,"backgroundElementId")));
  add(backgroundElement);
  WebMarkupContainer imageElement=new WebMarkupContainer("imageElement");
  imageElement.add(new AttributeModifier("id",true,new PropertyModel(this,"imageElementId")));
  backgroundElement.add(imageElement);
  imageElement.add(new Image("thumb",PackageResource.get(Slider.class,"img/horizSlider.png")));
}
