{
  IWebSocketConnection connection=connectionRegistry.getConnection(application,sessionId,pageId);
  if (connection != null && connection.isOpen()) {
    Application oldApplication=ThreadContext.getApplication();
    Session oldSession=ThreadContext.getSession();
    RequestCycle oldRequestCycle=ThreadContext.getRequestCycle();
    WebSocketResponse webResponse=new WebSocketResponse(connection);
    try {
      RequestCycle requestCycle;
      if (oldRequestCycle == null || message instanceof IWebSocketPushMessage) {
        RequestCycleContext context=new RequestCycleContext(webRequest,webResponse,application.getRootRequestMapper(),application.getExceptionMapperProvider().get());
        requestCycle=application.getRequestCycleProvider().get(context);
        ThreadContext.setRequestCycle(requestCycle);
      }
 else {
        requestCycle=oldRequestCycle;
      }
      ThreadContext.setApplication(application);
      Session session;
      if (oldSession == null || message instanceof IWebSocketPushMessage) {
        ISessionStore sessionStore=application.getSessionStore();
        session=sessionStore.lookup(webRequest);
        ThreadContext.setSession(session);
      }
 else {
        session=oldSession;
      }
      IPageManager pageManager=session.getPageManager();
      try {
        Page page=(Page)pageManager.getPage(pageId);
        WebSocketRequestHandler requestHandler=new WebSocketRequestHandler(page,connection);
        WebSocketPayload payload=createEventPayload(message,requestHandler);
        page.send(application,Broadcast.BREADTH,payload);
        if (!(message instanceof ConnectedMessage || message instanceof ClosedMessage)) {
          requestHandler.respond(requestCycle);
        }
      }
  finally {
        pageManager.commitRequest();
      }
    }
 catch (    Exception x) {
      LOG.error("An error occurred during processing of a WebSocket message",x);
    }
 finally {
      try {
        webResponse.close();
      }
  finally {
        ThreadContext.setApplication(oldApplication);
        ThreadContext.setRequestCycle(oldRequestCycle);
        ThreadContext.setSession(oldSession);
      }
    }
  }
 else {
    LOG.debug("Either there is no connection({}) or it is closed.",connection);
  }
}
