{
  add(new Image("bug"));
  add(new SessionView("session",sessionData.getSession()));
  Model requestsModel=new Model(){
    private static final long serialVersionUID=1L;
    public Object getObject(    Component component){
      return new ArrayList(sessionData.getRequests());
    }
  }
;
  PageableListView listView=new PageableListView("requests",requestsModel,50){
    private static final long serialVersionUID=1L;
    private final SimpleDateFormat sdf=new SimpleDateFormat("dd MMM hh:mm:ss.SSS");
    protected void populateItem(    ListItem item){
      RequestData rd=(RequestData)item.getModelObject();
      Label startDate=new Label("startDate",new Model(rd.getStartDate())){
        private static final long serialVersionUID=1L;
        /** 
 * @see wicket.Component#getConverter(Class)
 */
        public IConverter getConverter(        Class type){
          return new DateConverter(){
            private static final long serialVersionUID=1L;
            /** 
 * @see wicket.util.convert.converters.DateConverter#getDateFormat(java.util.Locale)
 */
            public DateFormat getDateFormat(            Locale locale){
              return sdf;
            }
          }
;
        }
      }
;
      item.add(startDate);
      item.add(new Label("timeTaken",new Model(rd.getTimeTaken())));
      item.add(new Label("eventTarget",new Model(rd.getEventTargert())));
      item.add(new Label("responseTarget",new Model(rd.getResponseTarget())));
      item.add(new Label("alteredObjects",new Model(rd.getAlteredObjects())).setEscapeModelStrings(false));
    }
  }
;
  add(listView);
  PagingNavigator navigator=new PagingNavigator("navigator",listView);
  add(navigator);
}
