{
  final Input input=new Input();
  setDefaultModel(new CompoundPropertyModel<Input>(input));
  FeedbackPanel feedbackPanel=new FeedbackPanel("feedback");
  add(feedbackPanel);
  Form<?> form=new Form("form"){
    @Override protected void onSubmit(){
      info("input: " + input);
    }
  }
;
  add(form);
  form.add(new DropDownChoice<String>("site",SITES));
  form.add(new DropDownChoice<Integer>("integer",INTEGERS,new IChoiceRenderer<Integer>(){
    /** 
 * Gets the display value that is visible to the end user.
 * @see org.apache.wicket.markup.html.form.IChoiceRenderer#getDisplayValue(java.lang.Object)
 */
    public Object getDisplayValue(    Integer object){
      String stringrep;
      int value=object;
switch (value) {
case 1:
        stringrep="One";
      break;
case 2:
    stringrep="Two";
  break;
case 3:
stringrep="Three";
break;
default :
throw new IllegalStateException(value + " is not mapped!");
}
return stringrep;
}
/** 
 * Gets the value that is invisible to the end user, and that is used as the selection
 * id.
 * @see org.apache.wicket.markup.html.form.IChoiceRenderer#getIdValue(java.lang.Object,int)
 */
public String getIdValue(Integer object,int index){
return String.valueOf(INTEGERS.get(index));
}
}
));
}
