{
  List<Object> list=Arrays.asList(new Object[IMAGES_PER_PAGE]);
  add(new ListView<Object>("listView",list){
    private static final long serialVersionUID=1L;
    @Override protected void populateItem(    ListItem<Object> item){
      final Random random=new Random();
      BufferedImage image=new BufferedImage(16,16,BufferedImage.TYPE_INT_RGB);
      Graphics gfx=image.getGraphics();
      gfx.setColor(new Color(random.nextFloat(),random.nextFloat(),random.nextFloat()));
      gfx.fillRect(0,0,32,32);
      gfx.dispose();
      ByteArrayOutputStream baos=new ByteArrayOutputStream();
      try {
        ImageIO.write(image,"jpeg",baos);
      }
 catch (      Exception e) {
        throw new WicketRuntimeException(e);
      }
      final byte[] imageData=baos.toByteArray();
      item.add(new Image("image",new DynamicImageResource("jpeg"){
        private static final long serialVersionUID=1L;
        @Override protected byte[] getImageData(        Attributes attributes){
          return imageData;
        }
      }
));
    }
  }
);
}
