{
  TagTester tester=null;
  if (Strings.isEmpty(markup) == false && Strings.isEmpty(tagName) == false) {
    try {
      markup=AJAX_COMPONENT_CDATA_OPEN.matcher(markup).replaceAll("<component>");
      markup=AJAX_COMPONENT_CDATA_CLOSE.matcher(markup).replaceAll("</component>");
      XmlPullParser parser=new XmlPullParser();
      parser.parse(markup);
      XmlTag elm;
      XmlTag openTag=null;
      XmlTag closeTag=null;
      int level=0;
      while ((elm=parser.nextTag()) != null && closeTag == null) {
        XmlTag xmlTag=elm;
        String xmlTagName=xmlTag.getName();
        if (openTag == null && xmlTagName.equalsIgnoreCase(tagName)) {
          if (xmlTag.isOpen()) {
            openTag=xmlTag;
          }
 else           if (xmlTag.isOpenClose()) {
            openTag=xmlTag;
            closeTag=xmlTag;
          }
        }
 else         if (openTag != null) {
          String openTagName=openTag.getName();
          if (xmlTag.isOpen() && xmlTagName.equals(openTagName)) {
            level++;
          }
          if (xmlTag.isClose()) {
            if (xmlTagName.equals(openTagName)) {
              if (level == 0) {
                closeTag=xmlTag;
                closeTag.setOpenTag(openTag);
              }
 else {
                level--;
              }
            }
          }
        }
      }
      if (openTag != null && closeTag != null) {
        tester=new TagTester(parser,openTag,closeTag);
      }
    }
 catch (    Exception e) {
      throw new WicketRuntimeException(e);
    }
  }
  return tester;
}
