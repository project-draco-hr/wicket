{
  final String expressionBracketsSeperated=Strings.replaceAll(expression,"[",".[");
  int index=expressionBracketsSeperated.indexOf('.');
  int lastIndex=0;
  Object value=object;
  Class clz=value.getClass();
  String exp=expressionBracketsSeperated;
  while (index != -1) {
    exp=expressionBracketsSeperated.substring(lastIndex,index);
    IGetAndSet getAndSetter=null;
    try {
      getAndSetter=getGetAndSetter(exp,clz);
    }
 catch (    WicketRuntimeException ex) {
      index=expressionBracketsSeperated.indexOf('.',index + 1);
      if (index != -1) {
        String indexExpression=expressionBracketsSeperated.substring(lastIndex,index);
        getAndSetter=getGetAndSetter(indexExpression,clz);
      }
 else {
        exp=expressionBracketsSeperated.substring(lastIndex);
        break;
      }
    }
    Object newValue=getAndSetter.getValue(value);
    if (newValue == null) {
      if (tryToCreateNull) {
        newValue=getAndSetter.newValue(value);
        if (newValue == null) {
          return null;
        }
      }
 else {
        return null;
      }
    }
    value=newValue;
    lastIndex=index + 1;
    index=expressionBracketsSeperated.indexOf('.',lastIndex);
    clz=value.getClass();
    if (index == -1) {
      exp=expressionBracketsSeperated.substring(lastIndex);
      break;
    }
  }
  IGetAndSet getAndSetter=getGetAndSetter(exp,clz);
  return new ObjectAndGetSetter(getAndSetter,value);
}
