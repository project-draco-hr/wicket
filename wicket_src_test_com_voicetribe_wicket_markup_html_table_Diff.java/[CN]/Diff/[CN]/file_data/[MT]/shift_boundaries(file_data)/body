{
  final boolean[] changed=changed_flag;
  final boolean[] other_changed=f.changed_flag;
  int i=0;
  int j=0;
  int i_end=buffered_lines;
  int preceding=-1;
  int other_preceding=-1;
  for (; ; ) {
    int start, end, other_start;
    while (i < i_end && !changed[1 + i]) {
      while (other_changed[1 + j++])       other_preceding=j;
      i++;
    }
    if (i == i_end)     break;
    start=i;
    other_start=j;
    for (; ; ) {
      while (i < i_end && changed[1 + i])       i++;
      end=i;
      if (end != i_end && equivs[start] == equivs[end] && !other_changed[1 + j] && end != i_end && !((preceding >= 0 && start == preceding) || (other_preceding >= 0 && other_start == other_preceding))) {
        changed[1 + end++]=true;
        changed[1 + start++]=false;
        ++i;
        ++j;
      }
 else       break;
    }
    preceding=i;
    other_preceding=j;
  }
}
