{
  add(new Label<Integer>("guessesRemaining",new PropertyModel<Integer>(getGame(),"guessesRemaining")));
  add(new Label<String>("word",new Model<String>(){
    @Override public String getObject(){
      return getGame().getWord().asString(true);
    }
  }
));
  add(new ListView<Letter>("letters",getGame().getLetters()){
    @Override protected void populateItem(    final ListItem<Letter> listItem){
      final Letter letter=listItem.getModelObject();
      final Link<?> link=new Link<Void>("letter"){
        @Override protected void onBeforeRender(){
          super.onBeforeRender();
          setAutoEnable(false);
          setEnabled(!letter.isGuessed());
        }
        @Override public void onClick(){
          getGame().guess(letter);
          if (getGame().isWon()) {
            setResponsePage(new Win());
          }
 else           if (getGame().isLost()) {
            setResponsePage(new Lose());
          }
 else {
          }
        }
      }
;
      link.add(new Image<Void>("image",letter.getSharedImageResource()));
      listItem.add(link);
      link.add(new SimpleAttributeModifier("id","letter_" + letter.asString()));
    }
  }
);
}
