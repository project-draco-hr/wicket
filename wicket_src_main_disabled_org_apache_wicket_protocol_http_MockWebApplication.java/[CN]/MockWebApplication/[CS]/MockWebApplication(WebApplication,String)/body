{
  this.application=application;
  context=newServletContext(path);
  filter=new WicketFilter(){
    @Override protected IWebApplicationFactory getApplicationFactory(){
      return new IWebApplicationFactory(){
        public WebApplication createApplication(        WicketFilter filter){
          return application;
        }
        public void destroy(){
        }
      }
;
    }
  }
;
  try {
    filter.init(new FilterConfig(){
      public ServletContext getServletContext(){
        return context;
      }
      public Enumeration<?> getInitParameterNames(){
        return null;
      }
      public String getInitParameter(      String name){
        return null;
      }
      public String getFilterName(){
        return "WicketMockServlet";
      }
    }
);
  }
 catch (  ServletException e) {
    throw new RuntimeException(e);
  }
  Application.set(this.application);
  servletSession=new MockHttpSession(context);
  servletSession.setTemporary(initializeHttpSessionAsTemporary());
  servletRequest=new MockHttpServletRequest(this.application,servletSession,context);
  servletResponse=new MockHttpServletResponse(servletRequest){
    @Override public void addCookie(    Cookie cookie){
      super.addCookie(cookie);
      cookiesOfThisSession.remove(cookie);
      if (cookie.getMaxAge() > 0) {
        cookiesOfThisSession.add(cookie);
      }
 else {
        Iterator<Cookie> iter=cookiesOfThisSession.iterator();
        while (iter.hasNext()) {
          Cookie entry=iter.next();
          if (cookie.getName().equals(entry.getName())) {
            iter.remove();
          }
        }
      }
    }
  }
;
  wicketRequest=this.application.newWebRequest(servletRequest);
  wicketResponse=this.application.newWebResponse(servletResponse);
  createRequestCycle();
  this.application.getRequestCycleSettings().setRenderStrategy(RenderStrategy.ONE_PASS_RENDER);
  this.application.getRequestCycleSettings().setBufferResponse(false);
  if (this.application.getResourceFinder() == null) {
    this.application.getResourceSettings().setResourceFinder(new WebApplicationPath(context));
  }
  this.application.getPageSettings().setAutomaticMultiWindowSupport(false);
  this.application.getResourceSettings().setResourcePollFrequency(null);
}
