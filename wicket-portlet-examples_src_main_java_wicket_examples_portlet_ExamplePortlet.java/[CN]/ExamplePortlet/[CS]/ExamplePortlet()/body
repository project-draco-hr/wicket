{
  PropertyModel messageModel=new PropertyModel(this,"message");
  add(new Label("msg",messageModel));
  Form form=new Form("form"){
    protected void onSubmit(){
      log.info(hashCode() + " : " + this+ " Form.onSubmit()");
    }
  }
;
  form.add(new TextField("msgInput",messageModel));
  add(new Link("link"){
    public void onClick(){
      log.info("link clicked");
      message="Link clicked!";
    }
  }
);
  add(form);
  add(new Link("link2"){
    public void onClick(){
      setResponsePage(new ExamplePortlet2(ExamplePortlet.this));
    }
  }
);
  add(new Image("image",new RenderedDynamicImageResource(100,100){
    protected boolean render(    Graphics2D graphics){
      final Random random=new Random();
      int dx=Math.abs(10 + random.nextInt(80));
      int dy=Math.abs(10 + random.nextInt(80));
      int x=Math.abs(random.nextInt(100 - dx));
      int y=Math.abs(random.nextInt(100 - dy));
      graphics.setStroke(new BasicStroke(5));
      graphics.drawOval(x,y,dx,dy);
      return true;
    }
  }
));
}
