{
  if (requestHandler instanceof ResourceReferenceRequestHandler) {
    ResourceReferenceRequestHandler referenceRequestHandler=(ResourceReferenceRequestHandler)requestHandler;
    ResourceReference reference=referenceRequestHandler.getResourceReference();
    Url url=new Url();
    List<String> segments=url.getSegments();
    segments.add(getContext().getNamespace());
    segments.add(getContext().getResourceIdentifier());
    segments.add(getClassName(reference.getScope()));
    StringTokenizer tokens=new StringTokenizer(reference.getName(),"/");
    while (tokens.hasMoreTokens()) {
      String token=tokens.nextToken();
      if (isTimestampsEnabled() && tokens.hasMoreTokens() == false) {
        Time lastModified=reference.getLastModified();
        if (lastModified != null) {
          int extensionAt=token.lastIndexOf('.');
          StringBuilder filename=new StringBuilder();
          filename.append(extensionAt == -1 ? token : token.substring(0,extensionAt));
          filename.append(TIMESTAMP_PREFIX);
          filename.append(lastModified.getMilliseconds());
          if (extensionAt != -1)           filename.append(token.substring(extensionAt));
          token=filename.toString();
        }
      }
      segments.add(token);
    }
    encodeResourceReferenceAttributes(url,reference);
    PageParameters parameters=referenceRequestHandler.getPageParameters();
    if (parameters != null) {
      parameters=new PageParameters(parameters);
      parameters.clearIndexed();
      url=encodePageParameters(url,parameters,pageParametersEncoder);
    }
    return url;
  }
  return null;
}
