{
  final MarkupStream markupStream=findMarkupStream();
  validateMarkupStream(markupStream);
  final boolean atOpenTag=markupStream.atOpenTag();
  final ComponentTag openTag=markupStream.getTag().mutable();
  openTag.setType(XmlTag.OPEN);
  if (getRenderBodyOnly() == false) {
    renderComponentTag(openTag);
  }
  renderAssociatedMarkup("panel","Markup for a panel component has to contain part '<wicket:panel>'");
  if (getRenderBodyOnly() == false) {
    getResponse().write(openTag.syntheticCloseTagString());
  }
  markupStream.next();
  if (atOpenTag) {
    markupStream.skipRawMarkup();
    if (!markupStream.atCloseTag()) {
      markupStream.throwMarkupException("Expected close tag.  Possible attempt to embed component(s) " + "in the body of a component which discards its body");
    }
    markupStream.next();
  }
}
