{
  if (relativePathPrefixToWicketHandler != null) {
    return relativePathPrefixToWicketHandler;
  }
  boolean portletRequest=RequestContext.get().isPortletRequest();
  PrependingStringBuffer prepender=new PrependingStringBuffer();
  if (!portletRequest && isAjax()) {
    for (int i=0; i < getObsoleteRequestParameters().getUrlDepth(); i++) {
      prepender.prepend("../");
    }
    return relativePathPrefixToWicketHandler=prepender.toString();
  }
  String relativeUrl=getPath();
  HttpServletRequest httpRequest=getHttpServletRequest();
  String errorUrl=(String)httpRequest.getAttribute("javax.servlet.error.request_uri");
  String forwardUrl=(String)httpRequest.getAttribute("javax.servlet.forward.servlet_path");
  if (forwardUrl != null && forwardUrl.length() > 0) {
    relativeUrl=forwardUrl.substring(1);
  }
 else   if (errorUrl != null) {
    errorUrl=errorUrl.substring(httpRequest.getContextPath().length());
    String servletPath=httpRequest.getServletPath();
    if (!errorUrl.startsWith(servletPath)) {
      prepender.prepend(servletPath.substring(1) + "/");
    }
    for (int i=servletPath.length() + 1; i < errorUrl.length(); i++) {
      if (errorUrl.charAt(i) == '?') {
        break;
      }
      if (errorUrl.charAt(i) == '/') {
        prepender.prepend("../");
      }
    }
    return relativePathPrefixToWicketHandler=prepender.toString();
  }
 else   if (wicketRedirectUrl != null) {
    relativeUrl=wicketRedirectUrl;
  }
  int lastPathPos=-1;
  if (depthRelativeToWicketHandler == -1) {
    int depth=0;
    int ajaxUrlDepth=isAjax() ? getObsoleteRequestParameters().getUrlDepth() : -1;
    for (int i=0; i < relativeUrl.length(); i++) {
      if (relativeUrl.charAt(i) == '?') {
        break;
      }
      if (relativeUrl.charAt(i) == '/') {
        depth++;
        lastPathPos=i;
        if (depth == ajaxUrlDepth) {
          return relativeUrl.substring(0,lastPathPos + 1);
        }
      }
    }
    depthRelativeToWicketHandler=depth;
  }
  if (portletRequest) {
    prepender.prepend("/");
    prepender.prepend(getHttpServletRequest().getServletPath());
    prepender.prepend(getHttpServletRequest().getContextPath());
  }
 else {
    for (int i=0; i < depthRelativeToWicketHandler; i++) {
      prepender.prepend("../");
    }
  }
  return relativePathPrefixToWicketHandler=prepender.toString();
}
