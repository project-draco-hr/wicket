{
  tester.getSession().bind();
  Thread testThread=new Thread(new Runnable(){
    public void run(){
      try {
        TestSessionFilter sessionFilter=new TestSessionFilter(tester);
        Assert.assertFalse(Application.exists());
        Assert.assertFalse(Session.exists());
        sessionFilter.doFilter(tester.getRequest(),tester.getResponse(),new TestFilterChain());
        Assert.assertFalse(Application.exists());
        Assert.assertFalse(Session.exists());
      }
 catch (      Exception e) {
        throw new RuntimeException(e.getMessage(),e);
      }
    }
  }
);
  final StringBuilder failMessage=new StringBuilder();
  final AtomicBoolean passed=new AtomicBoolean(true);
  testThread.setUncaughtExceptionHandler(new UncaughtExceptionHandler(){
    public void uncaughtException(    Thread t,    Throwable e){
      failMessage.append(e.getMessage());
      passed.set(false);
    }
  }
);
  testThread.start();
  testThread.join(Duration.seconds(1).getMilliseconds());
  Assert.assertTrue(failMessage.toString(),passed.get());
}
