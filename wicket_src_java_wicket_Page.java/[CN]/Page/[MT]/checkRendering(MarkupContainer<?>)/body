{
  final IDebugSettings debugSettings=Application.get().getDebugSettings();
  if (debugSettings.getComponentUseCheck() && !getResponse().isRedirect()) {
    final Count unrenderedComponents=new Count();
    final List<Component> unrenderedAutoComponents=new ArrayList<Component>();
    final StringBuffer buffer=new StringBuffer();
    renderedContainer.visitChildren(new IVisitor<Component>(){
      public Object component(      final Component component){
        if (renderedComponents == null || !renderedComponents.contains(component)) {
          if (component.isAuto()) {
            unrenderedAutoComponents.add(component);
          }
 else           if (component.isVisibleInHierarchy()) {
            unrenderedComponents.increment();
            buffer.append(Integer.toString(unrenderedComponents.getCount()) + ". " + component+ "\n");
          }
 else {
            return CONTINUE_TRAVERSAL_BUT_DONT_GO_DEEPER;
          }
        }
        return CONTINUE_TRAVERSAL;
      }
    }
);
    for (int i=0; i < unrenderedAutoComponents.size(); i++) {
      unrenderedAutoComponents.get(i).remove();
    }
    if (unrenderedComponents.getCount() > 0) {
      renderedComponents=null;
      throw new WicketRuntimeException("The component(s) below failed to render. A common problem is that you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered).\n\n" + buffer.toString());
    }
  }
  renderedComponents=null;
}
