{
  super(name,new CompoundPropertyModel(new FormInputModel()));
  add(new LocaleDropDownChoice("localeSelect"));
  add(new Link("defaultLocaleLink"){
    public void onClick(){
      WebRequest request=(WebRequest)getRequest();
      setLocale(request.getLocale());
    }
  }
);
  TextField stringTextField=new TextField("stringProperty");
  stringTextField.setLabel(new Model("String"));
  add(stringTextField);
  TextField integerTextField=new TextField("integerProperty",Integer.class);
  add(integerTextField.add(NumberValidator.POSITIVE));
  add(new TextField("doubleProperty",Double.class));
  WebMarkupContainer dateLabel=new WebMarkupContainer("dateLabel");
  add(dateLabel);
  TextField datePropertyTextField=new TextField("dateProperty",Date.class);
  add(datePropertyTextField);
  add(new TextField("integerInRangeProperty",Integer.class).add(NumberValidator.range(0,100)));
  add(new CheckBox("booleanProperty"));
  RadioChoice rc=new RadioChoice("numberRadioChoice",NUMBERS).setSuffix("");
  rc.setLabel(new Model("number"));
  add(rc);
  RadioGroup group=new RadioGroup("numbersGroup");
  add(group);
  ListView persons=new ListView("numbers",NUMBERS){
    protected void populateItem(    ListItem item){
      item.add(new Radio("radio",item.getModel()));
      item.add(new Label("number",item.getModelObjectAsString()));
    }
  }
;
  group.add(persons);
  CheckGroup checks=new CheckGroup("numbersCheckGroup");
  add(checks);
  ListView checksList=new ListView("numbers",NUMBERS){
    protected void populateItem(    ListItem item){
      item.add(new Check("check",item.getModel()));
      item.add(new Label("number",item.getModelObjectAsString()));
    }
  }
;
  checks.add(checksList);
  add(new ListMultipleChoice("siteSelection",SITES));
  add(new TextField("urlProperty",URL.class){
    public IConverter getConverter(    Class clazz){
      return new IConverter(){
        /** 
 * @see org.apache.wicket.util.convert.IConverter#convertToObject(java.lang.String,java.util.Locale)
 */
        public Object convertToObject(        String value,        Locale locale){
          try {
            return new URL(value.toString());
          }
 catch (          MalformedURLException e) {
            throw new ConversionException("'" + value + "' is not a valid URL");
          }
        }
        /** 
 * @see org.apache.wicket.util.convert.IConverter#convertToString(java.lang.Object,java.util.Locale)
 */
        public String convertToString(        Object value,        Locale locale){
          return value != null ? value.toString() : null;
        }
      }
;
    }
  }
);
  add(new TextField("phoneNumberUS",UsPhoneNumber.class){
    public IConverter getConverter(    Class clazz){
      return new MaskConverter("(###) ###-####",UsPhoneNumber.class);
    }
  }
);
  add(new LinesListView("lines"));
  add(new ImageButton("saveButton"));
  add(new Link("resetButtonLink"){
    public void onClick(){
      InputForm.this.modelChanged();
    }
  }
.add(new Image("resetButtonImage")));
}
