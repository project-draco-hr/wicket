{
  if (!component.isActionAuthorized(Component.ENABLE)) {
    throw new UnauthorizedActionException(component,Component.ENABLE);
  }
  page.beforeCallComponent(component,listener);
  try {
    listener.getMethod().invoke(component,new Object[]{});
  }
 catch (  Exception e) {
    throw new WicketRuntimeException("method " + listener.getName() + " of "+ listener.getMethod().getDeclaringClass()+ " targetted at component "+ component+ " threw an exception",e);
  }
 finally {
    page.afterCallComponent(component,listener);
  }
}
