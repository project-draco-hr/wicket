{
  final Serializable userObject=node.getUserObject();
  if (userObject == null) {
    throw new RuntimeException("userObject == null");
  }
  File file=(File)userObject;
  Link expandCollapsLink=new Link("expandCollapsLink"){
    public void linkClicked(    RequestCycle cycle){
      TreeStateCache state=fileTree.getTreeState();
      TreePath selection=state.findTreePath(userObject);
      fileTree.setExpandedState(selection,(!node.isExpanded()));
    }
  }
;
  expandCollapsLink.add(new Image("junctionImg",new Model(node){
    public Object getObject(){
      return getJunctionImageName((Node)super.getObject());
    }
  }
));
  expandCollapsLink.add(new Image("nodeImg",new Model(node){
    public Object getObject(){
      return getNodeImageName((Node)super.getObject());
    }
  }
));
  node.add(expandCollapsLink);
  TreeNodeLink selectLink=new TreeNodeLink("selectLink",fileTree,node){
    public void linkClicked(    RequestCycle cycle,    Node node){
      TreeStateCache state=fileTree.getTreeState();
      TreePath selection=state.findTreePath(userObject);
      state.setSelectedPath(selection);
    }
  }
;
  selectLink.add(new Label("fileName",file.getName()));
  node.add(selectLink);
}
