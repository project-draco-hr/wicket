{
  final Class<?> clazz=object.getClass();
  Field[] fields=null;
  fields=cache.get(clazz);
  if (fields == null) {
    fields=findFields(clazz,factory);
    cache.put(clazz,fields);
  }
  for (  final Field field : fields) {
    if (!field.isAccessible()) {
      field.setAccessible(true);
    }
    try {
      if (field.get(object) == null) {
        Object value=factory.getFieldValue(field,object);
        if (value != null) {
          field.set(object,value);
        }
      }
    }
 catch (    IllegalArgumentException e) {
      throw new RuntimeException("error while injecting object [" + object.toString() + "] of type ["+ object.getClass().getName()+ "]",e);
    }
catch (    IllegalAccessException e) {
      throw new RuntimeException("error while injecting object [" + object.toString() + "] of type ["+ object.getClass().getName()+ "]",e);
    }
  }
}
