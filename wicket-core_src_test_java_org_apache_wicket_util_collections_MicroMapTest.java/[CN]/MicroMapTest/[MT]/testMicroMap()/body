{
  MicroMap<Object,Object> m=new MicroMap<Object,Object>();
  m.put(FOO,BAR);
  Set<Object> s=m.keySet();
  assertEquals(1,m.size());
  assertEquals(1,s.size());
  Iterator<?> i=s.iterator();
  assertTrue(i.hasNext());
  Object key=i.next();
  assertEquals(FOO,key);
  assertFalse(i.hasNext());
  try {
    i.next();
    fail("Expected i.next() to fail with NoSuchElementException");
  }
 catch (  NoSuchElementException e) {
  }
  Set<Entry<Object,Object>> entrySet=m.entrySet();
  assertEquals(1,m.size());
  assertEquals(1,entrySet.size());
  i=entrySet.iterator();
  assertTrue(i.hasNext());
  @SuppressWarnings("unchecked") Map.Entry<Object,Object> entry=(Map.Entry<Object,Object>)i.next();
  assertEquals(FOO,entry.getKey());
  assertEquals(BAR,entry.getValue());
  assertFalse(i.hasNext());
  try {
    i.next();
    fail("Expected i.next() to fail with NoSuchElementException");
  }
 catch (  NoSuchElementException e) {
  }
  Collection<Object> v=m.values();
  assertEquals(1,m.size());
  assertEquals(1,v.size());
  i=v.iterator();
  assertTrue(i.hasNext());
  Object value=i.next();
  assertEquals(BAR,value);
  assertFalse(i.hasNext());
  try {
    i.next();
    fail("Expected i.next() to fail with NoSuchElementException");
  }
 catch (  NoSuchElementException e) {
  }
}
