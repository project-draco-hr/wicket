{
  TextField<T> editor=new TextField<T>(componentId,model){
    private static final long serialVersionUID=1L;
    @Override public <C>IConverter<C> getConverter(    final Class<C> type){
      IConverter<C> c=AjaxEditableLabel.this.getConverter(type);
      return c != null ? c : super.getConverter(type);
    }
    @Override protected void onModelChanged(){
      super.onModelChanged();
      AjaxEditableLabel.this.onModelChanged();
    }
    @Override protected void onModelChanging(){
      super.onModelChanging();
      AjaxEditableLabel.this.onModelChanging();
    }
  }
;
  editor.setOutputMarkupId(true);
  editor.setVisible(false);
  editor.add(new EditorAjaxBehavior(){
    @Override protected void updateAjaxAttributes(    AjaxRequestAttributes attributes){
      super.updateAjaxAttributes(attributes);
      attributes.setEventNames("blur","keyup");
      CharSequence dynamicExtraParameters="var result = {}, " + "kc=Wicket.Event.keyCode(event)," + "evtType=attrs.event.type;"+ "if (evtType === 'keyup') {"+ "if (kc===27) { result.save = false }"+ "else if (kc===13) { result = Wicket.Form.serializeElement(attrs.c); result.save = true; }"+ "}"+ "else if (evtType==='blur') { result = Wicket.Form.serializeElement(attrs.c); result.save = true; }"+ "return result;";
      attributes.getDynamicExtraParameters().add(dynamicExtraParameters);
      CharSequence precondition="var kc=Wicket.Event.keyCode(event)," + "evtType=attrs.event.type," + "ret=false;"+ "if(evtType==='blur' || (evtType==='keyup' && (kc===27 || kc===13))) ret = true;"+ "return ret;";
      JavaScriptPrecondition javaScriptPrecondition=new JavaScriptPrecondition(precondition);
      attributes.getPreconditions().add(javaScriptPrecondition);
    }
  }
);
  return editor;
}
