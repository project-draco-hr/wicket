{
  final MarkupElement element=markupStream.get();
  if ((element instanceof ComponentTag) && !markupStream.atCloseTag()) {
    final ComponentTag tag=(ComponentTag)element;
    final String id=tag.getId();
    if (id == null) {
      throw new WicketRuntimeException("Prgamming error: tag id must not be null: " + tag.toString());
    }
    if (log.isDebugEnabled()) {
      log.debug("Render component: " + id);
    }
    final Component<?> component=get(id);
    if (component != null) {
      component.render(markupStream);
    }
 else {
      MarkupContainer<?> container=this;
      while (container != null) {
        if (container instanceof IComponentResolver) {
          if (((IComponentResolver)container).resolve(this,markupStream,tag)) {
            return;
          }
        }
        container=container.findParent(MarkupContainer.class);
      }
      final List<IComponentResolver> componentResolvers=this.getApplication().getPageSettings().getComponentResolvers();
      for (      IComponentResolver resolver : componentResolvers) {
        if (resolver.resolve(this,markupStream,tag)) {
          return;
        }
      }
      if (tag.isWicketTag()) {
        if (tag.isChildTag()) {
          markupStream.throwMarkupException("Found " + tag.toString() + " but no <wicket:extend>");
        }
 else {
          markupStream.throwMarkupException("Failed to handle: " + tag.toString());
        }
      }
      markupStream.throwMarkupException("Unable to find component with id '" + id + "' in "+ this+ ". This means that you declared wicket:id="+ id+ " in your markup, but that you either did not add the "+ "component to your page at all, or that the hierarchy does not match.");
    }
  }
 else {
    getResponse().write(element.toCharSequence());
    markupStream.next();
  }
}
