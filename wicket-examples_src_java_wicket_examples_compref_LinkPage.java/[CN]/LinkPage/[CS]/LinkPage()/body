{
  final ClickCount count1=new ClickCount();
  Link link1=new Link(this,"link1"){
    @Override public void onClick(){
      count1.clicks++;
    }
  }
;
  new Label(link1,"label1",new Model<String>(){
    @Override public String getObject(){
      return Integer.toString(count1.clicks);
    }
  }
);
class CustomLink extends Link {
    final ClickCount count2;
    /** 
 * Construct.
 * @param id
 */
    public CustomLink(    MarkupContainer parent,    String id){
      super(parent,id);
      count2=new ClickCount();
      new ClickCountLabel(this,"label2",count2);
    }
    @Override public void onClick(){
      count2.clicks++;
    }
  }
  new CustomLink(this,"link2");
class ButtonLink extends Link {
    final ClickCount count3;
    /** 
 * Construct.
 * @param id
 */
    public ButtonLink(    MarkupContainer parent,    String id){
      super(parent,id);
      count3=new ClickCount();
      add(new AttributeModifier("value",new Model<String>(){
        @Override public String getObject(){
          return "this button is clicked " + count3.clicks + " times";
        }
      }
));
    }
    @Override public void onClick(){
      count3.clicks++;
    }
  }
  new ButtonLink(this,"link3");
}
