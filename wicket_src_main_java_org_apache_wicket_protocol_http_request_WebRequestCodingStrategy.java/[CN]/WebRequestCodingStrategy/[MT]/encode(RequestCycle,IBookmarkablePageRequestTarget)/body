{
  final AppendingStringBuffer url=new AppendingStringBuffer(64);
  final Class<? extends Page> pageClass=requestTarget.getPageClass();
  final Application application=Application.get();
  String pageMapName=requestTarget.getPageMapName();
  if (pageMapName == null) {
    IRequestTarget currentTarget=requestCycle.getRequestTarget();
    if (currentTarget instanceof IPageRequestTarget) {
      Page currentPage=((IPageRequestTarget)currentTarget).getPage();
      final IPageMap pageMap=currentPage.getPageMap();
      if (pageMap.isDefault()) {
        pageMapName="";
      }
 else {
        pageMapName=pageMap.getName();
      }
    }
 else {
      pageMapName="";
    }
  }
  WebRequestEncoder encoder=new WebRequestEncoder(url);
  if (!application.getHomePage().equals(pageClass) || !"".equals(pageMapName) || (application.getHomePage().equals(pageClass) && requestTarget instanceof BookmarkableListenerInterfaceRequestTarget)) {
    encoder.addValue(WebRequestCodingStrategy.BOOKMARKABLE_PAGE_PARAMETER_NAME,pageMapName + Component.PATH_SEPARATOR + pageClass.getName());
  }
  final PageParameters parameters=requestTarget.getPageParameters();
  if (parameters != null) {
    final Iterator iterator;
    if (UnitTestSettings.getSortUrlParameters()) {
      iterator=new TreeSet(parameters.keySet()).iterator();
    }
 else {
      iterator=parameters.keySet().iterator();
    }
    while (iterator.hasNext()) {
      final String key=(String)iterator.next();
      final String values[]=parameters.getStringArray(key);
      if (values != null) {
        for (int i=0; i < values.length; i++) {
          encoder.addValue(key,values[i]);
        }
      }
    }
  }
  return url;
}
