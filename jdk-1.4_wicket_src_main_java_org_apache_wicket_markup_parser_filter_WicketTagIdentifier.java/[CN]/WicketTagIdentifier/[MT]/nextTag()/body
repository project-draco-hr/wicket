{
  XmlTag xmlTag=(XmlTag)getParent().nextTag();
  if (xmlTag == null) {
    return xmlTag;
  }
  final String namespace=this.markup.getWicketNamespace();
  final String wicketTagAttr=namespace + ":tag";
  final String wicketTag=xmlTag.getAttributes().getString(wicketTagAttr);
  if (!Strings.isEmpty(wicketTag)) {
    xmlTag=xmlTag.mutable();
    xmlTag.setNamespace(namespace);
    xmlTag.setName(wicketTag);
  }
  ComponentTag tag;
  if (namespace.equalsIgnoreCase(xmlTag.getNamespace())) {
    tag=new WicketTag(xmlTag);
    tag.setId("_" + tag.getName());
    if (!isWellKnown(xmlTag)) {
      throw new ParseException("Unknown tag name with Wicket namespace: '" + xmlTag.getName() + "'. Might be you haven't installed the appropriate resolver?",tag.getPos());
    }
  }
 else {
    tag=new ComponentTag(xmlTag);
  }
  final String value=tag.getAttributes().getString(namespace + ":id");
  if (value != null) {
    if (value.trim().length() == 0) {
      throw new ParseException("The wicket:id attribute value must not be empty. May be unmatched quotes?!?",tag.getPos());
    }
    tag.setId(value);
  }
  return tag;
}
