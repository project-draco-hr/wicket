{
  super(id,model);
  this.form=form;
  add(new AjaxFormSubmitBehavior(form,"onclick"){
    private static final long serialVersionUID=1L;
    /** 
 * @see org.apache.wicket.ajax.form.AjaxFormSubmitBehavior#onSubmit(org.apache.wicket.ajax.AjaxRequestTarget)
 */
    @Override protected void onSubmit(    AjaxRequestTarget target){
      AjaxButton.this.onSubmit(target,AjaxButton.this.getForm());
    }
    /** 
 * @see org.apache.wicket.ajax.form.AjaxFormSubmitBehavior#onError(org.apache.wicket.ajax.AjaxRequestTarget)
 */
    @Override protected void onError(    AjaxRequestTarget target){
      AjaxButton.this.onError(target,AjaxButton.this.getForm());
    }
    /** 
 * @see org.apache.wicket.ajax.form.AjaxFormSubmitBehavior#getEventHandler()
 */
    @Override protected CharSequence getEventHandler(){
      final String script=AjaxButton.this.getOnClickScript();
      AppendingStringBuffer handler=new AppendingStringBuffer();
      if (!Strings.isEmpty(script)) {
        handler.append(script).append(";");
      }
      handler.append(super.getEventHandler());
      handler.append("; return false;");
      return handler;
    }
    /** 
 * @see org.apache.wicket.ajax.AbstractDefaultAjaxBehavior#getAjaxCallDecorator()
 */
    @Override protected IAjaxCallDecorator getAjaxCallDecorator(){
      return AjaxButton.this.getAjaxCallDecorator();
    }
    @Override protected AjaxChannel getChannel(){
      return AjaxButton.this.getChannel();
    }
    @Override public boolean getDefaultProcessing(){
      return AjaxButton.this.getDefaultFormProcessing();
    }
  }
);
}
