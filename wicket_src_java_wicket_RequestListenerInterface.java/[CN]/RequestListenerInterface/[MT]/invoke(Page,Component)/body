{
  if (!component.isActionAuthorized(Component.ENABLE)) {
    throw new UnauthorizedActionException(component,Component.ENABLE);
  }
  page.beforeCallComponent(component,this);
  try {
    method.invoke(component,new Object[]{});
  }
 catch (  InvocationTargetException e) {
    if (e.getTargetException() instanceof AbstractRestartResponseException) {
      throw (RuntimeException)e.getTargetException();
    }
    throw new WicketRuntimeException("Method " + method.getName() + " of "+ method.getDeclaringClass()+ " targeted at component "+ component+ " threw an exception",e);
  }
catch (  Exception e) {
    throw new WicketRuntimeException("Method " + method.getName() + " of "+ method.getDeclaringClass()+ " targeted at component "+ component+ " threw an exception",e);
  }
 finally {
    page.afterCallComponent(component,this);
  }
}
