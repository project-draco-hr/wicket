{
  String string=null;
  final IResourceSettings resourceSettings=Application.get().getResourceSettings();
  Iterator iter=resourceSettings.getStringResourceLoaders().iterator();
  while (iter.hasNext()) {
    IStringResourceLoader loader=(IStringResourceLoader)iter.next();
    string=loader.loadStringResource(component,key);
    if (string != null) {
      break;
    }
  }
  if ((string == null) && (defaultValue != null)) {
    if (resourceSettings.getUseDefaultOnMissingResource()) {
      string=defaultValue;
    }
  }
  if (string != null) {
    return substitutePropertyExpressions(component,string,model);
  }
  if (resourceSettings.getThrowExceptionOnMissingResource()) {
    AppendingStringBuffer message=new AppendingStringBuffer("Unable to find resource: " + key);
    if (component != null) {
      message.append(" for component: ");
      message.append(component.getPageRelativePath());
      message.append(" [class=").append(component.getClass().getName()).append("]");
    }
    throw new MissingResourceException(message.toString(),(component != null ? component.getClass().getName() : ""),key);
  }
  return "[Warning: String resource for '" + key + "' not found]";
}
