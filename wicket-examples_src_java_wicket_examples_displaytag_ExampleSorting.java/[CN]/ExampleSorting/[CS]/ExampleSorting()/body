{
  final List data=new TestList(6,false);
  ListView table=new ListViewWithAlternatingRowStyle("rows",data){
    public void populateItem(    final ListItem listItem){
      final ListObject value=(ListObject)listItem.getModelObject();
      listItem.add(new Label("id",Integer.toString(value.getId())));
      listItem.add(new Label("name",value.getName()));
      listItem.add(new Label("email",value.getEmail()));
      listItem.add(new Label("status",value.getStatus()));
      listItem.add(new Label("comment",value.getDescription()));
    }
  }
;
  add(table);
  add(new SortableListViewHeaders("header",table){
    /** 
 * If object does not support equals()
 */
    protected int compareTo(    final SortableListViewHeader header,    final Object o1,    final Object o2){
      if (header.getId().equals("id")) {
        return ((ListObject)o1).getId() - ((ListObject)o2).getId();
      }
      return super.compareTo(header,o1,o2);
    }
    /** 
 * Define how to do sorting
 * @see SortableListViewHeaders#getObjectToCompare(SortableListViewHeader,java.lang.Object)
 */
    protected Comparable getObjectToCompare(    final SortableListViewHeader header,    final Object object){
      final String name=header.getId();
      if (name.equals("name")) {
        return ((ListObject)object).getName();
      }
      if (name.equals("email")) {
        return ((ListObject)object).getEmail();
      }
      if (name.equals("status")) {
        return ((ListObject)object).getStatus();
      }
      if (name.equals("comment")) {
        return ((ListObject)object).getDescription();
      }
      return "";
    }
  }
);
}
