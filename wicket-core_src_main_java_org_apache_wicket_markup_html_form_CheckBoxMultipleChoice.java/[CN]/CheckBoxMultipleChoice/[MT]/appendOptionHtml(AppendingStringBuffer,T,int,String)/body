{
  Object displayValue=getChoiceRenderer().getDisplayValue(choice);
  Class<?> objectClass=displayValue == null ? null : displayValue.getClass();
  String label="";
  if (objectClass != null && objectClass != String.class) {
    @SuppressWarnings("rawtypes") IConverter converter=getConverter(objectClass);
    label=converter.convertToString(displayValue,getLocale());
  }
 else   if (displayValue != null) {
    label=displayValue.toString();
  }
  if (label != null) {
    buffer.append(getPrefix(index,choice));
    String id=getChoiceRenderer().getIdValue(choice,index);
    final String idAttr=getCheckBoxMarkupId(id);
    String display=label;
    if (localizeDisplayValues()) {
      display=getLocalizer().getString(label,this,label);
    }
    final CharSequence escaped=(getEscapeModelStrings() ? Strings.escapeMarkup(display) : display);
switch (labelPosition) {
case BEFORE:
      buffer.append("<label for=\"");
    buffer.append(Strings.escapeMarkup(idAttr));
  buffer.append("\">").append(escaped).append("</label>");
break;
case WRAP_AFTER:
buffer.append("<label>");
break;
case WRAP_BEFORE:
buffer.append("<label>");
buffer.append(escaped).append(' ');
break;
}
buffer.append("<input name=\"");
buffer.append(getInputName());
buffer.append('"');
buffer.append(" type=\"checkbox\"");
if (isSelected(choice,index,selected)) {
buffer.append(" checked=\"checked\"");
}
if (isDisabled(choice,index,selected) || !isEnabledInHierarchy()) {
buffer.append(" disabled=\"disabled\"");
}
buffer.append(" value=\"");
buffer.append(Strings.escapeMarkup(id));
buffer.append("\" id=\"");
buffer.append(Strings.escapeMarkup(idAttr));
buffer.append('"');
{
IValueMap attrs=getAdditionalAttributes(index,choice);
if (attrs != null) {
for (Map.Entry<String,Object> attr : attrs.entrySet()) {
buffer.append(' ').append(Strings.escapeMarkup(attr.getKey())).append("=\"").append(Strings.escapeMarkup(attr.getValue().toString())).append('"');
}
}
}
DebugSettings debugSettings=getApplication().getDebugSettings();
String componentPathAttributeName=debugSettings.getComponentPathAttributeName();
if (Strings.isEmpty(componentPathAttributeName) == false) {
CharSequence path=getPageRelativePath();
path=Strings.replaceAll(path,"_","__");
path=Strings.replaceAll(path,":","_");
buffer.append(' ').append(componentPathAttributeName).append("=\"").append(path).append("_input_").append(index).append('"');
}
buffer.append("/>");
switch (labelPosition) {
case WRAP_BEFORE:
buffer.append("</label>");
break;
case WRAP_AFTER:
buffer.append(' ').append(escaped).append("</label>");
break;
case AFTER:
buffer.append("<label for=\"");
buffer.append(Strings.escapeMarkup(idAttr));
buffer.append("\">").append(escaped).append("</label>");
break;
}
buffer.append(getSuffix(index,choice));
}
}
