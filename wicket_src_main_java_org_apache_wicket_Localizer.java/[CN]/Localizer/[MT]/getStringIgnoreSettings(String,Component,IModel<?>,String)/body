{
  boolean addedToPage=false;
  if (component != null) {
    if ((component instanceof Page) || null != component.findParent(Page.class)) {
      addedToPage=true;
    }
    if (!addedToPage) {
      logger.warn("Tried to retrieve a localized string for a component that has not yet been added to the page. " + "This can sometimes lead to an invalid or no localized resource returned. " + "Make sure you are not calling Component#getString() inside your Component's constructor. "+ "Offending component: {}",component);
    }
  }
  String cacheKey=null;
  String value=null;
  if ((cache != null) && addedToPage) {
    cacheKey=getCacheKey(key,component);
  }
  if ((cacheKey != null) && cache.containsKey(cacheKey)) {
    value=getFromCache(cacheKey);
  }
 else {
    Iterator<IStringResourceLoader> iter=Application.get().getResourceSettings().getStringResourceLoaders().iterator();
    while (iter.hasNext()) {
      IStringResourceLoader loader=iter.next();
      value=loader.loadStringResource(component,key);
      if (value != null) {
        break;
      }
    }
    if (cacheKey != null) {
      putIntoCache(cacheKey,value);
    }
  }
  if (value == null) {
    value=defaultValue;
  }
  if (value != null) {
    return substitutePropertyExpressions(component,value,model);
  }
  return null;
}
