{
  super(id);
  final List data=new ArrayList();
  add(new Label("page",page.toString()));
  data.clear();
  data.addAll(getComponentData(page));
  Collections.sort(data,new Comparator(){
    public int compare(    Object o1,    Object o2){
      return ((ComponentData)o1).path.compareTo(((ComponentData)o2).path);
    }
  }
);
  add(new ListView("components",data){
    private static final long serialVersionUID=1L;
    /** 
 * Populate the table with Wicket elements
 */
    protected void populateItem(    final ListItem listItem){
      final ComponentData cdata=(ComponentData)listItem.getModelObject();
      listItem.add(new Label("row",Integer.toString(listItem.getIndex() + 1)));
      listItem.add(new Label("path",cdata.path));
      listItem.add(new Label("type",cdata.type));
      listItem.add(new Label("model",cdata.value));
    }
  }
);
}
