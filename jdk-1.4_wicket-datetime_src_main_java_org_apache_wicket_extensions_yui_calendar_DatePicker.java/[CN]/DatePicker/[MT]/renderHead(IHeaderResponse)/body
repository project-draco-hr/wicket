{
  YuiLib.load(response);
  if (enableMonthYearSelection()) {
    response.renderCSSReference(new CompressedResourceReference(DatePicker.class,"assets/wicket-calendar.css"));
  }
  Map variables=new HashMap();
  String widgetId=getEscapedComponentMarkupId();
  variables.put("componentId",getComponentMarkupId());
  variables.put("widgetId",widgetId);
  variables.put("datePattern",getDatePattern());
  variables.put("fireChangeEvent",Boolean.valueOf(notifyComponentOnDateSelected()));
  variables.put("alignWithIcon",Boolean.valueOf(alignWithIcon()));
  variables.put("pathToWicketDate",RequestCycle.get().urlFor(new JavascriptResourceReference(DatePicker.class,"wicket-date.js")));
  variables.put("basePath",RequestCycle.get().urlFor(new JavascriptResourceReference(YuiLib.class,"")));
  variables.put("enableMonthYearSelection",Boolean.valueOf(enableMonthYearSelection()));
  Properties p=new Properties();
  configure(p);
  StringBuffer calendarInit=new StringBuffer();
  for (Iterator i=p.entrySet().iterator(); i.hasNext(); ) {
    Entry entry=(Entry)i.next();
    calendarInit.append(entry.getKey());
    Object value=entry.getValue();
    if (value instanceof CharSequence) {
      calendarInit.append(":\"");
      calendarInit.append(Strings.toEscapedUnicode(value.toString()));
      calendarInit.append("\"");
    }
 else     if (value instanceof CharSequence[]) {
      calendarInit.append(":[");
      CharSequence[] valueArray=(CharSequence[])value;
      for (int j=0; j < valueArray.length; j++) {
        CharSequence tmpValue=valueArray[j];
        if (j > 0) {
          calendarInit.append(",");
        }
        if (tmpValue != null) {
          calendarInit.append("\"");
          calendarInit.append(Strings.toEscapedUnicode(tmpValue.toString()));
          calendarInit.append("\"");
        }
      }
      calendarInit.append("]");
    }
 else {
      calendarInit.append(":");
      calendarInit.append(Strings.toEscapedUnicode(String.valueOf(value)));
    }
    if (i.hasNext()) {
      calendarInit.append(",");
    }
  }
  variables.put("calendarInit",calendarInit.toString());
  TextTemplate datePickerJs=new PackagedTextTemplate(DatePicker.class,"DatePicker.js");
  datePickerJs.interpolate(variables);
  response.renderOnDomReadyJavascript(datePickerJs.asString());
}
