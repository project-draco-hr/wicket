{
  String name=getMethod.getName();
  if (name.startsWith("get")) {
    name="set" + name.substring(3);
  }
 else {
    name="set" + name.substring(2);
  }
  try {
    Method method=clz.getMethod(name,new Class[]{getMethod.getReturnType()});
    if (method != null) {
      method.setAccessible(true);
    }
    return method;
  }
 catch (  NoSuchMethodException e) {
    Method[] methods=clz.getMethods();
    for (int i=0; i < methods.length; i++) {
      if (methods[i].getName().equals(name)) {
        Class[] parameterTypes=methods[i].getParameterTypes();
        if (parameterTypes.length == 1) {
          if (parameterTypes[0].isAssignableFrom(getMethod.getReturnType())) {
            return methods[i];
          }
        }
      }
    }
    log.debug("Cannot find setter corresponding to " + getMethod);
  }
catch (  Exception e) {
    log.debug("Cannot find setter corresponding to " + getMethod);
  }
  return null;
}
