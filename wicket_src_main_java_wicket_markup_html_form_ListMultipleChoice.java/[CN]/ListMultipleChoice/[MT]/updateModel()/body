{
  Collection<T> selectedValues=getModelObject();
  if (selectedValues != null) {
    if (getModelObject() != selectedValues) {
      throw new WicketRuntimeException("Updating a ListMultipleChoice works by modifying the underlying model object in-place, so please make sure that getObject() always returns the same Collection instance!");
    }
    modelChanging();
    selectedValues.clear();
    selectedValues.addAll(getConvertedInput());
    modelChanged();
    try {
      getModel().setObject(selectedValues);
    }
 catch (    Exception e) {
      log.info("no setter for the property attached to " + this);
    }
  }
 else {
    selectedValues=getConvertedInput();
    setModelObject(selectedValues);
  }
}
