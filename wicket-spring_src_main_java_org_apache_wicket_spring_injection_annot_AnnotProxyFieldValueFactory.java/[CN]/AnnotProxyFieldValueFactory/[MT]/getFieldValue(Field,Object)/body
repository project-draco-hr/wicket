{
  if (supportsField(field)) {
    SpringBean annot=field.getAnnotation(SpringBean.class);
    String name;
    boolean required;
    if (annot != null) {
      name=annot.name();
      required=annot.required();
    }
 else {
      Named named=field.getAnnotation(Named.class);
      name=named != null ? named.value() : "";
      required=false;
    }
    String beanName=getBeanName(field,name,required);
    if (beanName == null) {
      return null;
    }
    SpringBeanLocator locator=new SpringBeanLocator(beanName,field.getType(),contextLocator);
    Object cachedValue=cache.get(locator);
    if (cachedValue != null) {
      return cachedValue;
    }
    Object target;
    try {
      target=locator.locateProxyTarget();
    }
 catch (    IllegalStateException isx) {
      if (required) {
        throw isx;
      }
 else {
        return null;
      }
    }
    if (wrapInProxies) {
      target=LazyInitProxyFactory.createProxy(field.getType(),locator);
    }
    if (locator.isSingletonBean()) {
      Object tmpTarget=cache.putIfAbsent(locator,target);
      if (tmpTarget != null) {
        target=tmpTarget;
      }
    }
    return target;
  }
  return null;
}
