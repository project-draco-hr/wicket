{
  super(id,new FilterStateModel<T>(locator));
  this.locator=locator;
  hidden=new HiddenField<String>("focus-tracker",new Model<String>());
  hidden.add(new AbstractBehavior(){
    private static final long serialVersionUID=1L;
    @Override public void onComponentTag(    Component component,    ComponentTag tag){
      tag.put("id",getFocusTrackerFieldCssId());
      super.onComponentTag(component,tag);
    }
  }
);
  add(hidden);
  add(new WebMarkupContainer("focus-restore"){
    private static final long serialVersionUID=1L;
    @Override protected void onComponentTagBody(    MarkupStream markupStream,    ComponentTag openTag){
      AppendingStringBuffer script=new AppendingStringBuffer("<script type=\"text/javascript\">_filter_focus_restore('").append(getFocusTrackerFieldCssId()).append("');</script>");
      replaceComponentTagBody(markupStream,openTag,script);
    }
  }
);
}
