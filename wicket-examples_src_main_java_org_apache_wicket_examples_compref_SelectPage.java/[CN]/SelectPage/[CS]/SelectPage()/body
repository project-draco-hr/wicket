{
  final Input input=new Input();
  setDefaultModel(new CompoundPropertyModel<Input>(input));
  FeedbackPanel feedbackPanel=new FeedbackPanel("feedback");
  add(feedbackPanel);
  Form<?> form=new Form("form"){
    @Override protected void onSubmit(){
      info("input: " + input);
    }
  }
;
  add(form);
  Select site=new Select("site");
  form.add(site);
  site.add(new SelectOption<String>("site1",new Model<String>("tss")));
  site.add(new SelectOption<String>("site2",new Model<String>("jl")));
  site.add(new SelectOption<String>("site3",new Model<String>("sd")));
  site.add(new SelectOption<String>("site4",new Model<String>("bn")));
  Select choices=new Select("choices");
  form.add(choices);
  IOptionRenderer<String> renderer=new IOptionRenderer<String>(){
    public String getDisplayValue(    String object){
      return object;
    }
    public IModel<String> getModel(    String value){
      return new Model<String>(value);
    }
  }
;
  IModel<Collection<? extends String>> model=new WildcardCollectionModel<String>(MANY_CHOICES);
  choices.add(new SelectOptions<String>("manychoices",model,renderer));
}
