{
  add(new Label("currentUser",new PropertyModel(this,"session.user")));
  add(new ListView("users",RolesAuthApplication.USERS){
    @Override protected void populateItem(    ListItem item){
      final User user=(User)item.getModelObject();
      item.add(new Link("selectUserLink"){
        @Override public void onClick(){
          RolesAuthSession session=(RolesAuthSession)Session.get();
          session.setUser(user);
        }
      }
.add(new Label("userId",new Model(user))));
    }
  }
);
  add(new BookmarkablePageLink("adminBookmarkableLink",AdminBookmarkablePage.class));
  add(new Link("adminInternalLink"){
    @Override public void onClick(){
      setResponsePage(new AdminInternalPage("foo"));
    }
  }
);
  add(new BookmarkablePageLink("panelsPageLink",PanelsPage.class));
  add(new BookmarkablePageLink("adminAnnotBookmarkableLink",AdminAnnotBookmarkablePage.class));
  add(new Link("adminAnnotInternalLink"){
    @Override public void onClick(){
      setResponsePage(new AdminAnnotInternalPage("bar"));
    }
  }
);
  add(new BookmarkablePageLink("panelsAnnotPageLink",AnnotPanelsPage.class));
}
