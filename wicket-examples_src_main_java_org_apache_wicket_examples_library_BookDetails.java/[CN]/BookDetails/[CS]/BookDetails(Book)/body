{
  add(new Label<String>("title",book.getTitle()));
  add(new Label<String>("author",book.getAuthor()));
  add(new Label<String>("fiction",Boolean.toString(book.getFiction())));
  add(BookDetails.link("companion",book.getCompanionBook(),getLocalizer().getString("noBookTitle",this)));
  add(BookDetails.link("related",book.getRelatedBook(),getLocalizer().getString("noBookTitle",this)));
  String writingStyles;
  final boolean hasStyles=(book.getWritingStyles() != null) && (book.getWritingStyles().size() > 0);
  if (hasStyles) {
    StringList styles=new StringList();
    for (    WritingStyle style : book.getWritingStyles()) {
      styles.add(getLocalizer().getString(style.toString(),this));
    }
    writingStyles=styles.toString();
  }
 else {
    writingStyles=getLocalizer().getString("noWritingStyles",this);
  }
  Label<String> writingStylesLabel=new Label<String>("writingStyles",writingStyles);
  final AttributeModifier italic=new AttributeModifier("class",new Model<String>("italic"));
  italic.setEnabled(!hasStyles);
  add(writingStylesLabel.add(italic));
  add(EditBook.link("edit",book.getId()));
}
