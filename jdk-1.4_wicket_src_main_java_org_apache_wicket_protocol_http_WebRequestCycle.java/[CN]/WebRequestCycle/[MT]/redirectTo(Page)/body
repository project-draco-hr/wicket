{
  String redirectUrl=null;
  IRequestCycleSettings settings=application.getRequestCycleSettings();
  if ((settings.getRenderStrategy() == IRequestCycleSettings.REDIRECT_TO_BUFFER) && (application instanceof WebApplication)) {
    final WebResponse currentResponse=getWebResponse();
    try {
      if (getWebRequest() instanceof ServletWebRequest) {
        ((ServletWebRequest)getWebRequest()).setWicketRedirectUrl(page.urlFor(IRedirectListener.INTERFACE).toString().replaceAll("../",""));
      }
      final BufferedHttpServletResponse servletResponse=new BufferedHttpServletResponse(currentResponse.getHttpServletResponse());
      final WebResponse redirectResponse=new WebResponse(servletResponse){
        public CharSequence encodeURL(        CharSequence url){
          return currentResponse.encodeURL(url);
        }
      }
;
      redirectResponse.setCharacterEncoding(currentResponse.getCharacterEncoding());
      setResponse(redirectResponse);
      page.renderPage();
      setResponse(currentResponse);
      final String responseRedirect=servletResponse.getRedirectUrl();
      if (responseRedirect != null) {
        redirectUrl=responseRedirect;
      }
 else       if (servletResponse.getContentLength() > 0) {
        servletResponse.filter(currentResponse);
        servletResponse.setCharacterEncoding(currentResponse.getCharacterEncoding());
        servletResponse.close();
        if (getWebRequest() instanceof ServletWebRequest) {
          ((ServletWebRequest)getWebRequest()).setWicketRedirectUrl(null);
        }
        redirectUrl=page.urlFor(IRedirectListener.INTERFACE).toString();
        int index=redirectUrl.indexOf("?");
        String sessionId=getApplication().getSessionStore().getSessionId(request,true);
        ((WebApplication)application).addBufferedResponse(sessionId,redirectUrl.substring(index + 1),servletResponse);
      }
    }
 catch (    RuntimeException ex) {
      setResponse(currentResponse);
      if (ex instanceof AbortException)       throw ex;
      if (!(ex instanceof PageExpiredException))       logRuntimeException(ex);
      IRequestCycleProcessor processor=getProcessor();
      processor.respond(ex,this);
      return;
    }
  }
 else {
    redirectUrl=page.urlFor(IRedirectListener.INTERFACE).toString();
  }
  if (redirectUrl == null) {
    redirectUrl=page.urlFor(IRedirectListener.INTERFACE).toString();
  }
  getSession().touch(page);
  response.redirect(redirectUrl);
}
