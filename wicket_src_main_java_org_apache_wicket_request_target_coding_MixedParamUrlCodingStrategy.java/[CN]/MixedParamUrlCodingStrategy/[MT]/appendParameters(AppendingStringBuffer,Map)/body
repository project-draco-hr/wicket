{
  if (!url.endsWith("/")) {
    url.append("/");
  }
  Set parameterNamesToAdd=new HashSet(parameters.keySet());
  boolean foundParameter=false;
  int lastSpecifiedParameter=parameterNames.length;
  while (lastSpecifiedParameter != 0 && !foundParameter) {
    foundParameter=parameters.containsKey(parameterNames[--lastSpecifiedParameter]);
  }
  if (foundParameter) {
    for (int i=0; i <= lastSpecifiedParameter; i++) {
      String parameterName=parameterNames[i];
      final Object param=parameters.get(parameterName);
      String value=param instanceof String[] ? ((String[])param)[0] : (String)param;
      if (value == null) {
        value="";
      }
      url.append(urlEncodePathComponent(value)).append("/");
      parameterNamesToAdd.remove(parameterName);
    }
  }
  if (!parameterNamesToAdd.isEmpty()) {
    boolean first=true;
    final Iterator iterator;
    if (UnitTestSettings.getSortUrlParameters()) {
      iterator=new TreeSet(parameterNamesToAdd).iterator();
    }
 else {
      iterator=parameterNamesToAdd.iterator();
    }
    while (iterator.hasNext()) {
      url.append(first ? '?' : '&');
      String parameterName=(String)iterator.next();
      final Object param=parameters.get(parameterName);
      String value=param instanceof String[] ? ((String[])param)[0] : (String)param;
      url.append(urlEncodeQueryComponent(parameterName)).append("=").append(urlEncodeQueryComponent(value));
      first=false;
    }
  }
}
