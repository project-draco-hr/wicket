{
  if (pageMap.size() > maxVersions) {
    final List list=pageMap.getEntries();
    IPageMapEntry leastRecentlyUsed=null;
    int min=Integer.MAX_VALUE;
    for (Iterator iterator=list.iterator(); iterator.hasNext(); ) {
      IPageMapEntry entry=(IPageMapEntry)iterator.next();
      int accessSequenceNumber=entry.getAccessSequenceNumber();
      if (accessSequenceNumber < min) {
        min=accessSequenceNumber;
        leastRecentlyUsed=entry;
      }
    }
    if (leastRecentlyUsed != null) {
      final Page page=leastRecentlyUsed.getPage();
      int currentVersionNumber=page.getCurrentVersionNumber();
      if (currentVersionNumber > 1) {
        page.getVersion(currentVersionNumber - 1);
      }
 else {
        pageMap.remove(leastRecentlyUsed);
      }
    }
  }
}
