{
  modelsMap.put("AUDI",Arrays.asList(new String[]{"A4","A6","TT"}));
  modelsMap.put("CADILLAC",Arrays.asList(new String[]{"CTS","DTS","ESCALADE","SRX","DEVILLE"}));
  modelsMap.put("FORD",Arrays.asList(new String[]{"CROWN","ESCAPE","EXPEDITION","EXPLORER","F-150"}));
  IModel makeChoices=new AbstractReadOnlyModel(){
    public Object getObject(){
      Set keys=modelsMap.keySet();
      List list=new ArrayList(keys);
      return list;
    }
  }
;
  IModel modelChoices=new AbstractReadOnlyModel(){
    public Object getObject(){
      List models=(List)modelsMap.get(selectedMake);
      if (models == null) {
        models=Collections.EMPTY_LIST;
      }
      return models;
    }
  }
;
  Form form=new Form("form");
  add(form);
  final DropDownChoice makes=new DropDownChoice("makes",new PropertyModel(this,"selectedMake"),makeChoices);
  final DropDownChoice models=new DropDownChoice("models",new Model(),modelChoices);
  models.setOutputMarkupId(true);
  form.add(makes);
  form.add(models);
  makes.add(new AjaxFormComponentUpdatingBehavior("onchange"){
    protected void onUpdate(    AjaxRequestTarget target){
      target.addComponent(models);
    }
  }
);
}
