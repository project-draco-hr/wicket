{
  ConcreteObject proxy=(ConcreteObject)LazyInitProxyFactory.createProxy(ConcreteObject.class,concreteObjectLocator);
  assertTrue(proxy instanceof ILazyInitProxy);
  assertTrue(((ILazyInitProxy)proxy).getObjectLocator() == concreteObjectLocator);
  assertFalse(Proxy.isProxyClass(proxy.getClass()));
  assertEquals(proxy.getMessage(),"concrete");
  ConcreteObject proxy2=(ConcreteObject)Objects.cloneObject(proxy);
  assertTrue(proxy != proxy2);
  assertEquals(proxy2.getMessage(),"concrete");
  final IObjectMethodTester tester=new ObjectMethodTester();
  assertTrue(tester.isValid());
  IProxyTargetLocator testerLocator=new IProxyTargetLocator(){
    /** 
 */
    private static final long serialVersionUID=1L;
    public Object locateProxyTarget(){
      return tester;
    }
  }
;
  ObjectMethodTester testerProxy=(ObjectMethodTester)LazyInitProxyFactory.createProxy(ObjectMethodTester.class,testerLocator);
  testerProxy.equals(this);
  testerProxy.hashCode();
  testerProxy.toString();
  assertTrue(tester.isValid());
}
