{
  short token=readShort();
  ClassStreamHandler lookup=ClassStreamHandler.lookup(boolean.class);
  if (token == lookup.getClassId()) {
    short count=readShort();
    for (int i=0; i < count; i++) {
      String key=(String)readObjectOverride();
      values.put(key,readBoolean() ? Boolean.TRUE : Boolean.FALSE);
    }
    token=readShort();
    if (token == ClassStreamHandler.NULL) {
      return;
    }
  }
  lookup=ClassStreamHandler.lookup(byte.class);
  if (token == lookup.getClassId()) {
    short count=readShort();
    for (int i=0; i < count; i++) {
      String key=(String)readObjectOverride();
      values.put(key,readByte());
    }
    token=readShort();
    if (token == ClassStreamHandler.NULL) {
      return;
    }
  }
  lookup=ClassStreamHandler.lookup(short.class);
  if (token == lookup.getClassId()) {
    short count=readShort();
    for (int i=0; i < count; i++) {
      String key=(String)readObjectOverride();
      values.put(key,readShort());
    }
    token=readShort();
    if (token == ClassStreamHandler.NULL) {
      return;
    }
  }
  lookup=ClassStreamHandler.lookup(char.class);
  if (token == lookup.getClassId()) {
    short count=readShort();
    for (int i=0; i < count; i++) {
      String key=(String)readObjectOverride();
      values.put(key,readChar());
    }
    token=readShort();
    if (token == ClassStreamHandler.NULL) {
      return;
    }
  }
  lookup=ClassStreamHandler.lookup(int.class);
  if (token == lookup.getClassId()) {
    short count=readShort();
    for (int i=0; i < count; i++) {
      String key=(String)readObjectOverride();
      values.put(key,readInt());
    }
    token=readShort();
    if (token == ClassStreamHandler.NULL) {
      return;
    }
  }
  lookup=ClassStreamHandler.lookup(long.class);
  if (token == lookup.getClassId()) {
    short count=readShort();
    for (int i=0; i < count; i++) {
      String key=(String)readObjectOverride();
      values.put(key,readLong());
    }
    token=readShort();
    if (token == ClassStreamHandler.NULL) {
      return;
    }
  }
  lookup=ClassStreamHandler.lookup(float.class);
  if (token == lookup.getClassId()) {
    short count=readShort();
    for (int i=0; i < count; i++) {
      String key=(String)readObjectOverride();
      values.put(key,readFloat());
    }
    token=readShort();
    if (token == ClassStreamHandler.NULL) {
      return;
    }
  }
  lookup=ClassStreamHandler.lookup(double.class);
  if (token == lookup.getClassId()) {
    short count=readShort();
    for (int i=0; i < count; i++) {
      String key=(String)readObjectOverride();
      values.put(key,readDouble());
    }
    token=readShort();
    if (token == ClassStreamHandler.NULL) {
      return;
    }
  }
  lookup=ClassStreamHandler.lookup(Serializable.class);
  if (token == lookup.getClassId()) {
    short count=readShort();
    for (int i=0; i < count; i++) {
      String key=(String)readObjectOverride();
      values.put(key,readObjectOverride());
    }
    token=readShort();
  }
  if (token != ClassStreamHandler.NULL) {
    throw new RuntimeException("Expected NULL end byte");
  }
}
