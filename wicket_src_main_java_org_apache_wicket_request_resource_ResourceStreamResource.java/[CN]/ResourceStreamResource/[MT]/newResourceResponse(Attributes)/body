{
  ResourceResponse data=new ResourceResponse();
  data.setLastModified(stream.lastModifiedTime().toDate());
  if (data.dataNeedsToBeWritten(attributes)) {
    InputStream inputStream=null;
    if (stream instanceof IResourceStreamWriter == false) {
      try {
        inputStream=stream.getInputStream();
      }
 catch (      ResourceStreamNotFoundException e) {
        data.setError(HttpServletResponse.SC_NOT_FOUND);
        close();
      }
    }
    data.setContentDisposition(contentDisposition);
    data.setContentLength(stream.length());
    data.setFileName(fileName);
    data.setContentType(stream.getContentType());
    data.setTextEncoding(textEncoding);
    if (stream instanceof IResourceStreamWriter) {
      data.setWriteCallback(new WriteCallback(){
        @Override public void writeData(        Attributes attributes){
          ((IResourceStreamWriter)stream).write(attributes.getResponse());
          close();
        }
      }
);
    }
 else {
      final InputStream s=inputStream;
      data.setWriteCallback(new WriteCallback(){
        @Override public void writeData(        Attributes attributes){
          try {
            writeStream(attributes,s);
          }
  finally {
            close();
          }
        }
      }
);
    }
  }
  return data;
}
