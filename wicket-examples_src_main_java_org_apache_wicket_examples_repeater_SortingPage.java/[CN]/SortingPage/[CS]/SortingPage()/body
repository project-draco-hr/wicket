{
  SortableContactDataProvider dp=new SortableContactDataProvider();
  final DataView<Contact> dataView=new DataView<Contact>("sorting",dp){
    @Override protected void populateItem(    final Item<Contact> item){
      Contact contact=item.getModelObject();
      item.add(new ActionPanel("actions",item.getModel()));
      item.add(new Label<String>("contactid",String.valueOf(contact.getId())));
      item.add(new Label<String>("firstname",contact.getFirstName()));
      item.add(new Label<String>("lastname",contact.getLastName()));
      item.add(new Label<String>("homephone",contact.getHomePhone()));
      item.add(new Label<String>("cellphone",contact.getCellPhone()));
      item.add(new AttributeModifier("class",true,new AbstractReadOnlyModel<String>(){
        @Override public String getObject(){
          return (item.getIndex() % 2 == 1) ? "even" : "odd";
        }
      }
));
    }
  }
;
  dataView.setItemsPerPage(8);
  add(new OrderByBorder("orderByFirstName","firstName",dp){
    @Override protected void onSortChanged(){
      dataView.setCurrentPage(0);
    }
  }
);
  add(new OrderByBorder("orderByLastName","lastName",dp){
    @Override protected void onSortChanged(){
      dataView.setCurrentPage(0);
    }
  }
);
  add(dataView);
  add(new PagingNavigator("navigator",dataView));
}
