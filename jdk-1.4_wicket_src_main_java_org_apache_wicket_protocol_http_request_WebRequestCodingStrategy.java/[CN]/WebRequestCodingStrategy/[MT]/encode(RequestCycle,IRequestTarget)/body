{
  CharSequence url=pathForTarget(requestTarget);
  RequestContext requestContext=RequestContext.get();
  boolean portletRequest=requestContext.isPortletRequest();
  boolean sharedResourceURL=false;
  if (url != null && !portletRequest) {
  }
 else   if (requestTarget instanceof IBookmarkablePageRequestTarget) {
    url=requestContext.encodeRenderURL(url == null ? encode(requestCycle,(IBookmarkablePageRequestTarget)requestTarget) : url);
  }
 else   if (requestTarget instanceof ISharedResourceRequestTarget) {
    url=requestContext.encodeSharedResourceURL(url == null ? encode(requestCycle,(ISharedResourceRequestTarget)requestTarget) : url);
    sharedResourceURL=true;
  }
 else   if (requestTarget instanceof IListenerInterfaceRequestTarget) {
    if (url == null) {
      url=encode(requestCycle,(IListenerInterfaceRequestTarget)requestTarget);
    }
    if (portletRequest) {
      IListenerInterfaceRequestTarget iliRequestTarget=(IListenerInterfaceRequestTarget)requestTarget;
      RequestListenerInterface rli=iliRequestTarget.getRequestListenerInterface();
      if (IResourceListener.class.isAssignableFrom(rli.getMethod().getDeclaringClass()) || IBehaviorListener.class.isAssignableFrom(rli.getMethod().getDeclaringClass())) {
        url=requestContext.encodeResourceURL(url);
      }
 else       if (IRedirectListener.class.isAssignableFrom(rli.getMethod().getDeclaringClass())) {
        if (((WebRequestCycle)requestCycle).getWebRequest().isAjax()) {
          url=((PortletRequestContext)requestContext).encodeRenderURL(url,true);
        }
 else {
          url=requestContext.encodeRenderURL(url);
        }
      }
 else {
        PortletRequestContext prc=(PortletRequestContext)requestContext;
        boolean forceActionURL=prc.isAjax();
        if (forceActionURL) {
          List behaviors=iliRequestTarget.getTarget().getBehaviors();
          for (int i=0, size=behaviors.size(); i < size; i++) {
            if (AbstractAjaxBehavior.class.isAssignableFrom(behaviors.get(i).getClass())) {
              forceActionURL=false;
              break;
            }
          }
        }
        url=prc.encodeActionURL(url,forceActionURL);
      }
    }
  }
 else   if (url == null) {
    if (requestTarget instanceof IPageRequestTarget) {
      return encode(requestCycle,(IPageRequestTarget)requestTarget);
    }
 else {
      url=doEncode(requestCycle,requestTarget);
    }
  }
  if (url != null) {
    String result=null;
    if (!sharedResourceURL && portletRequest) {
      result=url.toString();
    }
 else {
      PrependingStringBuffer prepender=new PrependingStringBuffer(url.toString());
      prepender.prepend(requestCycle.getRequest().getRelativePathPrefixToWicketHandler());
      result=prepender.toString();
      if (result.length() == 0) {
        result="./";
      }
    }
    return requestCycle.getOriginalResponse().encodeURL(result);
  }
  return null;
}
