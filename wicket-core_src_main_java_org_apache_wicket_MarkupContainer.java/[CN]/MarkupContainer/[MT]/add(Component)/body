{
  for (  Component child : children) {
    Args.notNull(child,"child");
    if (this == child) {
      throw new IllegalArgumentException(exceptionMessage("Trying to add this component to itself."));
    }
    MarkupContainer parent=getParent();
    while (parent != null) {
      if (child == parent) {
        String msg="You can not add a component's parent as child to the component (loop): Component: " + this.toString(false) + "; parent == child: "+ parent.toString(false);
        if (child instanceof Border.BorderBodyContainer) {
          msg+=". Please consider using Border.addToBorder(new " + Classes.simpleName(this.getClass()) + "(\""+ this.getId()+ "\", ...) instead of add(...)";
        }
        throw new WicketRuntimeException(msg);
      }
      parent=parent.getParent();
    }
    checkHierarchyChange(child);
    if (log.isDebugEnabled()) {
      log.debug("Add " + child.getId() + " to "+ this);
    }
    Component previousChild=children_put(child);
    if (previousChild != null && previousChild != child) {
      throw new IllegalArgumentException(exceptionMessage("A child '" + previousChild.getClass().getSimpleName() + "' with id '"+ child.getId()+ "' already exists"));
    }
    addedComponent(child);
  }
  return this;
}
