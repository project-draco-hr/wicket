{
  return new Iterator<Component>(){
    Component currentComponent=null;
    Iterator<Component> internalIterator;
{
      if (children == null) {
        internalIterator=Collections.emptyIterator();
      }
 else       if (children instanceof Component) {
        internalIterator=Collections.singleton((Component)children).iterator();
      }
 else       if (children instanceof List) {
        internalIterator=((List<Component>)children).iterator();
      }
 else {
        internalIterator=((Map<String,Component>)children).values().iterator();
      }
    }
    @Override public boolean hasNext(){
      return internalIterator.hasNext();
    }
    @Override public Component next(){
      return currentComponent=internalIterator.next();
    }
    @Override public void remove(){
      if (children instanceof Component) {
        children=null;
      }
 else {
        internalIterator.remove();
      }
      checkHierarchyChange(currentComponent);
      removedComponent(currentComponent);
    }
  }
;
}
