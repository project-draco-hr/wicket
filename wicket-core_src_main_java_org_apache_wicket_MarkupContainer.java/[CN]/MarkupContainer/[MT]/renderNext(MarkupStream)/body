{
  final MarkupElement element=markupStream.get();
  if ((element instanceof ComponentTag) && !markupStream.atCloseTag()) {
    final ComponentTag tag=(ComponentTag)element;
    if (tag instanceof WicketTag && ((WicketTag)tag).isFragmentTag()) {
      return false;
    }
    final String id=tag.getId();
    Component component=get(id);
    if (component == null) {
      component=ComponentResolvers.resolve(this,markupStream,tag,null);
      if ((component != null) && (component.getParent() == null)) {
        autoAdd(component,markupStream);
      }
 else       if (component != null) {
        component.setMarkup(markupStream.getMarkupFragment());
      }
    }
    if (component != null) {
      component.render();
    }
 else     if (tag.getFlag(ComponentTag.RENDER_RAW)) {
      if (canRenderRawTag(tag)) {
        getResponse().write(element.toCharSequence());
      }
      return true;
    }
 else {
      throwException(markupStream,tag);
    }
  }
 else {
    if (canRenderRawTag(element)) {
      getResponse().write(element.toCharSequence());
    }
    return true;
  }
  return false;
}
