{
  Application.set(webApplication);
  HttpSession httpSession=servletRequest.getSession(false);
  if (httpSession != null && webApplication.getRequestCycleSettings().getRenderStrategy() == IRequestCycleSettings.REDIRECT_TO_BUFFER) {
    String sessionId=httpSession.getId();
    String queryString=servletRequest.getQueryString();
    String requestUri=servletRequest.getRequestURI();
    String bufferId=requestUri;
    if (queryString != null) {
      bufferId=new StringBuffer(requestUri.length() + queryString.length() + 1).append(requestUri).append("?").append(queryString).toString();
    }
    BufferedHttpServletResponse bufferedResponse=webApplication.popBufferedResponse(sessionId,bufferId);
    if (bufferedResponse != null) {
      bufferedResponse.writeTo(servletResponse);
      return;
    }
  }
  if (servletRequest.getCharacterEncoding() == null) {
    try {
      servletRequest.setCharacterEncoding(webApplication.getRequestCycleSettings().getResponseRequestEncoding());
    }
 catch (    UnsupportedEncodingException ex) {
      throw new WicketRuntimeException(ex.getMessage());
    }
  }
  final WebRequest request=webApplication.newWebRequest(servletRequest);
  final WebSession session=webApplication.getSession(request);
  final WebResponse response=webApplication.newWebResponse(servletResponse);
  response.setCharacterEncoding(webApplication.getRequestCycleSettings().getResponseRequestEncoding());
  try {
    RequestCycle cycle=session.newRequestCycle(request,response);
    cycle.request();
  }
  finally {
    response.close();
    Application.set(null);
  }
}
