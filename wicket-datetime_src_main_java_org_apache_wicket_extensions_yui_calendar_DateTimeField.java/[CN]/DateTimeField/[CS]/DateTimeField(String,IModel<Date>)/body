{
  super(id,model);
  setType(Date.class);
  PropertyModel<Date> dateFieldModel=new PropertyModel<>(this,DATE);
  add(dateField=newDateTextField(DATE,dateFieldModel));
  dateField.add(newDatePicker());
  add(hoursField=newHoursTextField(HOURS,new PropertyModel<Integer>(this,HOURS),Integer.class));
  add(minutesField=newMinutesTextField(MINUTES,new PropertyModel<Integer>(this,MINUTES),Integer.class));
  add(amOrPmChoice=new DropDownChoice<AM_PM>(AM_OR_PM_CHOICE,new PropertyModel<AM_PM>(this,AM_OR_PM),Arrays.asList(AM_PM.values())));
  add(new WebMarkupContainer("hoursSeparator"){
    private static final long serialVersionUID=1L;
    @Override public boolean isVisible(){
      return minutesField.determineVisibility();
    }
  }
);
}
