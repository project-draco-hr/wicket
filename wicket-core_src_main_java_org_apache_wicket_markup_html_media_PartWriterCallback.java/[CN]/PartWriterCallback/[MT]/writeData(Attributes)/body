{
  try {
    InputStream inputStream=resourceStream.getInputStream();
    OutputStream outputStream=attributes.getResponse().getOutputStream();
    byte[] buffer=new byte[getBufferSize()];
    if (startbyte != null || endbyte != null) {
      if (startbyte != null) {
        inputStream.skip(startbyte);
      }
      if (endbyte == null) {
        endbyte=resourceStream.length().bytes();
      }
      long totalBytes=0;
      int actualReadBytes;
      while ((actualReadBytes=inputStream.read(buffer)) != -1) {
        totalBytes=totalBytes + buffer.length;
        long lowerBuffer=endbyte - totalBytes;
        if (lowerBuffer <= 0) {
          buffer=resizeArray(buffer,actualReadBytes);
          outputStream.write(buffer);
          break;
        }
 else {
          outputStream.write(buffer);
        }
      }
    }
 else {
      Streams.copy(inputStream,outputStream,getBufferSize());
    }
  }
 catch (  ResponseIOException e) {
  }
catch (  Exception e) {
    throw new WicketRuntimeException("A problem occurred while writing the buffer to the output stream.",e);
  }
}
