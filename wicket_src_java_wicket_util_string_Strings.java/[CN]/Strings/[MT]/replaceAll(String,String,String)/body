{
  if (s == null) {
    throw new IllegalArgumentException("Cannot pass null target string to replaceAll");
  }
  if (searchFor == null) {
    throw new IllegalArgumentException("Cannot pass null searchFor string to replaceAll");
  }
  if (replaceWith == null) {
    throw new IllegalArgumentException("Cannot pass null replaceWith string to replaceAll");
  }
  StringBuffer buffer=null;
  final int searchForLength=searchFor.length();
  int pos=0;
  for (int matchIndex; -1 != (matchIndex=s.indexOf(searchFor,pos)); pos=matchIndex + searchForLength) {
    if (buffer == null) {
      int size=s.length();
      final int replaceWithLength=replaceWith.length();
      if (replaceWithLength > searchForLength) {
        size+=(replaceWithLength - searchForLength);
      }
      buffer=new StringBuffer(size + 16);
    }
    buffer.append(s.substring(pos,matchIndex));
    buffer.append(replaceWith);
  }
  if (buffer == null) {
    return s;
  }
 else {
    buffer.append(s.substring(pos));
    return buffer.toString();
  }
}
