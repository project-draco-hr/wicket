{
  if ((unicodeString == null) || (unicodeString.length() == 0)) {
    return unicodeString;
  }
  int len=unicodeString.length();
  int bufLen=len * 2;
  StringBuffer outBuffer=new StringBuffer(bufLen);
  for (int x=0; x < len; x++) {
    char aChar=unicodeString.charAt(x);
    if ((aChar > 61) && (aChar < 127)) {
      if (aChar == '\\') {
        outBuffer.append('\\');
        outBuffer.append('\\');
        continue;
      }
      outBuffer.append(aChar);
      continue;
    }
switch (aChar) {
case ' ':
      if (x == 0) {
        outBuffer.append('\\');
      }
    outBuffer.append(' ');
  break;
case '\t':
outBuffer.append('\\');
outBuffer.append('t');
break;
case '\n':
outBuffer.append('\\');
outBuffer.append('n');
break;
case '\r':
outBuffer.append('\\');
outBuffer.append('r');
break;
case '\f':
outBuffer.append('\\');
outBuffer.append('f');
break;
case '=':
case ':':
case '#':
case '!':
outBuffer.append('\\');
outBuffer.append(aChar);
break;
default :
if ((aChar < 0x0020) || (aChar > 0x007e)) {
outBuffer.append('\\');
outBuffer.append('u');
outBuffer.append(toHex((aChar >> 12) & 0xF));
outBuffer.append(toHex((aChar >> 8) & 0xF));
outBuffer.append(toHex((aChar >> 4) & 0xF));
outBuffer.append(toHex(aChar & 0xF));
}
 else {
outBuffer.append(aChar);
}
}
}
return outBuffer.toString();
}
