{
  super(id);
  setOutputMarkupId(true);
  if (contributeDependencies) {
    contributeDependencies();
  }
  add(new StringHeaderContributor(new LoadableDetachableModel(){
    private static final long serialVersionUID=1L;
    protected Object load(){
      String markupId=AbstractCalendar.this.getMarkupId();
      String javascriptId=getJavascriptId();
      String javascriptWidgetId=getJavascriptWidgetId();
      StringBuffer b=new StringBuffer();
      b.append(JavascriptUtils.SCRIPT_OPEN_TAG);
      b.append("YAHOO.namespace(\"wicket\");\nfunction init");
      b.append(javascriptId);
      b.append("() {\n");
      appendToInit(markupId,javascriptId,javascriptWidgetId,b);
      b.append("}\n");
      b.append("YAHOO.util.Event.addListener(window, \"load\", init");
      b.append(javascriptId);
      b.append(");");
      b.append(JavascriptUtils.SCRIPT_CLOSE_TAG);
      return b;
    }
  }
));
}
