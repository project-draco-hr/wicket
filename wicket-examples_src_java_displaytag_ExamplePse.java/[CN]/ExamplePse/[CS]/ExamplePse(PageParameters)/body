{
  final ReportList data=new ReportList();
  add(new SortableTableHeaders("header",data,"rows",true){
    protected Comparable getObjectToCompare(    final SortableTableHeader header,    final Object object){
      final String name=header.getName();
      if (name.equals("city")) {
        return ((ReportableListObject)object).getCity();
      }
      if (name.equals("project")) {
        return ((ReportableListObject)object).getProject();
      }
      return "";
    }
  }
);
  final PagedTableWithAlternatingRowStyle table=new PagedTableWithAlternatingRowStyle("rows",data,10){
    private ReportableListObject previousValue=null;
    /** 
 * @see displaytag.utils.PagedTableWithAlternatingRowStyle#populateCell(com.voicetribe.wicket.markup.html.table.Cell,com.voicetribe.wicket.Container)
 */
    public boolean populateCell(    final Cell cell,    final Container tagClass){
      final ReportableListObject value=(ReportableListObject)cell.getModelObject();
      if (previousValue == null) {
        tagClass.add(new Label("city",value.getCity()));
        tagClass.add(new Label("project",value.getProject()));
      }
 else {
        boolean equal=value.getCity().equals(previousValue.getCity());
        tagClass.add(new Label("city",equal ? "" : value.getCity()));
        equal&=value.getProject().equals(previousValue.getProject());
        tagClass.add(new Label("project",equal ? "" : value.getProject()));
      }
      tagClass.add(new Label("hours",new Double(value.getAmount())));
      tagClass.add(new Label("task",value.getTask()));
      previousValue=value;
      return true;
    }
  }
;
  add(table);
  add(new PagedTableNavigator("pageTableNav",table));
  add(new ExportLink("exportCsv",data));
  add(new ExportLink("exportExcel",data));
  add(new ExportLink("exportXml",data));
}
