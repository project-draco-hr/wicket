{
  new AjaxLink(this,"link"){
    @Override public void onClick(    AjaxRequestTarget target){
    }
  }
;
  final DefaultTreeModel treeModel=(DefaultTreeModel)createTreeModel();
  IColumn columns[]=new IColumn[]{new PropertyTreeColumn(new ColumnLocation(Alignment.LEFT,15,Unit.EM),"Tree Column","userObject.property1"),new PropertyEditableColumn(new ColumnLocation(Alignment.MIDDLE,3,Unit.PROPORTIONAL),"M1","userObject.property2"){
    @Override public int getSpan(    TreeNode node){
      if (node != null) {
        if (node.isLeaf())         return 0;
 else         if (node.getParent() != null && node.getParent().getParent() == null)         return 2;
 else         return 3;
      }
      return 1;
    }
  }
,new PropertyEditableColumn(new ColumnLocation(Alignment.MIDDLE,2,Unit.PROPORTIONAL),"M2","userObject.property3"),new PropertyEditableColumn(new ColumnLocation(Alignment.MIDDLE,2,Unit.PROPORTIONAL),"M3","userObject.property4"),new PropertyEditableColumn(new ColumnLocation(Alignment.RIGHT,8,Unit.EM),"R1","userObject.property5")};
  Form form=new Form(this,"form");
  DefaultAbstractTree tree=new TreeTable(form,"tree",treeModel,columns);
  setVersioned(false);
}
