{
  Injector injector;
  String injectorContextAttribute=filter.getFilterConfig().getInitParameter("injectorContextAttribute");
  Stage stage=null;
  String stageContextAttribute=filter.getFilterConfig().getInitParameter(STAGE_PARAMETER);
  if (stageContextAttribute == null) {
    stageContextAttribute=filter.getFilterConfig().getServletContext().getInitParameter(STAGE_PARAMETER);
  }
  if (stageContextAttribute != null) {
    stage=Stage.valueOf(stageContextAttribute.trim());
  }
  if (injectorContextAttribute != null) {
    ServletContext sc=filter.getFilterConfig().getServletContext();
    injector=(Injector)sc.getAttribute(injectorContextAttribute);
    if (injector == null) {
      throw new RuntimeException("Could not find Guice Injector in the ServletContext under attribute: " + injectorContextAttribute);
    }
  }
 else   if (filter.getFilterConfig().getInitParameter("module") != null) {
    String paramValue=filter.getFilterConfig().getInitParameter("module");
    String moduleNames[]=Strings.split(paramValue,',');
    Module modules[]=new Module[moduleNames.length];
    for (int i=0; i < moduleNames.length; i++) {
      String moduleName=moduleNames[i].trim();
      try {
        Class<?> moduleClazz=Class.forName(moduleName);
        Object moduleObject=moduleClazz.newInstance();
        modules[i]=(Module)moduleObject;
      }
 catch (      InstantiationException e) {
        throw new RuntimeException("Could not create new instance of Guice Module class " + moduleName,e);
      }
catch (      ClassNotFoundException e) {
        throw new RuntimeException("Could not create new instance of Guice Module class " + moduleName,e);
      }
catch (      IllegalAccessException e) {
        throw new RuntimeException("Could not create new instance of Guice Module class " + moduleName,e);
      }
    }
    if (stage != null) {
      injector=Guice.createInjector(stage,modules);
    }
 else {
      injector=Guice.createInjector(modules);
    }
  }
 else {
    throw new RuntimeException("To use GuiceWebApplicationFactory, you must specify either an 'injectorContextAttribute' or a 'module' init-param.");
  }
  WebApplication app=injector.getInstance(WebApplication.class);
  app.getComponentInstantiationListeners().add(new GuiceComponentInjector(app,injector));
  return app;
}
