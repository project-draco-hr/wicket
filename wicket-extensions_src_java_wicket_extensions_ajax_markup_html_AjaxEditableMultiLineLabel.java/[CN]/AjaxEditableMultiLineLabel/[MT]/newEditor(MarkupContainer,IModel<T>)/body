{
  TextArea<T> editor=new TextArea<T>(parent,"editor",model);
  editor.add(new AttributeModifier("rows",new AbstractReadOnlyModel<Integer>(){
    private static final long serialVersionUID=1L;
    @Override public Integer getObject(){
      return rows;
    }
  }
));
  editor.add(new AttributeModifier("cols",new AbstractReadOnlyModel<Integer>(){
    private static final long serialVersionUID=1L;
    @Override public Integer getObject(){
      return cols;
    }
  }
));
  editor.setOutputMarkupId(true);
  editor.setVisible(false);
  editor.add(new EditorAjaxBehavior(){
    private static final long serialVersionUID=1L;
    @Override protected void onComponentTag(    ComponentTag tag){
      super.onComponentTag(tag);
      final String saveCall="{wicketAjaxGet('" + getCallbackUrl() + "&save=true&'+this.name+'='+wicketEncode(this.value)); return true;}";
      final String cancelCall="{wicketAjaxGet('" + getCallbackUrl() + "&save=false'); return false;}";
      final String keypress="var kc=wicketKeyCode(event); if (kc==27) " + cancelCall + "; ";
      tag.put("onblur",saveCall);
      tag.put("onkeypress",keypress);
    }
  }
);
  return editor;
}
