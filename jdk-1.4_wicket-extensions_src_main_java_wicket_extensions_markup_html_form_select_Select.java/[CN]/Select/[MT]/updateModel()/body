{
  Object object=getModelObject();
  boolean isModelCollection=object instanceof Collection;
  if (isModelCollection) {
    modelChanging();
    ((Collection)object).clear();
  }
 else {
    getModel().setObject(null);
  }
  String[] paths=getInputAsArray();
  if (paths != null && paths.length > 0) {
    if (!isModelCollection && paths.length > 1) {
      throw new WicketRuntimeException("The model of Select component [" + getPath() + "] is not of type java.util.Collection, but more then one SelectOption component has been selected. Either remove the multiple attribute from the select tag or make the model of the Select component a collection");
    }
    for (int i=0; i < paths.length; i++) {
      String path=paths[i];
      if (path != null) {
        path=path.substring(getPath().length() + 1);
        SelectOption option=(SelectOption)get(path);
        if (option == null) {
          throw new WicketRuntimeException("submitted http post value [" + paths.toString() + "] for SelectOption component ["+ getPath()+ "] contains an illegal relative path element ["+ path+ "] which does not point to an SelectOption component. Due to this the Select component cannot resolve the selected SelectOption component pointed to by the illegal value. A possible reason is that component hierarchy changed between rendering and form submission.");
        }
        if (isModelCollection) {
          ((Collection)object).add(option.getModelObject());
        }
 else {
          setModelObject(option.getModelObject());
        }
      }
    }
  }
  if (isModelCollection) {
    modelChanged();
  }
}
