{
  Form<Void> form=new Form<Void>("form");
  add(form);
  final IModel<String> model=new IModel<String>(){
    private String value=null;
    @Override public String getObject(){
      return value;
    }
    @Override public void setObject(    String object){
      value=object;
      values.append("\n");
      values.append(value);
    }
    @Override public void detach(){
    }
  }
;
  final AutoCompleteTextField<String> field=new AutoCompleteTextField<String>("ac",model){
    @Override protected Iterator<String> getChoices(    String input){
      if (Strings.isEmpty(input)) {
        List<String> emptyList=Collections.emptyList();
        return emptyList.iterator();
      }
      List<String> choices=new ArrayList<String>(10);
      Locale[] locales=Locale.getAvailableLocales();
      for (      final Locale locale : locales) {
        final String country=locale.getDisplayCountry();
        if (country.toUpperCase().startsWith(input.toUpperCase())) {
          choices.add(country);
          if (choices.size() == 10) {
            break;
          }
        }
      }
      return choices.iterator();
    }
  }
;
  form.add(field);
  final MultiLineLabel label=new MultiLineLabel("history",new PropertyModel<String>(this,"values"));
  label.setOutputMarkupId(true);
  form.add(label);
  field.add(new AjaxFormSubmitBehavior(form,"change"){
    @Override protected void onSubmit(    AjaxRequestTarget target){
      target.add(label);
    }
    @Override protected void onError(    AjaxRequestTarget target){
    }
  }
);
}
