{
  final ReportList data=new ReportList();
  final SimplePageableListView<ReportableListObject> table=new SimplePageableListView<ReportableListObject>(this,"rows",data,10){
    private ReportableListObject previousValue=null;
    /** 
 */
    @Override public void populateItem(    final ListItem listItem){
      super.populateItem(listItem);
      final ReportableListObject value=(ReportableListObject)listItem.getModelObject();
      if (previousValue != null) {
        boolean equal=value.getCity().equals(previousValue.getCity());
        new Label(listItem,"city",equal ? "" : value.getCity());
        equal&=value.getProject().equals(previousValue.getProject());
        new Label(listItem,"project",equal ? "" : value.getProject());
      }
      new Label(listItem,"hours",Double.toString(value.getAmount()));
      previousValue=value;
    }
  }
;
  new SortableListViewHeaders<ReportableListObject>(this,"header",table){
    @Override protected Comparable getObjectToCompare(    final SortableListViewHeader header,    final Object object){
      final String name=header.getId();
      if (name.equals("city")) {
        return ((ReportableListObject)object).getCity();
      }
      if (name.equals("project")) {
        return ((ReportableListObject)object).getProject();
      }
      return "";
    }
  }
;
  new MyPageableListViewNavigator(this,"pageTableNav",table);
  new ExportLink(this,"exportCsv",data,new CsvView(data,true,false,false));
  new ExportLink(this,"exportExcel",data,new ExcelView(data,true,false,false));
  new ExportLink(this,"exportXml",data,new XmlView(data,true,false,false));
}
