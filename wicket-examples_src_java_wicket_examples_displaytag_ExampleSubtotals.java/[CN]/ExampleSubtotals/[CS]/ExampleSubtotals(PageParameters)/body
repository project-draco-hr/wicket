{
  final ReportList data=new ReportList();
  final Map groups=new LinkedHashMap();
  ReportableListObject previousValue=(ReportableListObject)data.get(0);
  groups.put(previousValue.getCity(),new Integer(0));
  int startIdx=0;
  for (int i=1; i < data.size(); i++) {
    final ReportableListObject value=(ReportableListObject)data.get(i);
    if (!value.getCity().equals(previousValue.getCity())) {
      groups.put(previousValue.getCity(),new Integer(i - startIdx));
      groups.put(value.getCity(),new Integer(0));
      previousValue=value;
      startIdx=i;
    }
  }
  groups.put(previousValue.getCity(),new Integer(data.size() - startIdx));
  List groupList=new ArrayList();
  groupList.addAll(groups.keySet());
  new ListView(this,"border",groupList){
    private int startIndex=0;
    @Override public void populateItem(    final ListItem listItem){
      SubtotalTable subtable=new SubtotalTable(listItem,"rows",data);
      subtable.setStartIndex(startIndex);
      String group=listItem.getModelObjectAsString();
      int size=((Integer)groups.get(group)).intValue();
      subtable.setViewSize(size);
      startIndex+=size;
      new Label(listItem,"name",new PropertyModel(subtable,"group1"));
      new Label(listItem,"value",new PropertyModel(subtable,"subtotal"));
    }
  }
;
}
