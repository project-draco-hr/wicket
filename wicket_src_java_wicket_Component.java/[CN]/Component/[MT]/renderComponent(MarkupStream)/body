{
  validateMarkupStream(markupStream);
  final ComponentTag openTag=markupStream.getTag();
  final ComponentTag tag=openTag.mutable();
  onComponentTag(tag);
  if (!tag.isOpenClose() && !tag.isOpen()) {
    markupStream.throwMarkupException("Method renderComponent called on bad markup element: " + tag);
  }
  if (tag.isOpenClose() && openTag.isOpen()) {
    markupStream.throwMarkupException("You can not modify a open tag to open-close: " + tag);
  }
  if (getRenderBodyOnly() == false) {
    renderComponentTag(tag);
  }
  markupStream.next();
  if (tag.isOpen()) {
    onComponentTagBody(markupStream,tag);
  }
  if (tag.isOpen()) {
    if (openTag.isOpen()) {
      renderClosingComponentTag(markupStream,tag,getRenderBodyOnly());
    }
 else {
      if (getRenderBodyOnly() == false) {
        getResponse().write(openTag.syntheticCloseTagString());
      }
    }
  }
}
