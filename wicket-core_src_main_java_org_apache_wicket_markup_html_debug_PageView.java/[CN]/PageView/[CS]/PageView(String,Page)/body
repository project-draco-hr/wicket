{
  super(id);
  add(new Label("info",page == null ? "[Stateless Page]" : page.toString()));
  List<ComponentData> data=null;
  String pageRenderDuration="n/a";
  if (page != null) {
    Long renderTime=page.getMetaData(RENDER_KEY);
    if (renderTime != null) {
      pageRenderDuration=renderTime.toString();
    }
    data=new ArrayList<ComponentData>(getComponentData(page));
    Collections.sort(data,new Comparator<ComponentData>(){
      public int compare(      ComponentData o1,      ComponentData o2){
        return (o1).path.compareTo((o2).path);
      }
    }
);
  }
 else {
    data=Collections.emptyList();
  }
  add(new Label("pageRenderDuration",pageRenderDuration));
  add(new ListView<ComponentData>("components",data){
    private static final long serialVersionUID=1L;
    /** 
 * Populate the table with Wicket elements
 */
    @Override protected void populateItem(    final ListItem<ComponentData> listItem){
      final ComponentData componentData=listItem.getModelObject();
      listItem.add(new Label("row",Integer.toString(listItem.getIndex() + 1)));
      listItem.add(new Label("path",componentData.path));
      listItem.add(new Label("size",Bytes.bytes(componentData.size).toString()));
      listItem.add(new Label("type",componentData.type));
      listItem.add(new Label("model",componentData.value));
      listItem.add(new Label("renderDuration",componentData.renderDuration != null ? componentData.renderDuration.toString() : "n/a"));
    }
  }
);
}
