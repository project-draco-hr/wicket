{
  if (e != null) {
    TreePath changedPath=e.getTreePath();
    TreeStateNode changedNode=getNodeForPath(changedPath,false,false);
    if (changedNode == root || (changedNode == null && ((changedPath == null && treeModel != null && treeModel.getRoot() == null) || (changedPath != null && changedPath.getPathCount() <= 1)))) {
      rebuild(true);
    }
 else     if (changedNode != null) {
      boolean wasExpanded, wasVisible;
      TreeStateNode parent=(TreeStateNode)changedNode.getParent();
      wasExpanded=changedNode.isExpanded();
      wasVisible=changedNode.isVisible();
      int index=parent.getIndex(changedNode);
      changedNode.collapse(false);
      parent.remove(index);
      if (wasVisible && wasExpanded) {
        int row=changedNode.getRow();
        parent.resetChildrenRowsFrom(row,index,changedNode.getChildIndex());
        changedNode=getNodeForPath(changedPath,false,true);
        changedNode.expand();
      }
      if (treeSelectionModel != null && wasVisible && wasExpanded)       treeSelectionModel.resetRowSelection();
      if (wasVisible)       this.visibleNodesChanged();
    }
  }
}
