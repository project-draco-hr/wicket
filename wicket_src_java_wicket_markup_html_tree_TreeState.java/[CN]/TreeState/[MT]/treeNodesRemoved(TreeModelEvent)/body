{
  if (e != null) {
    int changedIndexs[];
    int maxCounter;
    TreePath parentPath=e.getTreePath();
    TreeStateNode changedParentNode=getNodeForPath(parentPath,false,false);
    changedIndexs=e.getChildIndices();
    if (changedParentNode != null && changedIndexs != null && (maxCounter=changedIndexs.length) > 0) {
      boolean isVisible=(changedParentNode.isVisible() && changedParentNode.isExpanded());
      for (int counter=maxCounter - 1; counter >= 0; counter--) {
        changedParentNode.removeChildAtModelIndex(changedIndexs[counter],isVisible);
      }
      if (isVisible) {
        if (treeSelectionModel != null)         treeSelectionModel.resetRowSelection();
        if (treeModel.getChildCount(changedParentNode.getUserObject()) == 0 && changedParentNode.isLeaf()) {
          changedParentNode.collapse(false);
        }
        visibleNodesChanged();
      }
 else       if (changedParentNode.isVisible())       visibleNodesChanged();
    }
  }
}
