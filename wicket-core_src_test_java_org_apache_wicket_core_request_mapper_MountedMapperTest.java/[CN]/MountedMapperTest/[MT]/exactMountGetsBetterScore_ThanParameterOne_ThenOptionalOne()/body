{
  final Url url=Url.parse("all/sindex");
  final MountedMapper exactMount=new MountedMapper("/all/sindex",MockPage.class);
  final MountedMapper requiredParam=new MountedMapper("/all/${exp}",MockPage.class);
  final MountedMapper optionalParameter=new MountedMapper("/all/#{exp}",MockPage.class);
  final MountedMapper requiredOptionalParam=new MountedMapper("/all/${exp}/#{opt}",MockPage.class);
  Request request=getRequest(url);
  final int exactCompatScore=exactMount.getCompatibilityScore(request);
  final int requiredParamScore=requiredParam.getCompatibilityScore(request);
  final int optCompatScore=optionalParameter.getCompatibilityScore(request);
  final int requiredOptCompatScore=requiredOptionalParam.getCompatibilityScore(request);
  assertTrue("optionalParameter mapper must be eligible to handle the request",optCompatScore > 0);
  assertTrue("exactCompatScore should have greater compatibility score than required one" + " got exact = " + exactCompatScore + " and required= "+ requiredParamScore,exactCompatScore > requiredParamScore);
  assertTrue("exactCompatScore should have greater compatibility score than required+optional one" + " got exact = " + exactCompatScore + " and requiredOptional= "+ requiredOptCompatScore,exactCompatScore > requiredOptCompatScore);
  assertTrue("exactCompatScore should have greater compatibility score than optional one" + " got exact = " + exactCompatScore + " and optional = "+ optCompatScore,requiredParamScore > optCompatScore);
}
