{
  final List choices=getChoices();
  final AppendingStringBuffer buffer=new AppendingStringBuffer(70 * (choices.size() + 1));
  final String selected=getValue();
  for (int index=0; index < choices.size(); index++) {
    final Object choice=choices.get(index);
    Object displayValue=getChoiceRenderer().getDisplayValue(choice);
    Class objectClass=displayValue == null ? null : displayValue.getClass();
    final String label=getConverter(objectClass).convertToString(displayValue,getLocale());
    if (label != null) {
      buffer.append(getPrefix());
      String id=getChoiceRenderer().getIdValue(choice,index);
      final String idAttr=getInputName() + "_" + id;
      buffer.append("<input name=\"").append(getInputName()).append("\"").append(" type=\"checkbox\"").append((isSelected(choice,index,selected) ? " checked=\"checked\"" : "")).append(" value=\"").append(id).append("\" id=\"").append(idAttr).append("\"/>");
      String display=label;
      if (localizeDisplayValues()) {
        display=getLocalizer().getString(label,this,label);
      }
      CharSequence escaped=Strings.escapeMarkup(display,false,true);
      buffer.append("<label for=\"");
      buffer.append(idAttr);
      buffer.append("\">").append(escaped).append("</label>");
      buffer.append(getSuffix());
    }
  }
  replaceComponentTagBody(markupStream,openTag,buffer);
}
