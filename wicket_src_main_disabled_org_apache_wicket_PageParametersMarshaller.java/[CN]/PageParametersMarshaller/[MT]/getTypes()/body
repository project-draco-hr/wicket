{
  if (types == null) {
switch (this) {
case BOOLEAN:
      types=toSet(Boolean.class,Boolean.TYPE);
    break;
case BYTE:
  types=toSet(Byte.class,Byte.TYPE);
break;
case BYTE_ARRAY:
types=toSet(new byte[0].getClass());
break;
case DOUBLE:
types=toSet(Double.class,Double.TYPE);
break;
case FLOAT:
types=toSet(Float.class,Float.TYPE);
break;
case INT:
types=toSet(Integer.class,Integer.TYPE);
break;
case LONG:
types=toSet(Long.class,Long.TYPE);
break;
case SHORT:
types=toSet(Short.class,Short.TYPE);
break;
case STRING:
types=toSet(String.class);
break;
case CHAR:
types=toSet(Character.TYPE,Character.class);
break;
case SERIALIZABLE:
types=toSet(Serializable.class);
break;
default :
throw new AssertionError();
}
}
return Collections.unmodifiableSet(types);
}
