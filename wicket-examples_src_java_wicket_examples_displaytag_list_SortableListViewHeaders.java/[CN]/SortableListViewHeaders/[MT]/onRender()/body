{
  final SortableListViewHeaders me=this;
  MarkupStream markupStream=this.findMarkupStream();
  final int markupStart=markupStream.getCurrentIndex();
  ComponentTag tag=markupStream.getTag();
  checkComponentTag(tag,"thead");
  markupStream.next();
  while (markupStream.hasMore()) {
    final MarkupElement element=markupStream.get();
    if (element instanceof ComponentTag) {
      tag=(ComponentTag)element;
      if (tag.getName().equalsIgnoreCase("th")) {
        final String componentName=tag.getId();
        if ((componentName != null) && (get(componentName) == null)) {
          add(new SortableListViewHeader(componentName,group){
            protected int compareTo(            final Object o1,            final Object o2){
              return me.compareTo(this,o1,o2);
            }
            protected Comparable getObjectToCompare(            final Object object){
              return me.getObjectToCompare(this,object);
            }
          }
);
        }
      }
    }
    markupStream.next();
  }
  markupStream.setCurrentIndex(markupStart);
  super.onRender();
}
