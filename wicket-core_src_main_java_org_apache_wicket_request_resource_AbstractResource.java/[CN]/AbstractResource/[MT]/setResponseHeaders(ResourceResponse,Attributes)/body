{
  Response response=attributes.getResponse();
  if (response instanceof WebResponse) {
    WebResponse webResponse=(WebResponse)response;
    Time lastModified=resourceResponse.getLastModified();
    if (lastModified != null) {
      webResponse.setLastModifiedTime(lastModified);
    }
    configureCache(resourceResponse,attributes);
    if (resourceResponse.getErrorCode() != null) {
      webResponse.sendError(resourceResponse.getErrorCode(),resourceResponse.getErrorMessage());
      return;
    }
    if (resourceResponse.getStatusCode() != null) {
      webResponse.setStatus(resourceResponse.getStatusCode());
    }
    if (!resourceResponse.dataNeedsToBeWritten(attributes)) {
      webResponse.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
      return;
    }
    String fileName=resourceResponse.getFileName();
    ContentDisposition disposition=resourceResponse.getContentDisposition();
    if (ContentDisposition.ATTACHMENT == disposition) {
      webResponse.setAttachmentHeader(fileName);
    }
 else     if (ContentDisposition.INLINE == disposition) {
      webResponse.setInlineHeader(fileName);
    }
    String mimeType=resourceResponse.getContentType();
    if (mimeType != null) {
      final String encoding=resourceResponse.getTextEncoding();
      if (encoding == null) {
        webResponse.setContentType(mimeType);
      }
 else {
        webResponse.setContentType(mimeType + "; charset=" + encoding);
      }
    }
    ContentRangeType acceptRange=resourceResponse.getAcceptRange();
    if (acceptRange != null) {
      webResponse.setAcceptRange(acceptRange.getTypeName());
    }
    long contentLength=resourceResponse.getContentLength();
    boolean contentRangeApplied=false;
    String contentRange=resourceResponse.getContentRange();
    if (contentRange != null) {
      webResponse.setContentRange(contentRange);
    }
 else {
      if (contentLength != -1 && ContentRangeType.BYTES.equals(acceptRange)) {
        contentRangeApplied=setResponseContentRangeHeaderFields(webResponse,attributes,contentLength);
      }
    }
    if (contentLength != -1 && !contentRangeApplied) {
      webResponse.setContentLength(contentLength);
    }
    final HttpHeaderCollection headers=resourceResponse.getHeaders();
    for (    String name : headers.getHeaderNames()) {
      checkHeaderAccess(name);
      for (      String value : headers.getHeaderValues(name)) {
        webResponse.addHeader(name,value);
      }
    }
  }
}
