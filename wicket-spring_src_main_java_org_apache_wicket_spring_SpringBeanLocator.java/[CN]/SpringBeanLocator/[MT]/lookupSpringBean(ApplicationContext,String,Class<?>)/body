{
  try {
    if (name != null) {
      return ctx.getBean(name,clazz);
    }
    if (fieldResolvableType == null) {
      return ctx.getBean(clazz);
    }
    Class<?> lookupClass=clazz == List.class ? fieldResolvableType.getGeneric(0).resolve() : clazz;
    List<String> names=loadBeanNames(ctx,lookupClass);
    ArrayList<Object> beansAsList=getBeansByName(ctx,names);
    if (beansAsList.size() == 1) {
      return beansAsList.get(0);
    }
    if (!beansAsList.isEmpty()) {
      return beansAsList;
    }
    throw new IllegalStateException("Concrete bean could not be received from the application context " + clazz.getName() + ".");
  }
 catch (  NoSuchBeanDefinitionException e) {
    throw new IllegalStateException("bean with name [" + name + "] and class ["+ clazz.getName()+ "] not found",e);
  }
}
