{
  content=new CheckedFolderContent(provider);
  Form<Void> form=new Form<Void>("form");
  add(form);
  tree=createTree(provider,new FooExpansionModel());
  tree.add(new Behavior(){
    private static final long serialVersionUID=1L;
    @Override public void onComponentTag(    Component component,    ComponentTag tag){
      theme.onComponentTag(component,tag);
    }
    @Override public void renderHead(    Component component,    IHeaderResponse response){
      theme.renderHead(component,response);
    }
  }
);
  form.add(tree);
  form.add(new DropDownChoice<Content>("content",new PropertyModel<Content>(this,"content"),initContents(),new ChoiceRenderer<Content>("class.simpleName")){
    private static final long serialVersionUID=1L;
    @Override protected boolean wantOnSelectionChangedNotifications(){
      return true;
    }
  }
);
  form.add(new DropDownChoice<Behavior>("theme",new PropertyModel<Behavior>(this,"theme"),initThemes(),new ChoiceRenderer<Behavior>("class.simpleName")){
    private static final long serialVersionUID=1L;
    @Override protected boolean wantOnSelectionChangedNotifications(){
      return true;
    }
  }
);
  form.add(new Link<Void>("expandAll"){
    private static final long serialVersionUID=1L;
    @Override public void onClick(){
      FooExpansion.get().expandAll();
    }
  }
);
  form.add(new Link<Void>("collapseAll"){
    private static final long serialVersionUID=1L;
    @Override public void onClick(){
      FooExpansion.get().collapseAll();
    }
  }
);
  form.add(new Button("submit"){
    private static final long serialVersionUID=1L;
    @Override public void onSubmitBeforeForm(){
    }
  }
);
}
