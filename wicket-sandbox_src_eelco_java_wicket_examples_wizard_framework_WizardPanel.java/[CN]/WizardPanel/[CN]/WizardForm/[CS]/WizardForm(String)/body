{
  super(id);
  Panel editor=newEditor("editor");
  add(editor);
  Button previousButton=new Button("previous"){
    public void onSubmit(){
      Node current=state.getCurrentNode();
      if (current instanceof Step) {
        record(current);
        TransitionLabel result=((Step)current).previous(WizardForm.this);
        state.move(result);
        WizardForm.this.replace(newEditor("editor"));
      }
    }
    public boolean isVisible(){
      Node current=state.getCurrentNode();
      Transitions transitions=state.getTransitions();
      return transitions.exists(current,TransitionLabel.PREVIOUS);
    }
  }
;
  add(previousButton);
  Button nextButton=new Button("next"){
    public void onSubmit(){
      Node current=state.getCurrentNode();
      if (current instanceof Step) {
        record(current);
        TransitionLabel result=((Step)current).next(WizardForm.this);
        state.move(result);
        WizardForm.this.replace(newEditor("editor"));
      }
    }
    public boolean isVisible(){
      Node current=state.getCurrentNode();
      Transitions transitions=state.getTransitions();
      return transitions.exists(current,TransitionLabel.NEXT);
    }
  }
;
  add(nextButton);
  Button exitButton=new Button("exit"){
    public void onSubmit(){
      Node current=state.getCurrentNode();
      if (current instanceof Exit) {
        record(current);
        TransitionLabel result=((Step)current).next(WizardForm.this);
        ((Exit)current).exit(getRequestCycle());
      }
    }
    public boolean isVisible(){
      return (state.getCurrentNode() instanceof Exit);
    }
  }
;
  exitButton.add(new AttributeModifier("value",new Model(){
    public Object getObject(    wicket.Component component){
      Node current=state.getCurrentNode();
      if (current instanceof Exit) {
        return ((Exit)current).getLabel();
      }
      return null;
    }
  }
));
  add(exitButton);
}
