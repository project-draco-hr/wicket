{
  final ResourceResponse resourceResponse=new ResourceResponse();
  if (resourceResponse.dataNeedsToBeWritten(attributes)) {
    final IResourceStream resourceStream=getResourceStream();
    if (resourceStream == null)     return sendResourceError(resourceResponse,HttpServletResponse.SC_NOT_FOUND,"Unable to find resource");
    resourceResponse.setContentType(resourceStream.getContentType());
    final Time lastModified=resourceStream.lastModifiedTime();
    if (lastModified != null)     resourceResponse.setLastModified(lastModified);
    try {
      final byte[] bytes;
      try {
        bytes=IOUtils.toByteArray(resourceStream.getInputStream());
      }
  finally {
        resourceStream.close();
      }
      final byte[] processed=processResponse(attributes,bytes);
      resourceResponse.setContentLength(processed.length);
      resourceResponse.setWriteCallback(new WriteCallback(){
        @Override public void writeData(        Attributes attributes){
          attributes.getResponse().write(processed);
        }
      }
);
    }
 catch (    IOException e) {
      log.debug(e.getMessage(),e);
      return sendResourceError(resourceResponse,500,"Unable to read resource stream");
    }
catch (    ResourceStreamNotFoundException e) {
      log.debug(e.getMessage(),e);
      return sendResourceError(resourceResponse,500,"Unable to open resource stream");
    }
  }
  Application.get().getResourceSettings().getCachingStrategy().decorateResponse(resourceResponse);
  return resourceResponse;
}
