{
  List<IResourceStream> resources=collectResourceStreams();
  byte[] bytes=null;
  try {
    bytes=readAllResources(resources);
  }
 catch (  IOException e) {
    return null;
  }
catch (  ResourceStreamNotFoundException e) {
    return null;
  }
  final String contentType=findContentType(resources);
  final Time lastModified=findLastModified(resources);
  final ByteArrayInputStream inputStream=new ByteArrayInputStream(bytes);
  final long length=bytes.length;
  AbstractResourceStream ret=new AbstractResourceStream(){
    private static final long serialVersionUID=1L;
    @Override public InputStream getInputStream() throws ResourceStreamNotFoundException {
      return inputStream;
    }
    @Override public Bytes length(){
      return Bytes.bytes(length);
    }
    @Override public String getContentType(){
      return contentType;
    }
    @Override public Time lastModifiedTime(){
      return lastModified;
    }
    @Override public void close() throws IOException {
      inputStream.close();
    }
  }
;
  return ret;
}
