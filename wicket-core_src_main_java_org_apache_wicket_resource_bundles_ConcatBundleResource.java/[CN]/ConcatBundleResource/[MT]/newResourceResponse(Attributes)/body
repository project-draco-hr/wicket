{
  final ResourceResponse resourceResponse=new ResourceResponse();
  if (resourceResponse.dataNeedsToBeWritten(attributes)) {
    try {
      List<IResourceStream> resources=collectResourceStreams();
      if (resources == null)       return sendResourceError(resourceResponse,HttpServletResponse.SC_NOT_FOUND,"Unable to find resource");
      resourceResponse.setContentType(findContentType(resources));
      final Time lastModified=findLastModified(resources);
      if (lastModified != null)       resourceResponse.setLastModified(lastModified);
      final byte[] bytes=readAllResources(resources);
      resourceResponse.setContentLength(bytes.length);
      resourceResponse.setWriteCallback(new WriteCallback(){
        @Override public void writeData(        Attributes attributes){
          attributes.getResponse().write(bytes);
        }
      }
);
    }
 catch (    IOException e) {
      log.debug(e.getMessage(),e);
      return sendResourceError(resourceResponse,500,"Unable to read resource stream");
    }
catch (    ResourceStreamNotFoundException e) {
      log.debug(e.getMessage(),e);
      return sendResourceError(resourceResponse,500,"Unable to open resource stream");
    }
  }
  return resourceResponse;
}
