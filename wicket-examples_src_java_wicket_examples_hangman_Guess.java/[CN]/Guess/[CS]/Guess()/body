{
  new Label(this,"guessesRemaining",new PropertyModel(getGame(),"guessesRemaining"));
  new Label(this,"word",new Model(){
    @Override public Object getObject(    wicket.Component component){
      return getGame().getWord().asString(true);
    }
  }
);
  new ListView(this,"letters",getGame().getLetters()){
    @Override protected void populateItem(    final ListItem listItem){
      final Letter letter=(Letter)listItem.getModelObject();
      final Link link=new Link(listItem,"letter"){
        @Override protected void onBeginRequest(){
          setAutoEnable(false);
          setEnabled(!letter.isGuessed());
        }
        @Override public void onClick(){
          getGame().guess(letter);
          if (getGame().isWon()) {
            setResponsePage(new Win());
          }
 else           if (getGame().isLost()) {
            setResponsePage(new Lose());
          }
 else {
          }
        }
      }
;
      link.add(new AttributeModifier("id",true,new Model("letter_" + letter.asString())));
      new Image(link,"image",letter.getSharedImageResource());
    }
  }
;
}
