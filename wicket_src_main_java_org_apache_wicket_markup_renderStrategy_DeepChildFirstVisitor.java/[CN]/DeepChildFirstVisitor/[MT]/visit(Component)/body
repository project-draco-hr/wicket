{
  Checks.argumentNotNull(rootComponent,"rootComponent");
  if (rootComponent instanceof MarkupContainer) {
    final Visit<Component> visit=new Visit<Component>();
    final Component[] lastComponent=new Component[1];
    Object rtn=((MarkupContainer)rootComponent).visitChildren(new Component.IVisitor<Component,Component>(){
      public void component(      final Component component,      final IVisit<Component> visit){
        if (component.isVisibleInHierarchy()) {
          if (!(component instanceof MarkupContainer) || ((MarkupContainer)component).size() == 0) {
            if (lastComponent[0] != null) {
              MarkupContainer parent=lastComponent[0].getParent();
              while ((parent != null) && (parent != rootComponent) && isCommonParent(parent,lastComponent[0],component) == false) {
                component(parent,visit);
                if (((Visit)visit).isStopped()) {
                  return;
                }
                parent=parent.getParent();
              }
            }
            component(component,visit);
            if (((Visit)visit).isStopped()) {
              return;
            }
            visit.stop(component);
          }
        }
 else {
          lastComponent[0]=component;
          visit.dontGoDeeper();
        }
      }
      /** 
 * @param parent
 * @param lastComponent
 * @param currentComponent
 * @return true, if parent is a common parent of both components
 */
      private boolean isCommonParent(      final MarkupContainer parent,      final Component lastComponent,      final Component currentComponent){
        MarkupContainer p=lastComponent.getParent();
        while ((p != null) && (p != rootComponent) && (p != parent)) {
          p=p.getParent();
        }
        if (p == parent) {
          p=currentComponent.getParent();
          while ((p != null) && (p != rootComponent) && (p != parent)) {
            p=p.getParent();
          }
          if (p == parent) {
            return true;
          }
        }
        return false;
      }
    }
);
    if (lastComponent[0] != null) {
      MarkupContainer parent=lastComponent[0].getParent();
      while ((parent != null) && (parent != rootComponent)) {
        component(parent,visit);
        if (visit.isStopped()) {
          return rtn;
        }
        parent=parent.getParent();
      }
    }
    return rtn;
  }
  return null;
}
