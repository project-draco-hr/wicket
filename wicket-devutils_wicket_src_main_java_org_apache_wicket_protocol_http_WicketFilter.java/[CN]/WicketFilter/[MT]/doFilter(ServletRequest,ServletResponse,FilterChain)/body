{
  HttpServletRequest httpServletRequest;
  HttpServletResponse httpServletResponse;
  boolean inPortletContext=false;
  if (filterPortletContext != null) {
    FilterRequestContext filterRequestContext=new FilterRequestContext((HttpServletRequest)request,(HttpServletResponse)response);
    inPortletContext=filterPortletContext.setupFilter(getFilterConfig(),filterRequestContext,getFilterPath((HttpServletRequest)request));
    httpServletRequest=filterRequestContext.getRequest();
    httpServletResponse=filterRequestContext.getResponse();
  }
 else {
    httpServletRequest=(HttpServletRequest)request;
    httpServletResponse=(HttpServletResponse)response;
  }
  boolean passToNextFilter=portletOnlyFilter && !inPortletContext;
  if (passToNextFilter) {
    chain.doFilter(request,response);
    return;
  }
  final String relativePath=getRelativePath(httpServletRequest);
  if (ignorePaths.size() > 0 && relativePath.length() > 0) {
    for (    String path : ignorePaths) {
      if (relativePath.startsWith(path)) {
        log.debug("Ignoring request {}",httpServletRequest.getRequestURL());
        chain.doFilter(request,response);
        return;
      }
    }
  }
  if (isWicketRequest(relativePath)) {
    Application previous=null;
    if (Application.exists()) {
      previous=Application.get();
    }
    try {
      Application.set(webApplication);
      long lastModified=getLastModified(httpServletRequest);
      if (lastModified == -1) {
        boolean requestHandledByWicket=doGet(httpServletRequest,httpServletResponse);
        if (requestHandledByWicket == false) {
          chain.doFilter(request,response);
        }
      }
 else {
        long ifModifiedSince;
        try {
          ifModifiedSince=httpServletRequest.getDateHeader("If-Modified-Since");
        }
 catch (        IllegalArgumentException e) {
          log.warn("Invalid If-Modified-Since header",e);
          ifModifiedSince=-1;
        }
        if (ifModifiedSince < (lastModified / 1000 * 1000)) {
          maybeSetLastModified(httpServletResponse,lastModified);
          doGet(httpServletRequest,httpServletResponse);
        }
 else {
          httpServletResponse.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
          httpServletResponse.setDateHeader("Expires",System.currentTimeMillis() + Duration.hours(1).getMilliseconds());
        }
      }
    }
  finally {
      if (previous == null) {
        Application.unset();
        RequestContext.unset();
      }
 else {
        Application.set(previous);
      }
    }
  }
 else {
    chain.doFilter(request,response);
  }
}
