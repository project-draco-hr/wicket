{
  PackageResourceReference cssReference=new PackageResourceReference(scope,name);
  CharSequence urlToCss=RequestCycle.get().urlFor(cssReference,null);
  Url cssUrl=Url.parse(urlToCss);
  Matcher matcher=URL_PATTERN.matcher(input);
  StringBuffer output=new StringBuffer();
  while (matcher.find()) {
    Url imageCandidateUrl=Url.parse(matcher.group(1));
    String processedUrl;
    if (imageCandidateUrl.isFull()) {
      processedUrl=imageCandidateUrl.toString(Url.StringMode.FULL);
    }
 else     if (imageCandidateUrl.isContextAbsolute()) {
      processedUrl=imageCandidateUrl.toString();
    }
 else {
      Url cssUrlCopy=new Url(cssUrl);
      cssUrlCopy.resolveRelative(imageCandidateUrl);
      processedUrl=cssUrlCopy.toString();
    }
    matcher.appendReplacement(output,"url('" + processedUrl + "')");
  }
  matcher.appendTail(output);
  return output.toString();
}
