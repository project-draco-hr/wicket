{
  if (tag.isOpen()) {
    stack.push(tag);
  }
 else   if (tag.isClose()) {
    if (stack.size() > 0) {
      ComponentTag top=stack.pop();
      boolean mismatch=!hasEqualTagName(top,tag);
      if (mismatch) {
        top.setHasNoCloseTag(true);
        while (mismatch && !requiresCloseTag(top.getName())) {
          top.setHasNoCloseTag(true);
          if (stack.isEmpty()) {
            break;
          }
          top=stack.pop();
          mismatch=!hasEqualTagName(top,tag);
        }
        if (mismatch) {
          throw new ParseException("Tag " + top.toUserDebugString() + " has a mismatched close tag at "+ tag.toUserDebugString(),top.getPos());
        }
      }
      tag.setOpenTag(top);
    }
 else {
      throw new WicketParseException("Tag does not have a matching open tag:",tag);
    }
  }
 else   if (tag.isOpenClose()) {
    tag.setOpenTag(tag);
  }
  return tag;
}
