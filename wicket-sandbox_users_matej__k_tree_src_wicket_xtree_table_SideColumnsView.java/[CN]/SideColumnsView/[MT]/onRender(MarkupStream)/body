{
  final int markupStart=markupStream.getCurrentIndex();
  Response response=RequestCycle.get().getResponse();
  boolean firstLeft=true;
  boolean rendered=false;
  for (int i=0; i < columns.size(); ++i) {
    Column column=columns.get(i);
    Component component=components.get(i);
    Renderable renderable=renderables.get(i);
    response.write("<span class=\"column\" style=\"" + renderColumnStyle(column) + "\">");
    if (column.getLocation().getAlignment() == Alignment.LEFT && firstLeft == true) {
      response.write("<span class=\"column-inner-first\">");
      firstLeft=false;
    }
 else {
      response.write("<span class=\"column-inner\">");
    }
    if (component != null) {
      markupStream.setCurrentIndex(markupStart);
      component.render(markupStream);
      rendered=true;
    }
 else     if (renderable != null) {
      renderable.render(response);
    }
 else {
      throw new IllegalStateException("Either renderable or cell component must be created for this noode");
    }
    response.write("</span></span>\n");
  }
  if (rendered == false) {
    markupStream.skipComponent();
  }
}
