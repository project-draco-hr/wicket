{
  List<IColumn<Foo,String>> columns=new ArrayList<>();
  columns.add(new PropertyColumn<>(Model.of("ID"),"id"));
  columns.add(new TreeColumn<>(Model.of("Tree")));
  columns.add(new AbstractColumn<Foo,String>(Model.of("Depth")){
    private static final long serialVersionUID=1L;
    @Override public void populateItem(    Item<ICellPopulator<Foo>> cellItem,    String componentId,    IModel<Foo> rowModel){
      NodeModel<Foo> nodeModel=(NodeModel<Foo>)rowModel;
      cellItem.add(new Label(componentId,"" + nodeModel.getDepth()));
    }
    @Override public String getCssClass(){
      return "number";
    }
  }
);
  columns.add(new PropertyColumn<>(Model.of("Bar"),"bar"));
  columns.add(new PropertyColumn<>(Model.of("Baz"),"baz"));
  return columns;
}
