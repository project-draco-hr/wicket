{
  final StringBuffer buffer=new StringBuffer();
  final List choices=getChoices();
  for (int index=0; index < choices.size(); index++) {
    final Object choice=choices.get(index);
    final String label=getChoiceRenderer().getDisplayValue(choice);
    if (label != null) {
      buffer.append(getPrefix());
      String id=getChoiceRenderer().getIdValue(choice,index);
      final String idAttr=getInputName() + "_" + id;
      buffer.append("<input name=\"" + getInputName() + "\""+ " type=\"radio\""+ (isSelected(choice,index) ? " checked=\"checked\"" : "")+ " value=\""+ id+ "\" id=\""+ idAttr+ "\"");
      if (wantOnSelectionChangedNotifications()) {
        final String url=urlFor(IOnChangeListener.class);
        try {
          Form form=getForm();
          buffer.append(" onclick=\"" + form.getJsForInterfaceUrl(url) + ";\"");
        }
 catch (        WicketRuntimeException ex) {
          buffer.append(" onclick=\"" + url + "&"+ getInputName()+ "="+ id+ "';\"");
        }
      }
      buffer.append("/>");
      String display=getLocalizer().getString(label,this,label);
      String escaped=Strings.escapeMarkup(display,false,true);
      buffer.append("<label for=\"" + idAttr + "\">"+ escaped+ "</label>");
      buffer.append(getSuffix());
    }
  }
  replaceComponentTagBody(markupStream,openTag,buffer.toString());
}
