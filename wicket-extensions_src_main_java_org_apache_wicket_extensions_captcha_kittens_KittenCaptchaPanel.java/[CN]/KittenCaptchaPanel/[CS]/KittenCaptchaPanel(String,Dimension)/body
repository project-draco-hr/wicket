{
  super(id);
  this.imageSize=imageSize;
  animals=new PlacedAnimalList();
  setOutputMarkupId(true);
  animalSelectionLabel=new Label("animalSelectionLabel",new AbstractReadOnlyModel<String>(){
    private static final long serialVersionUID=6792322972316712326L;
    @Override public String getObject(){
      return imageResource.selectString();
    }
  }
);
  animalSelectionLabel.setOutputMarkupId(true);
  add(animalSelectionLabel);
  image=new NonCachingImage("image",imageResource=new CaptchaImageResource(animals));
  image.add(new AjaxEventBehavior("click"){
    private static final long serialVersionUID=7480352029955897654L;
    @Override protected void updateAjaxAttributes(    AjaxRequestAttributes attributes){
      super.updateAjaxAttributes(attributes);
      IAjaxCallListener ajaxCallListener=new AjaxCallListener(){
        @Override public CharSequence getBeforeSendHandler(        Component component){
          return "showLoadingIndicator();";
        }
      }
;
      attributes.getAjaxCallListeners().add(ajaxCallListener);
      List<CharSequence> dynamicExtraParameters=attributes.getDynamicExtraParameters();
      dynamicExtraParameters.add("return { x: getEventX(Wicket.$(attrs.c), attrs.event), y: getEventY(Wicket.$(attrs.c), attrs.event)}");
    }
    @Override protected void onEvent(    final AjaxRequestTarget target){
      final Request request=RequestCycle.get().getRequest();
      IRequestParameters requestParameters=request.getRequestParameters();
      final int x=requestParameters.getParameterValue("x").toInt(0);
      final int y=requestParameters.getParameterValue("y").toInt(0);
      imageResource.clearData();
      final PlacedAnimal animal=animals.atLocation(new Point(x,y));
      if (animal != null) {
        animal.isHighlighted=!animal.isHighlighted;
        final StringBuilder javascript=new StringBuilder();
        javascript.append("Wicket.$('").append(image.getMarkupId()).append("').src = '");
        CharSequence url=image.urlFor(IResourceListener.INTERFACE,new PageParameters());
        javascript.append(url);
        javascript.append(url.toString().indexOf('?') > -1 ? "&amp;" : "?").append("rand=").append(Math.random());
        javascript.append("'");
        target.appendJavaScript(javascript.toString());
      }
 else {
        target.appendJavaScript(" hideLoadingIndicator();");
      }
      target.add(animalSelectionLabel);
    }
  }
);
  add(image);
}
