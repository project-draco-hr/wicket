{
  final MarkupParser parser=new MarkupParser(application,new XmlPullParser());
  parser.parse("<span wicket:id=\"test\"/>");
  parser.parse("<span wicket:id=\"test\">Body</span>");
  parser.parse("This is a test <span wicket:id=\"test\"/>");
  parser.parse("This is a test <span wicket:id=\"test\">Body</span>");
  parser.parse("<a wicket:id=\"[autolink]\" href=\"test.html\">Home</a>");
  parser.parse("<span wicket:id=\"test\"/><wicket:param key=value/>");
  parser.parse("<span wicket:id=\"test\"/><wicket:param key=\"value\" />");
  try {
    parser.parse("<span wicket:id=\"test\"/>whatever<wicket:param key=\"value\" />");
    assertTrue("Should have thrown an exception",false);
  }
 catch (  MarkupException ex) {
  }
  parser.parse("<span wicket:id=\"test\"/><wicket:param key=\"value\" /><wicket:param key2=\"value2\" />");
  parser.parse("<span wicket:id=\"test\"/>   <wicket:param key=\"value\" />   <wicket:param key2=\"value2\" />");
  parser.parse("<span wicket:id=\"test\"/> \n\r   <wicket:param key=\"value\" />\n\r\t   <wicket:param key2=\"value2\" />");
  parser.parse("<wicket:body/>");
  parser.parse("<wicket:border/>");
  parser.parse("<wicket:panel/>");
  try {
    parser.parse("<wicket:remove/>");
    assertTrue("Should have thrown an exception",false);
  }
 catch (  MarkupException ex) {
  }
  Markup markup=parser.parse("<wicket:remove>  </wicket:remove>");
  assertEquals(0,markup.size());
  markup=parser.parse("<wicket:remove> <span id=\"test\"/> </wicket:remove>");
  assertEquals(0,markup.size());
  markup=parser.parse("<div><wicket:remove> <span id=\"test\"/> </wicket:remove></div>");
  assertEquals(2,markup.size());
  assertEquals("<div>",((RawMarkup)markup.get(0)).toString());
  assertEquals("</div>",((RawMarkup)markup.get(1)).toString());
  try {
    parser.parse("<wicket:remove> <wicket:remove> </wicket:remove> </wicket:remove>");
    assertTrue("Should have thrown an exception: remove regions must not contain wicket-components",false);
  }
 catch (  MarkupException ex) {
  }
  parser.parse("<wicket:component name = \"componentName\" class = \"classname\" param1 = \"value1\"/>");
  parser.parse("<wicket:component name = \"componentName\" class = \"classname\" param1 = \"value1\">    </wicket:component>");
  parser.parse("<wicket:component name = \"componentName\" class = \"classname\" param1 = \"value1\">  <span wicket:id=\"msg\">hello world!</span></wicket:component>");
  parser.parse("<wicket:panel><div id=\"definitionsContentBox\"><span wicket:id=\"contentPanel\"/></div></wicket:panel>");
}
