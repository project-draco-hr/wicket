{
  super();
  List list=new ArrayList();
  addUser(list,1,"Name-aaa","mail-1");
  addUser(list,2,"Name-bbb","mail-2");
  addUser(list,3,"Name-ccc","mail-3");
  addUser(list,4,"Name-ddd","mail-4");
  addUser(list,5,"Name-eee","mail-5");
  addUser(list,6,"Name-aba","mail-6");
  addUser(list,7,"Name-bab","mail-7");
  addUser(list,8,"Name-dca","mail-8");
  addUser(list,9,"Name-eaa","mail-9");
  ListView table=new ListView("table",list){
    protected void populateItem(    ListItem listItem){
      User user=(User)listItem.getModelObject();
      listItem.add(new Label("id",new PropertyModel(user,"id")));
      listItem.add(new Label("name",new PropertyModel(user,"name")));
      listItem.add(new Label("email",new PropertyModel(user,"email")));
    }
  }
;
  add(table);
  add(new SortableListViewHeaders("header",table){
    protected int compareTo(    SortableListViewHeader header,    Object o1,    Object o2){
      if (header.getId().equals("id")) {
        return ((User)o1).id - ((User)o2).id;
      }
      return super.compareTo(header,o1,o2);
    }
    /** 
 * Define how to do sorting
 * @see SortableListViewHeaders#getObjectToCompare(SortableListViewHeader,java.lang.Object)
 */
    protected Comparable getObjectToCompare(    final SortableListViewHeader header,    final Object object){
      final String name=header.getId();
      if (name.equals("name")) {
        return ((User)object).name;
      }
      if (name.equals("email")) {
        return ((User)object).email;
      }
      return "";
    }
  }
);
}
