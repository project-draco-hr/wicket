{
  boolean res=true;
  final ClassLoader previousClassLoader=Thread.currentThread().getContextClassLoader();
  final ClassLoader newClassLoader=getClassLoader();
  try {
    if (previousClassLoader != newClassLoader) {
      Thread.currentThread().setContextClassLoader(newClassLoader);
    }
    HttpServletRequest httpServletRequest=(HttpServletRequest)request;
    HttpServletResponse httpServletResponse=(HttpServletResponse)response;
    String filterPath=getFilterPath(httpServletRequest);
    webApplication.set();
    if (checkForTrailingSlash(httpServletRequest,httpServletResponse,filterPath)) {
      ServletWebRequest req=new ServletWebRequest(httpServletRequest,filterPath);
      WebResponse resp=new HeaderBufferingWebResponse(new ServletWebResponse(httpServletRequest,httpServletResponse));
      RequestCycle requestCycle=webApplication.createRequestCycle(req,resp);
      if (!requestCycle.processRequestAndDetach()) {
        if (chain != null) {
          chain.doFilter(request,response);
        }
        res=false;
      }
 else {
        resp.flush();
      }
    }
  }
  finally {
    ThreadContext.detach();
    if (newClassLoader != previousClassLoader) {
      Thread.currentThread().setContextClassLoader(previousClassLoader);
    }
    response.flushBuffer();
  }
  return res;
}
