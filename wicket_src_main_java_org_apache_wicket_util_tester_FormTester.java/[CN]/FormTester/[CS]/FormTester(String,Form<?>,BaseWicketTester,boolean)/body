{
  this.path=path;
  this.workingForm=workingForm;
  tester=wicketTester;
  workingForm.visitFormComponents(new FormComponent.AbstractVisitor<Void>(){
    @SuppressWarnings("unchecked") @Override public void onFormComponent(    final FormComponent<?> formComponent,    IVisit<Void> visit){
      if (!(formComponent.isVisibleInHierarchy() && formComponent.isEnabledInHierarchy())) {
        return;
      }
      if (formComponent instanceof AbstractTextComponent) {
        if (Strings.isEmpty(formComponent.getValue())) {
          if (fillBlankString) {
            setFormComponentValue(formComponent,"");
          }
        }
 else {
          setFormComponentValue(formComponent,formComponent.getValue());
        }
      }
 else       if ((formComponent instanceof DropDownChoice) || (formComponent instanceof RadioChoice) || (formComponent instanceof CheckBox)) {
        setFormComponentValue(formComponent,formComponent.getValue());
      }
 else       if (formComponent instanceof ListMultipleChoice) {
        final String[] modelValues=formComponent.getValue().split(FormComponent.VALUE_SEPARATOR);
        for (        String modelValue : modelValues) {
          addFormComponentValue(formComponent,modelValue);
        }
      }
 else       if (formComponent instanceof CheckGroup) {
        final Collection<?> checkGroupValues=(Collection<?>)formComponent.getDefaultModelObject();
        formComponent.visitChildren(Check.class,new IVisitor<Component,Void>(){
          public void component(          final Component component,          final IVisit<Void> visit){
            if (checkGroupValues.contains(component.getDefaultModelObject())) {
              addFormComponentValue(formComponent,((Check<?>)component).getValue());
            }
          }
        }
);
      }
 else       if (formComponent instanceof RadioGroup) {
        final Object value=formComponent.getDefaultModelObject();
        if (value != null) {
          formComponent.visitChildren(Radio.class,new IVisitor<Component,Void>(){
            public void component(            final Component component,            final IVisit<Void> visit){
              if (value.equals(component.getDefaultModelObject())) {
                addFormComponentValue(formComponent,((Radio<?>)component).getValue());
                visit.stop();
              }
 else {
                visit.dontGoDeeper();
              }
            }
          }
);
        }
      }
    }
  }
);
  workingForm.detach();
}
