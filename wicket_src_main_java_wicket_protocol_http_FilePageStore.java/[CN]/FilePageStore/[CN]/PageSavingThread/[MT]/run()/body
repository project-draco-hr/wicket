{
  while (!stop) {
    try {
synchronized (storePageMap) {
        if (stop)         return;
        while (storePageMap.size() == 0) {
          storePageMap.wait();
        }
      }
      Iterator it=storePageMap.entrySet().iterator();
      outer:       while (it.hasNext()) {
        Map.Entry entry=(Entry)it.next();
        List sessionList=(List)entry.getValue();
        while (true) {
          byte[] pageBytes=null;
          Object data=null;
          SessionPageKey key=null;
synchronized (sessionList) {
            if (sessionList.size() != 0) {
              key=(SessionPageKey)sessionList.get(0);
              data=key.data;
              if (data instanceof Page) {
                key.setObject(SERIALIZING);
              }
 else               if (data instanceof byte[]) {
                pageBytes=(byte[])data;
              }
 else {
                sessionList.remove(0);
              }
            }
            if (key == null) {
              storePageMap.remove(entry.getKey());
              continue outer;
            }
          }
          if (data instanceof Page) {
            pageBytes=serializePage(key,(Page)data);
synchronized (sessionList) {
              key.setObject(pageBytes);
              sessionList.notifyAll();
            }
synchronized (storePageMap) {
              pagesInMap--;
            }
          }
          if (pageBytes != null) {
            savePage(key,pageBytes);
          }
          sessionList.remove(key);
          key=null;
          pageBytes=null;
          data=null;
        }
      }
    }
 catch (    Exception e) {
      log.error("Error in page save thread",e);
    }
  }
}
