{
  IInterface proxy=(IInterface)LazyInitProxyFactory.createProxy(IInterface.class,interfaceObjectLocator);
  assertTrue(Proxy.isProxyClass(proxy.getClass()));
  assertTrue(proxy instanceof ILazyInitProxy);
  assertTrue(((ILazyInitProxy)proxy).getObjectLocator() == interfaceObjectLocator);
  assertEquals(proxy.getMessage(),"interface");
  IInterface proxy2=(IInterface)WicketObjects.cloneObject(proxy);
  assertTrue(proxy != proxy2);
  assertEquals(proxy2.getMessage(),"interface");
  final IObjectMethodTester tester=new ObjectMethodTester();
  assertTrue(tester.isValid());
  IProxyTargetLocator testerLocator=new IProxyTargetLocator(){
    private static final long serialVersionUID=1L;
    public Object locateProxyTarget(){
      return tester;
    }
  }
;
  IObjectMethodTester testerProxy=(IObjectMethodTester)LazyInitProxyFactory.createProxy(IObjectMethodTester.class,testerLocator);
  testerProxy.equals(this);
  testerProxy.hashCode();
  testerProxy.toString();
  assertTrue(tester.isValid());
}
