{
  if (uploadedFiles == null && useMultiPartContentType == false) {
    if (post.getParameterNames().size() == 0) {
      return "".getBytes();
    }
    Url url=new Url();
    for (Iterator<String> iterator=post.getParameterNames().iterator(); iterator.hasNext(); ) {
      final String name=iterator.next();
      List<org.apache.wicket.util.string.StringValue> values=post.getParameterValues(name);
      for (      org.apache.wicket.util.string.StringValue value : values) {
        url.addQueryParameter(name,value.toString());
      }
    }
    String body=url.toString().substring(1);
    return body.getBytes();
  }
  try {
    ByteArrayOutputStream out=new ByteArrayOutputStream();
    for (Iterator<String> iterator=post.getParameterNames().iterator(); iterator.hasNext(); ) {
      final String name=iterator.next();
      List<org.apache.wicket.util.string.StringValue> values=post.getParameterValues(name);
      for (      org.apache.wicket.util.string.StringValue value : values) {
        newAttachment(out);
        out.write("; name=\"".getBytes());
        out.write(name.getBytes());
        out.write("\"".getBytes());
        out.write(crlf.getBytes());
        out.write(crlf.getBytes());
        out.write(post.getParameterValue(name).toString().getBytes());
        out.write(crlf.getBytes());
      }
    }
    if (uploadedFiles != null) {
      for (Iterator<String> iterator=uploadedFiles.keySet().iterator(); iterator.hasNext(); ) {
        String fieldName=iterator.next();
        UploadedFile uf=uploadedFiles.get(fieldName);
        newAttachment(out);
        out.write("; name=\"".getBytes());
        out.write(fieldName.getBytes());
        out.write("\"; filename=\"".getBytes());
        out.write(uf.getFile().getName().getBytes());
        out.write("\"".getBytes());
        out.write(crlf.getBytes());
        out.write("Content-Type: ".getBytes());
        out.write(uf.getContentType().getBytes());
        out.write(crlf.getBytes());
        out.write(crlf.getBytes());
        FileInputStream fis=new FileInputStream(uf.getFile());
        IOUtils.copy(fis,out);
        fis.close();
        out.write(crlf.getBytes());
      }
    }
    out.write(boundary.getBytes());
    out.write("--".getBytes());
    out.write(crlf.getBytes());
    return out.toByteArray();
  }
 catch (  IOException e) {
    throw new WicketRuntimeException(e);
  }
}
