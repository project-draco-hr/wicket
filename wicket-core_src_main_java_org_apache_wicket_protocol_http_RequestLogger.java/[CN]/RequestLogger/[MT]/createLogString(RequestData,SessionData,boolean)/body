{
  AppendingStringBuffer sb=new AppendingStringBuffer(150);
  sb.append("time=");
  sb.append(rd.getTimeTaken());
  if (!Strings.isEmpty(rd.getRequestedUrl())) {
    sb.append(",url=");
    sb.append(rd.getRequestedUrl());
  }
  sb.append(",event=");
  sb.append(rd.getEventTarget());
  sb.append(",response=");
  sb.append(rd.getResponseTarget());
  if (rd.getSessionInfo() != null && !Strings.isEmpty(rd.getSessionInfo().toString())) {
    sb.append(",sessioninfo=");
    sb.append(rd.getSessionInfo());
  }
 else {
    sb.append(",sessionid=");
    sb.append(rd.getSessionId());
  }
  sb.append(",sessionsize=");
  sb.append(rd.getSessionSize());
  if (sd != null) {
    sb.append(",sessionstart=");
    sb.append(sd.getStartDate());
    sb.append(",requests=");
    sb.append(sd.getNumberOfRequests());
    sb.append(",totaltime=");
    sb.append(sd.getTotalTimeTaken());
  }
  sb.append(",activerequests=");
  sb.append(rd.getActiveRequest());
  if (includeRuntimeInfo) {
    Runtime runtime=Runtime.getRuntime();
    long max=runtime.maxMemory() / 1000000;
    long total=runtime.totalMemory() / 1000000;
    long used=total - runtime.freeMemory() / 1000000;
    sb.append(",maxmem=");
    sb.append(max);
    sb.append("M,total=");
    sb.append(total);
    sb.append("M,used=");
    sb.append(used);
    sb.append("M");
  }
  return sb;
}
