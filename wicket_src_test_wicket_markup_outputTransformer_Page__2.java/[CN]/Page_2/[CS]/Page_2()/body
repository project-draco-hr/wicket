{
  new Label(this,"myLabel","Test Label");
  MarkupContainer container=new NoopOutputTransformerContainer(this,"test");
  new Label(container,"myLabel2","Test Label2");
  MarkupContainer panelContainer=new AbstractOutputTransformerContainer(this,"test2"){
    private static final long serialVersionUID=1L;
    @Override public CharSequence transform(    Component component,    String output){
      return "Whatever";
    }
  }
;
  Panel panel=new Panel_1(panelContainer,"myPanel");
  panel.setRenderBodyOnly(true);
  MarkupContainer borderContainer=new AbstractOutputTransformerContainer(this,"test3"){
    private static final long serialVersionUID=1L;
    @Override public CharSequence transform(    Component component,    String output){
      return output.toUpperCase();
    }
  }
;
  Border border=new SimpleBorder(borderContainer,"myBorder");
  Border border2=new SimpleBorder(this,"myBorder2");
  border2.setRenderBodyOnly(false);
  border2.add(new AttributeModifier("testAttr",true,new Model<String>("myValue")));
  border2.add(new XsltTransfomerBehavior());
}
