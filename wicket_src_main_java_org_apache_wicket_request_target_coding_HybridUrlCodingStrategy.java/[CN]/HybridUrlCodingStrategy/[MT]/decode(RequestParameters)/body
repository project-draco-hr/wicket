{
  String parametersFragment=requestParameters.getPath().substring(getMountPath().length());
  PageInfoExtraction extraction=extractPageInfo(parametersFragment);
  PageInfo pageInfo=extraction.getPageInfo();
  String pageMapName=pageInfo != null ? pageInfo.getPageMapName() : null;
  Integer pageVersion=pageInfo != null ? pageInfo.getVersionNumber() : null;
  Integer pageId=pageInfo != null ? pageInfo.getPageId() : null;
  PageParameters parameters=new PageParameters(decodeParameters(extraction.getUrlAfterExtraction(),requestParameters.getParameters()));
  if (requestParameters.getPageMapName() == null) {
    requestParameters.setPageMapName(pageMapName);
  }
 else {
    pageMapName=requestParameters.getPageMapName();
  }
  final String interfaceParameter=(String)parameters.remove(WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME);
  int originalUrlTrailingSlashesCount=getTrailingSlashesCount(extraction.getUrlAfterExtraction());
  boolean redirect=isRedirectOnBookmarkableRequest();
  if ((Strings.isEmpty(pageMapName) != true) && alwaysRedirectWhenPageMapIsSpecified()) {
    redirect=true;
  }
  if (interfaceParameter != null) {
    WebRequestCodingStrategy.addInterfaceParameters(interfaceParameter,requestParameters);
    return new BookmarkableListenerInterfaceRequestTarget(pageMapName,pageClassRef.get(),parameters,requestParameters.getComponentPath(),requestParameters.getInterfaceName(),requestParameters.getVersionNumber());
  }
 else   if (pageId == null) {
    return new HybridBookmarkablePageRequestTarget(pageMapName,pageClassRef.get(),parameters,originalUrlTrailingSlashesCount,redirect);
  }
 else {
    Page page;
    if (Strings.isEmpty(pageMapName) && Application.exists() && Application.get().getSessionSettings().isPageIdUniquePerSession()) {
      page=Session.get().getPage(pageId.intValue(),pageVersion != null ? pageVersion.intValue() : 0);
    }
 else {
      page=Session.get().getPage(pageMapName,"" + pageId,pageVersion != null ? pageVersion.intValue() : 0);
    }
    if ((page != null) && page.getClass().equals(pageClassRef.get())) {
      requestParameters.setInterfaceName(IRedirectListener.INTERFACE.getName());
      RequestCycle.get().getRequest().setPage(page);
      return new PageRequestTarget(page);
    }
 else {
      if (requestParameters.getInterface() != null) {
        handleExpiredPage(pageMapName,pageClassRef.get(),originalUrlTrailingSlashesCount,redirect);
      }
      return new HybridBookmarkablePageRequestTarget(pageMapName,pageClassRef.get(),parameters,originalUrlTrailingSlashesCount,redirect);
    }
  }
}
