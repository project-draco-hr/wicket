{
  String wicketURL=null;
  String wicketFilterPath=null;
  String wicketFilterQuery=null;
  request.setAttribute(WICKET_URL_PORTLET_PARAMETER_ATTR,getWicketUrlPortletParameter(request));
  wicketURL=getWicketURL(request,pageType,getDefaultPage(pageType));
  wicketFilterPath=getWicketConfigParameter(request,WICKET_FILTER_PATH,this.wicketFilterPath);
  wicketFilterQuery=getWicketConfigParameter(request,WICKET_FILTER_QUERY,this.wicketFilterQuery);
  boolean actionRequest=ACTION_REQUEST.equals(requestType);
  WicketResponseState responseState=new WicketResponseState();
  request.setAttribute(RESPONSE_STATE_ATTR,responseState);
  request.setAttribute(RESOURCE_URL_FACTORY_ATTR,resourceURLFactory);
  request.setAttribute(REQUEST_TYPE_ATTR,requestType);
  String portletResourceURL=request.getParameter(PORTLET_RESOURCE_URL_PARAMETER);
  if (portletResourceURL != null) {
    request.setAttribute(PORTLET_RESOURCE_URL_ATTR,portletResourceURL);
  }
  if (actionRequest) {
    ServletContext servletContext=getServletContext(this,request,response);
    HttpServletRequest req=getHttpServletRequest(this,request,response);
    HttpServletResponse res=getHttpServletResponse(this,request,response);
    RequestDispatcher rd=servletContext.getRequestDispatcher(wicketURL);
    if (rd != null) {
      if (req.getAttribute("javax.portlet.config") == null) {
        req.setAttribute("javax.portlet.config",getPortletConfig());
      }
      if (req.getAttribute("javax.portlet.request") == null) {
        req.setAttribute("javax.portlet.request",request);
      }
      if (req.getAttribute("javax.portlet.response") == null) {
        req.setAttribute("javax.portlet.response",response);
      }
      try {
        rd.include(req,res);
        processActionResponseState(wicketURL,wicketFilterPath,wicketFilterQuery,(ActionRequest)request,(ActionResponse)response,responseState);
      }
 catch (      ServletException e) {
        throw new PortletException(e);
      }
    }
  }
 else {
    PortletRequestDispatcher rd=null;
    String previousURL=null;
    while (true) {
      rd=getPortletContext().getRequestDispatcher(wicketURL);
      if (rd != null) {
        rd.include((RenderRequest)request,(RenderResponse)response);
        String redirectLocation=responseState.getRedirectLocation();
        if (redirectLocation != null) {
          redirectLocation=fixWicketUrl(redirectLocation,wicketFilterPath,wicketFilterQuery);
          boolean validWicketUrl=redirectLocation.startsWith(wicketFilterPath);
          if (portletResourceURL != null) {
            if (validWicketUrl) {
              HashMap parameters=new HashMap(2);
              parameters.put((String)request.getAttribute(WicketPortlet.WICKET_URL_PORTLET_PARAMETER_ATTR) + request.getPortletMode().toString(),new String[]{redirectLocation});
              parameters.put(PORTLET_RESOURCE_URL_PARAMETER,new String[]{"true"});
              redirectLocation=resourceURLFactory.createResourceURL(getPortletConfig(),(RenderRequest)request,(RenderResponse)response,parameters);
            }
            getHttpServletResponse(this,request,response).sendRedirect(redirectLocation);
          }
 else           if (validWicketUrl && ((previousURL == null || previousURL != redirectLocation))) {
            previousURL=wicketURL;
            wicketURL=redirectLocation;
            ((RenderResponse)response).reset();
            responseState.reset();
            continue;
          }
 else {
          }
        }
      }
      break;
    }
  }
}
