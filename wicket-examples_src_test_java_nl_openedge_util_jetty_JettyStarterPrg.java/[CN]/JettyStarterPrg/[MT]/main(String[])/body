{
  Properties cmdArguments=new Properties();
  for (int i=0; i < args.length; i+=2) {
    if (i + 1 < args.length) {
      String key=args[i];
      String val=args[i + 1];
      log.info("using arg: " + key + " == "+ val);
      cmdArguments.put(key,val);
    }
  }
  boolean useJettyPlus=Boolean.valueOf(cmdArguments.getProperty(CMDARG_USE_JETTY_PLUS,"false")).booleanValue();
  String jettyConfig=cmdArguments.getProperty(CMDARG_XML_CONFIG);
  int port=Integer.parseInt(cmdArguments.getProperty(CMDARG_PORT,DEFAULT_HTTP_LISTEN_PORT));
  String webappContextRoot=cmdArguments.getProperty(CMDARG_WEBAPP_CONTEXT_ROOT,"./");
  String contextPath=cmdArguments.getProperty(CMDARG_CONTEXT_PATH,"/");
  String monitorCommKey=cmdArguments.getProperty(CMDARG_MONITOR_COMM_KEY);
  if (monitorCommKey == null) {
    monitorCommKey=System.getProperty("STOP.KEY","mortbay");
  }
  String monitorPortS=cmdArguments.getProperty(CMDARG_MONITOR_PORT);
  int monitorPort;
  if (monitorPortS != null) {
    monitorPort=Integer.parseInt(monitorPortS);
  }
 else {
    monitorPort=Integer.getInteger("STOP.PORT",DEFAULT_STOP_PORT).intValue();
  }
  try {
    startServer(jettyConfig,port,webappContextRoot,contextPath,useJettyPlus,monitorCommKey,monitorPort);
  }
 catch (  MalformedURLException e) {
    log.error(e.getMessage(),e);
  }
catch (  MultiException e) {
    log.error(e.getMessage(),e);
  }
catch (  JettyHelperException e) {
    log.error(e.getMessage(),e);
  }
}
