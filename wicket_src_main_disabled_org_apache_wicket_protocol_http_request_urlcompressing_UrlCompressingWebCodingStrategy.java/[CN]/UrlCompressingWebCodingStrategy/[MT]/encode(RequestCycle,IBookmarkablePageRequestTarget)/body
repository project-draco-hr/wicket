{
  if (requestTarget instanceof BookmarkableListenerInterfaceRequestTarget && requestTarget.getPageParameters().containsKey(WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME)) {
    BookmarkableListenerInterfaceRequestTarget t=(BookmarkableListenerInterfaceRequestTarget)requestTarget;
    Page page=t.getPage();
    int version=0;
    String componentPath=t.getComponentPath();
    String interfaceName=t.getInterfaceName();
    String pageMapName=null;
    AppendingStringBuffer param=new AppendingStringBuffer(4 + componentPath.length() + interfaceName.length());
    if (pageMapName != null) {
      param.append(pageMapName);
    }
    param.append(Component.PATH_SEPARATOR);
    if (page instanceof WebPage && !"IResourceListener".equals(interfaceName)) {
      param.append(page.getId());
      Component comp=page.get(Strings.afterFirstPathComponent(componentPath,Component.PATH_SEPARATOR));
      param.append(Component.PATH_SEPARATOR);
      param.append(((WebPage)page).getUrlCompressor().getUIDForComponentAndInterface(comp,interfaceName));
      interfaceName=null;
    }
 else {
      param.append(componentPath);
    }
    param.append(Component.PATH_SEPARATOR);
    if (version != 0) {
      param.append(version);
    }
    param.append(Component.PATH_SEPARATOR);
    if (interfaceName != null && !IRedirectListener.INTERFACE.getName().equals(interfaceName)) {
      param.append(interfaceName);
    }
    param.append(Component.PATH_SEPARATOR);
    param.append(Component.PATH_SEPARATOR);
    t.getPageParameters().put(WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME,param.toString());
  }
  return super.encode(requestCycle,requestTarget);
}
