{
  final String componentPath=requestParameters.getComponentPath();
  final Session session=requestCycle.getSession();
  final Page page=session.getPage(requestParameters.getPageMapName(),componentPath,requestParameters.getVersionNumber());
  if (page != null) {
    requestCycle.setUpdateCluster(true);
    final String interfaceName=requestParameters.getInterfaceName();
    if (interfaceName != null) {
      if (interfaceName.equals("IRedirectListener")) {
        return new RedirectPageRequestTarget(page);
      }
 else {
        final Method listenerMethod=requestCycle.getRequestInterfaceMethod(interfaceName);
        if (listenerMethod == null) {
          throw new WicketRuntimeException("Attempt to access unknown interface " + interfaceName);
        }
        String componentPart=Strings.afterFirstPathComponent(componentPath,':');
        if (Strings.isEmpty(componentPart)) {
          throw new WicketRuntimeException("when trying to call " + listenerMethod + ", a component must be provided");
        }
        final Component component=page.get(componentPart);
        if (!component.isVisible()) {
          throw new WicketRuntimeException("Calling listener methods on components that are not visible is not allowed");
        }
        return new ListenerInterfaceRequestTarget(page,component,listenerMethod);
      }
    }
 else {
      return new PageRequestTarget(page);
    }
  }
 else {
    return new ExpiredPageClassRequestTarget();
  }
}
