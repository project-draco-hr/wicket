{
  if (mapBoolean != null) {
    ClassStreamHandler lookup=ClassStreamHandler.lookup(boolean.class);
    writeShort(lookup.getClassId());
    writeShort(mapBoolean.size());
    Iterator it=mapBoolean.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry entry=(Entry)it.next();
      writeObjectOverride(entry.getKey());
      writeBoolean(((Boolean)entry.getValue()).booleanValue());
    }
  }
  if (mapBytes != null) {
    ClassStreamHandler lookup=ClassStreamHandler.lookup(byte.class);
    writeShort(lookup.getClassId());
    writeShort(mapBytes.size());
    Iterator it=mapBytes.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry entry=(Entry)it.next();
      writeObjectOverride(entry.getKey());
      writeByte(((Byte)entry.getValue()).byteValue());
    }
  }
  if (mapShort != null) {
    ClassStreamHandler lookup=ClassStreamHandler.lookup(short.class);
    writeShort(lookup.getClassId());
    writeShort(mapShort.size());
    Iterator it=mapShort.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry entry=(Entry)it.next();
      writeObjectOverride(entry.getKey());
      writeShort(((Short)entry.getValue()).shortValue());
    }
  }
  if (mapChar != null) {
    ClassStreamHandler lookup=ClassStreamHandler.lookup(char.class);
    writeShort(lookup.getClassId());
    writeShort(mapChar.size());
    Iterator it=mapChar.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry entry=(Entry)it.next();
      writeObjectOverride(entry.getKey());
      writeChar(((Character)entry.getValue()).charValue());
    }
  }
  if (mapInt != null) {
    ClassStreamHandler lookup=ClassStreamHandler.lookup(int.class);
    writeShort(lookup.getClassId());
    writeShort(mapInt.size());
    Iterator it=mapInt.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry entry=(Entry)it.next();
      writeObjectOverride(entry.getKey());
      writeInt(((Integer)entry.getValue()).intValue());
    }
  }
  if (mapLong != null) {
    ClassStreamHandler lookup=ClassStreamHandler.lookup(long.class);
    writeShort(lookup.getClassId());
    writeShort(mapLong.size());
    Iterator it=mapLong.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry entry=(Entry)it.next();
      writeObjectOverride(entry.getKey());
      writeLong(((Long)entry.getValue()).longValue());
    }
  }
  if (mapFloat != null) {
    ClassStreamHandler lookup=ClassStreamHandler.lookup(float.class);
    writeShort(lookup.getClassId());
    writeShort(mapFloat.size());
    Iterator it=mapFloat.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry entry=(Entry)it.next();
      writeObjectOverride(entry.getKey());
      writeFloat(((Float)entry.getValue()).floatValue());
    }
  }
  if (mapDouble != null) {
    ClassStreamHandler lookup=ClassStreamHandler.lookup(double.class);
    writeShort(lookup.getClassId());
    writeShort(mapDouble.size());
    Iterator it=mapDouble.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry entry=(Entry)it.next();
      writeObjectOverride(entry.getKey());
      writeDouble(((Double)entry.getValue()).doubleValue());
    }
  }
  if (mapObject != null) {
    ClassStreamHandler lookup=ClassStreamHandler.lookup(Serializable.class);
    writeShort(lookup.getClassId());
    writeShort(mapObject.size());
    Iterator it=mapObject.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry entry=(Entry)it.next();
      writeObjectOverride(entry.getKey());
      writeObjectOverride(entry.getValue());
    }
  }
  writeShort(ClassStreamHandler.NULL);
}
