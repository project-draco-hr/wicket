{
  AppendingStringBuffer result=new AppendingStringBuffer(original.length() / 2);
  int state=REGULAR_TEXT;
  boolean wasNewLineInWhitespace=false;
  for (int i=0; i < original.length(); ++i) {
    char c=original.charAt(i);
    char next=(i < original.length() - 1) ? original.charAt(i + 1) : 0;
    char prev=(i > 0) ? original.charAt(i - 1) : 0;
    if (state == WHITE_SPACE) {
      if (c == '\n' && !wasNewLineInWhitespace) {
        result.append("\n");
        wasNewLineInWhitespace=true;
      }
      if (Character.isWhitespace(next) == false) {
        state=REGULAR_TEXT;
      }
      continue;
    }
    if (state == REGULAR_TEXT) {
      if (c == '/' && next == '/' && prev != '\\') {
        state=LINE_COMMENT;
        continue;
      }
 else       if (c == '/' && next == '*') {
        state=MULTILINE_COMMENT;
        ++i;
        continue;
      }
 else       if (c == '/') {
        int idx=result.length() - 1;
        while (idx > 0) {
          char tmp=result.charAt(idx);
          if (Character.isWhitespace(tmp)) {
            idx--;
            continue;
          }
          if (tmp == '=' || tmp == '(' || tmp == '{' || tmp == ':' || tmp == ',' || tmp == '[' || tmp == ';') {
            state=REG_EXP;
            break;
          }
          break;
        }
      }
 else       if (Character.isWhitespace(c) && Character.isWhitespace(next)) {
        if (c == '\n' || next == '\n') {
          c='\n';
          wasNewLineInWhitespace=true;
        }
 else {
          c=' ';
          wasNewLineInWhitespace=false;
        }
        state=WHITE_SPACE;
      }
 else       if (c == '\'') {
        state=STRING_SINGLE_QUOTE;
      }
 else       if (c == '"') {
        state=STRING_DOUBLE_QUOTES;
      }
      result.append(c);
      continue;
    }
    if (state == LINE_COMMENT) {
      if (c == '\n' || c == '\r') {
        state=REGULAR_TEXT;
        continue;
      }
    }
    if (state == MULTILINE_COMMENT) {
      if (c == '*' && next == '/') {
        state=REGULAR_TEXT;
        ++i;
        continue;
      }
    }
    if (state == STRING_SINGLE_QUOTE) {
      int count=getPrevCount(original,i,'\\');
      if (c == '\'' && count % 2 == 0) {
        state=REGULAR_TEXT;
      }
      result.append(c);
      continue;
    }
    if (state == STRING_DOUBLE_QUOTES) {
      int count=getPrevCount(original,i,'\\');
      if (c == '"' && count % 2 == 0) {
        state=REGULAR_TEXT;
      }
      result.append(c);
      continue;
    }
    if (state == REG_EXP) {
      int count=getPrevCount(original,i,'\\');
      if (c == '/' && count % 2 == 0) {
        state=REGULAR_TEXT;
      }
      result.append(c);
    }
  }
  return result.toString();
}
