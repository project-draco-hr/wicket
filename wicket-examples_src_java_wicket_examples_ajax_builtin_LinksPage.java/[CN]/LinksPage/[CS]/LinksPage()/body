{
  final Label c1=new Label(this,"c1",new PropertyModel(this,"counter1"));
  c1.setOutputMarkupId(true);
  add(c1);
  final Label c2=new Label(this,"c2",new PropertyModel(this,"counter2"));
  c2.setOutputMarkupId(true);
  add(c2);
  final Label c3=new Label(this,"c3",new PropertyModel(this,"counter3"));
  c3.setOutputMarkupId(true);
  add(c3);
  add(new AjaxLink(this,"c1-link"){
    @Override public void onClick(    AjaxRequestTarget target){
      counter1++;
      target.addComponent(c1);
    }
  }
);
  add(new AjaxFallbackLink(this,"c2-link"){
    @Override public void onClick(    AjaxRequestTarget target){
      counter2++;
      if (target != null) {
        target.addComponent(c2);
      }
    }
  }
);
  add(new IndicatingAjaxLink(this,"c3-link"){
    @Override public void onClick(    AjaxRequestTarget target){
      counter3++;
      target.addComponent(c3);
      try {
        Thread.sleep(5000);
      }
 catch (      InterruptedException e) {
      }
    }
  }
);
  add(new AjaxLink(this,"success-link"){
    @Override public void onClick(    AjaxRequestTarget target){
    }
    @Override protected wicket.ajax.IAjaxCallDecorator getAjaxCallDecorator(){
      return new AjaxCallDecorator(){
        @Override public CharSequence decorateOnSuccessScript(        CharSequence script){
          return "alert('Success');";
        }
        @Override public CharSequence decorateOnFailureScript(        CharSequence script){
          return "alert('Failure');";
        }
        @Override public CharSequence decorateScript(        CharSequence script){
          return "alert('Before ajax call');" + script;
        }
      }
;
    }
  }
);
  add(new AjaxLink(this,"failure-link"){
    @Override public void onClick(    AjaxRequestTarget target){
      throw new WicketRuntimeException("Failure link clicked");
    }
    @Override protected wicket.ajax.IAjaxCallDecorator getAjaxCallDecorator(){
      return new AjaxCallDecorator(){
        @Override public CharSequence decorateOnSuccessScript(        CharSequence script){
          return "alert('Success');";
        }
        @Override public CharSequence decorateOnFailureScript(        CharSequence script){
          return "alert('Failure');";
        }
        @Override public CharSequence decorateScript(        CharSequence script){
          return "alert('Before ajax call');" + script;
        }
      }
;
    }
  }
);
}
