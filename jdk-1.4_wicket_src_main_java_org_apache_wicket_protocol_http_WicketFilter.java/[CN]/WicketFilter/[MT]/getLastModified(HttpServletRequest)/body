{
  final String pathInfo=getRelativePath(servletRequest);
  if (pathInfo.startsWith(WebRequestCodingStrategy.RESOURCES_PATH_PREFIX)) {
    final String resourceReferenceKey=pathInfo.substring(WebRequestCodingStrategy.RESOURCES_PATH_PREFIX.length());
    Resource resource=null;
    boolean externalCall=!Application.exists();
    try {
      if (externalCall) {
        Application.set(webApplication);
      }
      resource=webApplication.getSharedResources().get(resourceReferenceKey);
      if ((resource != null) && resource.isCacheable()) {
        final WebRequest request=webApplication.newWebRequest(servletRequest);
        final WebResponse response=new WebResponse();
        RequestCycle cycle=webApplication.newRequestCycle(request,response);
        resource.setParameters(request.getParameterMap());
        IResourceStream stream=resource.getResourceStream();
        Time time=stream.lastModifiedTime();
        try {
          stream.close();
        }
 catch (        IOException e) {
        }
        return time != null ? time.getMilliseconds() : -1;
      }
    }
 catch (    AbortException e) {
      return -1;
    }
 finally {
      if (resource != null) {
        resource.setParameters(null);
      }
      if (externalCall) {
        Application.unset();
      }
      if (Session.exists()) {
        Session.unset();
      }
    }
  }
  return -1;
}
