{
  boolean externalCall=!Application.exists();
  if (externalCall) {
    Application.set(webApplication);
  }
  String relativePath=getRelativePath(servletRequest);
  if (relativePath.length() == 0 && !Strings.stripJSessionId(servletRequest.getRequestURI()).endsWith("/")) {
    final String redirectUrl=servletRequest.getRequestURI() + "/";
    servletResponse.sendRedirect(servletResponse.encodeRedirectURL(redirectUrl));
    return;
  }
  final ClassLoader previousClassLoader=Thread.currentThread().getContextClassLoader();
  final ClassLoader newClassLoader=getClassLoader();
  try {
    if (previousClassLoader != newClassLoader) {
      Thread.currentThread().setContextClassLoader(newClassLoader);
    }
    if (servletRequest.getCharacterEncoding() == null) {
      try {
        servletRequest.setCharacterEncoding(webApplication.getRequestCycleSettings().getResponseRequestEncoding());
      }
 catch (      UnsupportedEncodingException ex) {
        throw new WicketRuntimeException(ex.getMessage());
      }
    }
    final RequestCycle existingRequestCycle=RequestCycle.get();
    final WebRequest request=existingRequestCycle != null ? (WebRequest)existingRequestCycle.getRequest() : webApplication.newWebRequest(servletRequest);
    if (webApplication.getRequestCycleSettings().getRenderStrategy() == IRequestCycleSettings.REDIRECT_TO_BUFFER) {
      ISessionStore sessionStore=webApplication.getSessionStore();
      String sessionId=sessionStore.getSessionId(request,false);
      if (sessionId != null) {
        BufferedHttpServletResponse bufferedResponse=null;
        String queryString=servletRequest.getQueryString();
        if (!Strings.isEmpty(queryString)) {
          bufferedResponse=webApplication.popBufferedResponse(sessionId,queryString);
        }
 else {
          bufferedResponse=webApplication.popBufferedResponse(sessionId,relativePath);
        }
        if (bufferedResponse != null) {
          bufferedResponse.writeTo(servletResponse);
          return;
        }
      }
    }
    final WebResponse response=existingRequestCycle != null ? (WebResponse)existingRequestCycle.getResponse() : webApplication.newWebResponse(servletResponse);
    response.setAjax(request.isAjax());
    response.setCharacterEncoding(webApplication.getRequestCycleSettings().getResponseRequestEncoding());
    try {
      RequestCycle cycle=existingRequestCycle != null ? existingRequestCycle : webApplication.newRequestCycle(request,response);
      try {
        cycle.request();
      }
 catch (      AbortException e) {
      }
    }
  finally {
      response.close();
      Session.unset();
      if (externalCall) {
        Application.unset();
      }
    }
  }
  finally {
    if (newClassLoader != previousClassLoader) {
      Thread.currentThread().setContextClassLoader(previousClassLoader);
    }
  }
}
