{
  List<String> list=new ArrayList<String>();
  list.add("check2");
  CheckGroupProcessingTestPage page=new CheckGroupProcessingTestPage(list);
  tester.startPage(page);
  tester.submitForm(page.form);
  assertTrue("running with nothing selected - model must be empty",list.size() == 0);
  tester.getRequest().getPostParameters().setParameterValue(page.group.getInputName(),page.check1.getValue());
  tester.submitForm(page.form);
  assertTrue("running with choice1 selected - model must only contain value of check1",list.size() == 1 && list.contains("check1"));
  tester.getRequest().getPostParameters().setParameterValue(page.group.getInputName(),page.check2.getValue());
  tester.submitForm(page.form);
  assertTrue("running with choice2 selected - model must only contain value of check2",list.size() == 1 && list.contains("check2"));
  tester.getRequest().getPostParameters().addParameterValue(page.group.getInputName(),null);
  tester.getRequest().getPostParameters().addParameterValue(page.group.getInputName(),page.check1.getValue());
  tester.getRequest().getPostParameters().addParameterValue(page.group.getInputName(),page.check2.getValue());
  tester.submitForm(page.form);
  assertTrue("running with choice1 and choice2 selected - model must only contain values of check1 and check2",list.size() == 2 && list.contains("check1") && list.contains("check2"));
  tester.getRequest().getPostParameters().setParameterValue(page.group.getInputName(),"some weird choice uuid to test error");
  try {
    tester.submitForm(page.form);
    fail("running with an invalid choice value in the request param, should fail");
  }
 catch (  WicketRuntimeException e) {
  }
}
