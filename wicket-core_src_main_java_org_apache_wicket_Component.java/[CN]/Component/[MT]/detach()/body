{
  setFlag(FLAG_DETACHING,true);
  onDetach();
  if (getFlag(FLAG_DETACHING)) {
    throw new IllegalStateException(Component.class.getName() + " has not been properly detached. Something in the hierarchy of " + getClass().getName()+ " has not called super.onDetach() in the override of onDetach() method");
  }
  detachModels();
  new Behaviors(this).detach();
  detachChildren();
  if (getFlag(FLAG_INHERITABLE_MODEL)) {
    setModelImpl(null);
    setFlag(FLAG_INHERITABLE_MODEL,false);
  }
  clearEnabledInHierarchyCache();
  clearVisibleInHierarchyCache();
  requestFlags=0;
  detachFeedback();
  internalDetach();
  IDetachListener detachListener=getApplication().getFrameworkSettings().getDetachListener();
  if (detachListener != null) {
    detachListener.onDetach(this);
  }
}
