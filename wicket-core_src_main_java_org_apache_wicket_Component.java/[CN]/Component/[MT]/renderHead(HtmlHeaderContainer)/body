{
  if (isVisibleInHierarchy() && isRenderAllowed()) {
    if (log.isDebugEnabled()) {
      log.debug("renderHead: {}",toString(false));
    }
    IHeaderResponse response=container.getHeaderResponse();
    if (response.wasRendered(this) == false) {
      StringResponse markupHeaderResponse=new StringResponse();
      Response oldResponse=getResponse();
      RequestCycle.get().setResponse(markupHeaderResponse);
      try {
        getMarkupSourcingStrategy().renderHead(this,container);
        CharSequence headerContribution=markupHeaderResponse.getBuffer();
        if (Strings.isEmpty(headerContribution) == false) {
          response.render(StringHeaderItem.forString(headerContribution));
        }
      }
  finally {
        RequestCycle.get().setResponse(oldResponse);
      }
      renderHead(this,response);
      response.markRendered(this);
    }
    for (    Behavior behavior : getBehaviors()) {
      if (isBehaviorAccepted(behavior)) {
        if (response.wasRendered(behavior) == false) {
          behavior.renderHead(this,response);
          response.markRendered(behavior);
        }
      }
    }
  }
}
