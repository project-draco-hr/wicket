{
  System.err.println("initialize core");
  try {
    String name=application.getName();
    MBeanServer mbs=ManagementFactory.getPlatformMBeanServer();
    String domain="wicket.app." + name;
    ObjectName appBeanName=new ObjectName(domain + ":type=Application");
    String tempDomain=domain;
    int i=0;
    while (mbs.isRegistered(appBeanName)) {
      tempDomain=name + "-" + i++;
      appBeanName=new ObjectName(tempDomain + ":type=Application");
    }
    name=tempDomain;
    Application appBean=new Application(application);
    mbs.registerMBean(appBean,appBeanName);
    mbs.registerMBean(new ApplicationSettings(application),new ObjectName(domain + ":type=Application,name=ApplicationSettings"));
    mbs.registerMBean(new DebugSettings(application),new ObjectName(domain + ":type=Application,name=DebugSettings"));
    mbs.registerMBean(new MarkupSettings(application),new ObjectName(domain + ":type=Application,name=MarkupSettings"));
    mbs.registerMBean(new ResourceSettings(application),new ObjectName(domain + ":type=Application,name=ResourceSettings"));
    mbs.registerMBean(new PageSettings(application),new ObjectName(domain + ":type=Application,name=PageSettings"));
    mbs.registerMBean(new RequestCycleSettings(application),new ObjectName(domain + ":type=Application,name=RequestCycleSettings"));
    mbs.registerMBean(new SecuritySettings(application),new ObjectName(domain + ":type=Application,name=SecuritySettings"));
    mbs.registerMBean(new SessionSettings(application),new ObjectName(domain + ":type=Application,name=SessionSettings"));
    mbs.registerMBean(new CookieValuePersisterSettings(application),new ObjectName(domain + ":type=Application,name=CookieValuePersisterSettings"));
    RequestLogger sessionsBean=new RequestLogger(application);
    ObjectName sessionsBeanName=new ObjectName(domain + ":type=RequestLogger");
    mbs.registerMBean(sessionsBean,sessionsBeanName);
  }
 catch (  MalformedObjectNameException e) {
    throw new WicketRuntimeException(e);
  }
catch (  InstanceAlreadyExistsException e) {
    throw new WicketRuntimeException(e);
  }
catch (  MBeanRegistrationException e) {
    throw new WicketRuntimeException(e);
  }
catch (  NotCompliantMBeanException e) {
    throw new WicketRuntimeException(e);
  }
}
