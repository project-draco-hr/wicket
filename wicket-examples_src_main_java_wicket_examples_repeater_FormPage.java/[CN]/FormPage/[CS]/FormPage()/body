{
  form=new Form(this,"form");
  RefreshingView<Contact> refreshingView=new RefreshingView<Contact>(form,"simple"){
    @Override protected Iterator<IModel<Contact>> getItemModels(){
      Iterator<Contact> contacts=DatabaseLocator.getDatabase().find(0,10,"firstName",true).iterator();
      return new ModelIteratorAdapter<Contact>(contacts){
        protected IModel<Contact> model(        Contact object){
          return new DetachableContactModel(object);
        }
      }
;
    }
    @SuppressWarnings("unchecked") @Override protected void populateItem(    final Item<Contact> item){
      IModel contact=item.getModel();
      new ActionPanel(item,"actions",contact);
      new TextField(item,"id",new PropertyModel(contact,"id"));
      new TextField(item,"firstName",new PropertyModel(contact,"firstName"));
      new TextField(item,"lastName",new PropertyModel(contact,"lastName"));
      new TextField(item,"homePhone",new PropertyModel(contact,"homePhone"));
      new TextField(item,"cellPhone",new PropertyModel(contact,"cellPhone"));
    }
    @Override protected Item<Contact> newItem(    MarkupContainer parent,    String id,    int index,    IModel<Contact> model){
      return new OddEvenItem<Contact>(parent,id,index,model);
    }
  }
;
  refreshingView.setItemReuseStrategy(ReuseIfModelsEqualStrategy.getInstance());
}
