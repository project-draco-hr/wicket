{
  try {
    MXParser xpp=new MXParser();
    xpp.setInput(markupStream,null);
    Markup markup=new Markup();
    EventListener listener=new Handler(markup);
    listener.onStartDocument();
    Map<String,String> attrs;
    int eventType=xpp.getEventType();
    while (eventType != XmlPullParser.END_DOCUMENT) {
      if (eventType == XmlPullParser.START_TAG) {
        attrs=new HashMap();
        for (int i=0; i < xpp.getAttributeCount(); i++) {
          String name=xpp.getAttributeName(i);
          String prefix=xpp.getAttributePrefix(i);
          if (prefix != null) {
            name=prefix + name;
          }
          attrs.put(name,xpp.getAttributeValue(i));
        }
        String name=xpp.getName();
        String prefix=xpp.getPrefix();
        if (prefix != null) {
          name=prefix + name;
        }
        final boolean empty=xpp.isEmptyElementTag();
        listener.onStartElement(name,attrs,empty);
      }
 else       if (eventType == XmlPullParser.END_TAG) {
        String name=xpp.getName();
        String prefix=xpp.getPrefix();
        if (prefix != null) {
          name=prefix + name;
        }
        listener.onEndElement(name);
      }
 else       if (eventType == XmlPullParser.TEXT) {
        listener.onText(xpp.getText());
      }
 else       if (eventType == XmlPullParser.IGNORABLE_WHITESPACE) {
        listener.onText(xpp.getText());
      }
      eventType=xpp.next();
    }
    listener.onEndDocument();
    markup.init();
    return markup;
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
