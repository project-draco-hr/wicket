{
  final MockPageWithFormAndUploadField page=new MockPageWithFormAndUploadField();
  FileUploadField field=new FileUploadField("upload");
  page.getForm().add(field);
  tester.startPage(new ITestPageSource(){
    private static final long serialVersionUID=1L;
    public Page getTestPage(){
      return page;
    }
  }
);
  RequestCycle requestCycle=tester.createRequestCycle();
  MockHttpServletRequest servletRequest=tester.getServletRequest();
  servletRequest.setMethod("POST");
  servletRequest.setParameter("form2:hf:fs","");
  servletRequest.setParameter("wicketState","");
  File tmp=null;
  try {
    tmp=new File(java.io.File.createTempFile(this.getClass().getName(),".txt"));
    OutputStream os=new BufferedOutputStream(new FileOutputStream(tmp));
    for (int i=0; i < 1000; i++) {
      os.write("test test test test test\n".getBytes());
    }
    os.close();
    servletRequest.addFile("upload",tmp,"text/plain");
    requestCycle.setRequest(new MultipartServletWebRequest(servletRequest,Bytes.MAX));
    field.attach();
    FileUpload fileUpload=field.getFileUpload();
    assertNotNull(fileUpload);
    InputStream is=fileUpload.getInputStream();
    assertTrue(is.read() != -1);
    field.detach();
    try {
      is.read();
      fail();
    }
 catch (    IOException e) {
    }
catch (    Exception e) {
      fail();
    }
  }
  finally {
    if (tmp != null && tmp.exists()) {
      tmp.delete();
    }
  }
}
