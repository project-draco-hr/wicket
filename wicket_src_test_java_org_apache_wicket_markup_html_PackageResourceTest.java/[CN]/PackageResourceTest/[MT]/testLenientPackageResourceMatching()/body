{
  final SharedResources sharedResources=Application.get().getSharedResources();
  Resource invalidResource=new PackageResource(PackageResourceTest.class,"packaged3.txt",Locale.ENGLISH,null);
  assertNotNull("resource packaged3.txt SHOULD be available as a packaged resource even if it doesn't exist",invalidResource);
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1.txt",null,null));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1.txt",Locale.CHINA,null));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1.txt",Locale.CHINA,"foo"));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1.txt",null,"foo"));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1_en.txt",null,null));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1_en_US.txt",null,null));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1_en_US.txt",null,"foo"));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1_en_US.txt",Locale.US,null));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1_en_US.txt",Locale.CANADA,null));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1_en_US.txt",Locale.CHINA,null));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1_foo_bar_en.txt",null,null));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1_foo_bar_en_US.txt",null,null));
  assertTrue(PackageResource.exists(PackageResourceTest.class,"packaged1_foo_bar_en_US_MAC.txt",null,null));
  try {
    invalidResource.getResourceStream();
    fail("Should have raised an AbortException");
  }
 catch (  AbortException e) {
  }
}
