{
  Object target=null;
  if (supportsField(field)) {
    Inject injectAnnotation=field.getAnnotation(Inject.class);
    if (!Modifier.isStatic(field.getModifiers()) && injectAnnotation != null) {
      try {
        Annotation bindingAnnotation=findBindingAnnotation(field.getAnnotations());
        final IProxyTargetLocator locator=new GuiceProxyTargetLocator(field,bindingAnnotation,injectAnnotation.optional());
        if (wrapInProxies) {
          target=LazyInitProxyFactory.createProxy(field.getType(),locator);
        }
 else {
          target=locator.locateProxyTarget();
        }
        if (!field.isAccessible()) {
          field.setAccessible(true);
        }
        field.set(fieldOwner,target);
      }
 catch (      IllegalAccessException e) {
        throw new WicketRuntimeException("Error Guice-injecting field " + field.getName() + " in "+ fieldOwner,e);
      }
catch (      MoreThanOneBindingException e) {
        throw new RuntimeException("Can't have more than one BindingAnnotation on field " + field.getName() + " of class "+ fieldOwner.getClass().getName());
      }
    }
  }
  return target;
}
