{
  if (s == null) {
    return null;
  }
  int len=s.length();
  final AppendingStringBuffer buffer=new AppendingStringBuffer((int)(len * 1.1));
  for (int i=0; i < len; i++) {
    final char c=s.charAt(i);
switch (c) {
case '\t':
      if (escapeSpaces) {
        buffer.append("&nbsp;&nbsp;&nbsp;&nbsp;");
      }
 else {
        buffer.append(c);
      }
    break;
case ' ':
  if (escapeSpaces) {
    buffer.append("&nbsp;");
  }
 else {
    buffer.append(c);
  }
break;
case '<':
buffer.append("&lt;");
break;
case '>':
buffer.append("&gt;");
break;
case '&':
buffer.append("&amp;");
break;
case '"':
buffer.append("&quot;");
break;
case '\'':
buffer.append("&#039;");
break;
default :
int ci=0xffff & c;
if (((ci < 32) && (ci != 9) && (ci != 10)&& (ci != 13)) || (convertToHtmlUnicodeEscapes && (ci > 159))) {
buffer.append("&#");
buffer.append(Integer.toString(ci));
buffer.append(';');
}
 else {
buffer.append(c);
}
break;
}
}
return buffer;
}
