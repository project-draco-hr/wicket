{
  page.beforeCallComponent(component,listener);
  try {
    listener.getMethod().invoke(component,new Object[]{});
  }
 catch (  Exception e) {
    Response response=requestCycle.getResponse();
    if (response instanceof WebResponse) {
      ((WebResponse)response).getHttpServletResponse().setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
      log.error("error handling resource request for component " + component + ", on page "+ page+ ", listener "+ listener.getName()+ " - "+ e.getMessage());
      return;
    }
 else {
      throw new WicketRuntimeException("method " + listener.getName() + " of "+ listener.getMethod().getDeclaringClass()+ " targetted at component "+ component+ " threw an exception",e);
    }
  }
 finally {
    page.afterCallComponent(component,listener);
  }
}
