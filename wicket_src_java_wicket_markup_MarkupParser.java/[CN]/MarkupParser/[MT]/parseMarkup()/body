{
  final List list=new ArrayList();
  final WicketComponentTagIdentifier detectWicketComponents=new WicketComponentTagIdentifier(xmlParser);
  detectWicketComponents.setComponentNameAttribute(this.componentNameAttribute);
  detectWicketComponents.setStripWicketFromComponentTag(this.stripWicketFromComponentTag);
  final WicketParamTagHandler wicketParamTagHandler=new WicketParamTagHandler(new HtmlHandler(detectWicketComponents));
  wicketParamTagHandler.setStripWicketTag(this.stripWicketTag);
  final PreviewComponentTagRemover previewComponentTagRemover=new PreviewComponentTagRemover(wicketParamTagHandler);
  final AutolinkHandler autolinkHandler=new AutolinkHandler(previewComponentTagRemover);
  autolinkHandler.setAutomaticLinking(this.automaticLinking);
  final IMarkupFilter markupFilterChain=autolinkHandler;
  for (ComponentTag tag; null != (tag=(ComponentTag)markupFilterChain.nextTag()); ) {
    boolean add=(tag.getComponentName() != null);
    if (!add && tag.getXmlTag().isClose()) {
      add=((tag.getOpenTag() != null) && (tag.getOpenTag().getComponentName() != null));
    }
    if (add) {
      final CharSequence text=xmlParser.getInputFromPositionMarker(tag.getPos());
      if (text.length() > 0) {
        String rawMarkup=text.toString();
        if (stripComments) {
          rawMarkup=rawMarkup.replaceAll("<!--(.|\n|\r)*?-->","");
        }
        if (compressWhitespace) {
          rawMarkup=rawMarkup.replaceAll("[ \\t]+"," ");
          rawMarkup=rawMarkup.replaceAll("( ?[\\r\\n] ?)+","\n");
        }
        list.add(new RawMarkup(rawMarkup));
      }
      if (!PreviewComponentTagRemover.IGNORE.equals(tag.getComponentName())) {
        list.add(tag);
      }
      xmlParser.setPositionMarker();
    }
  }
  final CharSequence text=xmlParser.getInputFromPositionMarker(-1);
  if (text.length() > 0) {
    list.add(new RawMarkup(text));
  }
  for (int i=0; i < list.size(); i++) {
    MarkupElement elem=(MarkupElement)list.get(i);
    if (elem instanceof ComponentTag) {
      ((ComponentTag)elem).makeImmutable();
    }
  }
  return Collections.unmodifiableList(list);
}
