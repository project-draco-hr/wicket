{
  if (requestParameters.getBookmarkablePageClass() != null) {
    return resolveBookmarkablePage(requestCycle,requestParameters);
  }
  final String path=requestParameters.getPath();
  if (requestParameters.getComponentPath() != null) {
    boolean processRequest=true;
synchronized (requestCycle.getSession()) {
      if (requestParameters.isOnlyProcessIfPathActive()) {
        Session session=Session.get();
        PageMap pageMap=session.pageMapForName(requestParameters.getPageMapName(),false);
        if (pageMap == null) {
          processRequest=false;
        }
 else         if (pageMap instanceof AccessStackPageMap) {
          AccessStackPageMap accessStackPm=(AccessStackPageMap)pageMap;
          if (accessStackPm.getAccessStack().size() > 0) {
            final Access access=(Access)accessStackPm.getAccessStack().peek();
            final int pageId=Integer.parseInt(Strings.firstPathComponent(requestParameters.getComponentPath(),Component.PATH_SEPARATOR));
            if (pageId != access.getId()) {
              processRequest=false;
            }
 else {
              final int version=requestParameters.getVersionNumber();
              if (version != Page.LATEST_VERSION && version != access.getVersion()) {
                processRequest=false;
              }
            }
          }
        }
 else {
        }
      }
    }
    if (processRequest) {
      return resolveRenderedPage(requestCycle,requestParameters);
    }
 else {
      return EmptyRequestTarget.getInstance();
    }
  }
 else   if (requestParameters.getResourceKey() != null) {
    return resolveSharedResource(requestCycle,requestParameters);
  }
  if (requestParameters.getPath() == null && requestParameters.getComponentPath() == null) {
    return resolveHomePageTarget(requestCycle,requestParameters);
  }
  throw new WicketRuntimeException("Unable to resolve request target " + requestParameters);
}
