{
  super(parent,id);
  if (referer == null) {
    throw new IllegalArgumentException("Referer may not be null");
  }
  if (file == null) {
    throw new IllegalArgumentException("File may not be null");
  }
  if (attributeToReplace == null) {
    throw new IllegalArgumentException("AttributeToReplace may not be null");
  }
  IModel<CharSequence> srcReplacement=new Model<CharSequence>(){
    private static final long serialVersionUID=1L;
    @Override public CharSequence getObject(){
      String o=file.getObject();
      if (o == null) {
        throw new IllegalArgumentException("The model must provide a non-null object");
      }
      String f=getConverter(o.getClass()).convertToString(o,getLocale());
      PackageResourceReference ref=new PackageResourceReference(Application.get(),referer,f);
      return getRequestCycle().urlFor(ref);
    }
  }
;
  add(new AttributeModifier(attributeToReplace,true,srcReplacement));
}
