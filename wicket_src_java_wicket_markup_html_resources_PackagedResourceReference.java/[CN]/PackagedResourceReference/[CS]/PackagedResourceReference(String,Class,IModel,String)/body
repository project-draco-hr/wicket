{
  super(id);
  if (referer == null) {
    throw new IllegalArgumentException("Referer may not be null");
  }
  if (file == null) {
    throw new IllegalArgumentException("File may not be null");
  }
  if (attributeToReplace == null) {
    throw new IllegalArgumentException("AttributeToReplace may not be null");
  }
  IModel srcReplacement=new Model(){
    private static final long serialVersionUID=1L;
    public Object getObject(    Component component){
      Object o=file.getObject(component);
      if (o == null) {
        throw new IllegalArgumentException("The model must provide a non-null object (component == " + component + ")");
      }
      if (!(o instanceof String)) {
        throw new IllegalArgumentException("The model must provide an instance of String");
      }
      String f=(String)component.getConverter().convert(file.getObject(component),String.class);
      ResourceReference ref=createPackageResourceReference(Application.get(),referer,f);
      return getRequestCycle().urlFor(ref);
    }
  }
;
  add(new AttributeModifier(attributeToReplace,true,srcReplacement));
}
