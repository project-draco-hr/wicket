{
  final ComponentTag tag=fragment.getTag();
  if (tag.isMessageTag()) {
    String messageKey=tag.getAttributes().getString("key");
    if ((messageKey == null) || (messageKey.trim().length() == 0)) {
      throw new MarkupException("Wrong format of <wicket:message key='xxx'>: attribute 'key' is missing");
    }
    final String value=container.getApplication().getResourceSettings().getLocalizer().getString(messageKey,container,"");
    Component component=null;
    if ((value != null) && (value.trim().length() > 0)) {
      component=new MyLabel(container,tag.getId(),value);
    }
 else {
      log.info("No value found for message key: " + messageKey);
      component=new WebMarkupContainer(container,tag.getId());
    }
    component.setRenderBodyOnly(container.getApplication().getMarkupSettings().getStripWicketTags());
  }
 else   if (tag.getId().startsWith(WicketMessageTagHandler.WICKET_MESSAGE_CONTAINER_ID)) {
    MarkupContainer messageContainer=new WebMarkupContainer(container,tag.getId()){
      private static final long serialVersionUID=1L;
      @Override public boolean isTransparentResolver(){
        return true;
      }
    }
;
    messageContainer.add(WicketMessageTagHandler.ATTRIBUTE_LOCALIZER);
  }
  return MarkupFragment.IVisitor.CONTINUE_TRAVERSAL;
}
