{
  final Count count1=new Count();
  Link link1=new Link("link1"){
    @Override public void onClick(){
      count1.increment();
    }
  }
;
  add(link1);
  link1.add(new Label("label1",new Model<String>(){
    @Override public String getObject(){
      return count1.toString();
    }
  }
));
  final Count count2=new Count();
  Link linkWithStateChange=new Link("linkWithStateChange"){
    @Override public void onClick(){
      count2.increment();
      addStateChange();
    }
  }
;
  add(linkWithStateChange);
  linkWithStateChange.add(new Label("label",new PropertyModel<Integer>(count2,"count")));
class CustomLink extends Link {
    final Count count2;
    /** 
 * Construct.
 * @param id
 */
    public CustomLink(    String id){
      super(id);
      count2=new Count();
      add(new ClickCountLabel("label2",count2));
    }
    @Override public void onClick(){
      count2.increment();
    }
  }
  add(new CustomLink("link2"));
class ButtonLink extends Link {
    final Count count3;
    /** 
 * Construct.
 * @param id
 */
    public ButtonLink(    String id){
      super(id);
      count3=new Count();
      add(new AttributeModifier("value",new Model<String>(){
        @Override public String getObject(){
          return "this button is clicked " + count3.getCount() + " times";
        }
      }
));
    }
    @Override public void onClick(){
      count3.increment();
    }
  }
  add(new ButtonLink("link3"));
}
