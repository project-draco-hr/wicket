{
  final List data=new TestList(6,false);
  add(new SortableTableHeaders("header",data,"rows",true){
    protected int compareTo(    SortableTableHeader header,    Object o1,    Object o2){
      if (header.getName().equals("id")) {
        return ((ListObject)o1).getId() - ((ListObject)o2).getId();
      }
      return super.compareTo(header,o1,o2);
    }
    /** 
 * Define how to do sorting
 * @see com.voicetribe.wicket.markup.html.table.SortableTableHeaders#getObjectToCompare(com.voicetribe.wicket.markup.html.table.SortableTableHeader,java.lang.Object)
 */
    protected Comparable getObjectToCompare(    final SortableTableHeader header,    final Object object){
      final String name=header.getName();
      if (name.equals("name")) {
        return ((ListObject)object).getName();
      }
      if (name.equals("email")) {
        return ((ListObject)object).getEmail();
      }
      if (name.equals("status")) {
        return ((ListObject)object).getStatus();
      }
      if (name.equals("comment")) {
        return ((ListObject)object).getDescription();
      }
      return "";
    }
  }
);
  add(new TableWithAlternatingRowStyle("rows",data){
    public boolean populateCell(    final Cell cell,    final Container tagClass){
      final ListObject value=(ListObject)cell.getModelObject();
      tagClass.add(new Label("id",new Integer(value.getId())));
      tagClass.add(new Label("name",value.getName()));
      tagClass.add(new Label("email",value.getEmail()));
      tagClass.add(new Label("status",value.getStatus()));
      tagClass.add(new Label("comment",value.getDescription()));
      return true;
    }
  }
);
}
