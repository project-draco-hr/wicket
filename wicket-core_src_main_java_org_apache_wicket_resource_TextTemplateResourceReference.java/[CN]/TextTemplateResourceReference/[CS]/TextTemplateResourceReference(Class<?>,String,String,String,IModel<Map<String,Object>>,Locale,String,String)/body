{
  super(scope,fileName,locale,style,variation);
  textTemplate=new PackageTextTemplate(scope,fileName,contentType,encoding);
  this.variablesModel=variablesModel;
  resource=new ResourceStreamResource(null){
    @Override protected IResourceStream getResourceStream(){
      IModel<Map<String,Object>> variables=TextTemplateResourceReference.this.variablesModel;
      String stringValue=textTemplate.asString(variables.getObject());
      variables.detach();
      StringResourceStream resourceStream=new StringResourceStream(stringValue,textTemplate.getContentType());
      resourceStream.setLastModified(Time.now());
      return resourceStream;
    }
  }
;
  resource.setCacheDuration(Duration.NONE);
  if (Application.exists()) {
    ResourceReferenceRegistry resourceReferenceRegistry=Application.get().getResourceReferenceRegistry();
    resourceReferenceRegistry.unregisterResourceReference(getKey());
    resourceReferenceRegistry.registerResourceReference(this);
  }
}
