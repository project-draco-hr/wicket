{
  PageParameters parameters=new PageParameters();
  parameters.add("q_1","q_1_value_1",INamedParameters.Type.MANUAL);
  parameters.add("q_1","q_1_value_2",INamedParameters.Type.MANUAL);
  IPageProvider testPageProvider=new PageProvider(MockPageParametersAware.class,parameters);
  IRequestHandler pageRequestHandler=new BookmarkablePageRequestHandler(testPageProvider);
  Url url=tester.getApplication().getRootRequestMapper().mapHandler(pageRequestHandler);
  tester.getRequest().addParameter("q_2","q_2_value_1");
  tester.getRequest().addParameter("q_2","q_2_value_2");
  tester.getRequest().setUrl(url);
  tester.processRequest();
  MockPageParametersAware page=(MockPageParametersAware)tester.getLastRenderedPage();
  IRequestParameters lastQueryParameter=page.getLastQueryParameters();
  List<StringValue> q1ParameterValues=lastQueryParameter.getParameterValues("q_1");
  assertTrue(q1ParameterValues.contains(StringValue.valueOf("q_1_value_1")));
  assertTrue(q1ParameterValues.contains(StringValue.valueOf("q_1_value_2")));
  List<StringValue> q2ParameterValues=lastQueryParameter.getParameterValues("q_2");
  assertTrue(q2ParameterValues.contains(StringValue.valueOf("q_2_value_1")));
  assertTrue(q2ParameterValues.contains(StringValue.valueOf("q_2_value_2")));
}
