{
  TimeZone origJvmDef=TimeZone.getDefault();
  DateTimeZone origJodaDef=DateTimeZone.getDefault();
  TimeZone tzClient=TimeZone.getTimeZone("GMT+14");
  TimeZone tzServer=TimeZone.getTimeZone("GMT-12");
  TimeZone.setDefault(tzServer);
  DateTimeZone.setDefault(DateTimeZone.forTimeZone(tzServer));
  Class<? extends Page> pageClass=DatesPage2.class;
  MutableDateTime dt=new MutableDateTime(DateTimeZone.forTimeZone(tzClient));
  dt.setDateTime(2010,11,6,22,0,0,0);
  Date date=new Date(dt.getMillis());
  WebClientInfo clientInfo=(WebClientInfo)tester.getSession().getClientInfo();
  clientInfo.getProperties().setTimeZone(tzClient);
  tester.getSession().setLocale(Locale.US);
  tester.startPage(pageClass);
  tester.assertRenderedPage(pageClass);
  FormTester formTester=tester.newFormTester("form");
  formTester.setValue("dateTimeField:date","11/06/2010");
  formTester.setValue("dateTimeField:hours","10");
  formTester.setValue("dateTimeField:minutes","00");
  formTester.setValue("dateTimeField:amOrPmChoice","1");
  formTester.submit();
  DatesPage2 page=(DatesPage2)tester.getLastRenderedPage();
  log.debug("orig: " + date.getTime() + "; dateTime: "+ page.dateTime.getTime());
  log.debug("orig: " + date + "; dateTime: "+ page.dateTime);
  assertEquals(0,date.compareTo(page.dateTime));
  TimeZone.setDefault(origJvmDef);
  DateTimeZone.setDefault(origJodaDef);
}
