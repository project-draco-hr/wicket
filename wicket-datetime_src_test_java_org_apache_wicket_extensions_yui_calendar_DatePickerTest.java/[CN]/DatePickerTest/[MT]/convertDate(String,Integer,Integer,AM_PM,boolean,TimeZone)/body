{
  log.debug(">>> convertDate()");
  Date dateFieldInput=(dateStr != null ? DateFormat.getDateInstance().parse(dateStr) : null);
  final MutableDateTime date;
  if (dateFieldInput != null) {
    log.debug("1. dateFieldInput: " + dateFieldInput.getTime() + "  "+ dateFieldInput);
    date=new MutableDateTime(dateFieldInput);
  }
 else {
    log.debug("1. dateFieldInput: null");
    date=new MutableDateTime();
  }
  log.debug("2. mutable date: " + date.getMillis() + "  "+ date);
  date.setSecondOfMinute(0);
  log.debug("3. secs = 0: " + date.getMillis() + "  "+ date);
  if (use12HourFormat) {
    date.set(DateTimeFieldType.halfdayOfDay(),amOrPm == AM_PM.PM ? 1 : 0);
  }
  log.debug("4. AM/PM: " + date.getMillis() + "  "+ date);
  if (hours == null) {
    date.setHourOfDay(0);
  }
 else {
    date.set(DateTimeFieldType.hourOfDay(),hours % (use12HourFormat ? 12 : 24));
  }
  log.debug("5. hours: " + date.getMillis() + "  "+ date);
  if (minutes == null) {
    date.setMinuteOfHour(0);
  }
 else {
    date.setMinuteOfHour(minutes);
  }
  log.debug("6. minutes: " + date.getMillis() + "  "+ date);
  if (tzClient != null) {
    date.setZoneRetainFields(DateTimeZone.forTimeZone(tzClient));
    log.debug("7. zone: " + date.getMillis() + "  "+ date);
  }
  Date rtn=new Date(date.getMillis());
  log.debug("8. final date: " + rtn.getTime() + "  "+ rtn);
  return rtn;
}
