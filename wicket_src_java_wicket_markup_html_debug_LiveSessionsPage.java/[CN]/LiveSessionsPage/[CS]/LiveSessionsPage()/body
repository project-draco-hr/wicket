{
  add(new Image("bug"));
  add(new ApplicationView("application",Application.get()));
  Link link=new Link("togglelink"){
    private static final long serialVersionUID=1L;
    public void onClick(){
      WebApplication webApplication=(WebApplication)Application.get();
      RequestLogger requestLogger=webApplication.getRequestLogger();
      if (requestLogger == null) {
        webApplication.setRequestLogger(new RequestLogger());
      }
 else {
        webApplication.setRequestLogger(null);
      }
    }
  }
;
  link.add(new Label("toggletext",new Model(){
    private static final long serialVersionUID=1L;
    public Object getObject(    Component component){
      WebApplication webApplication=(WebApplication)Application.get();
      RequestLogger requestLogger=webApplication.getRequestLogger();
      if (requestLogger == null) {
        return "Enable request recording";
      }
 else {
        return "Disable request recording";
      }
    }
  }
));
  add(link);
  add(new Label("totalSessions",new Model(){
    private static final long serialVersionUID=1L;
    public Object getObject(    Component component){
      return new Integer(getRequestLogger().getTotalCreatedSessions());
    }
  }
));
  add(new Label("peakSessions",new Model(){
    private static final long serialVersionUID=1L;
    public Object getObject(    Component component){
      return new Integer(getRequestLogger().getLiveSessions().size());
    }
  }
));
  add(new Label("liveSessions",new Model(){
    private static final long serialVersionUID=1L;
    public Object getObject(    Component component){
      return new Integer(getRequestLogger().getPeakSessions());
    }
  }
));
  Model sessionModel=new Model(){
    private static final long serialVersionUID=1L;
    public Object getObject(    Component component){
      return new ArrayList(getRequestLogger().getLiveSessions());
    }
  }
;
  PageableListView listView=new PageableListView("sessions",sessionModel,50){
    private static final long serialVersionUID=1L;
    protected void populateItem(    ListItem item){
      final SessionData sd=(SessionData)item.getModelObject();
      Link link=new Link("id"){
        private static final long serialVersionUID=1L;
        /** 
 * @see wicket.markup.html.link.Link#onClick()
 */
        public void onClick(){
          setResponsePage(new RequestsPage(sd));
        }
      }
;
      link.add(new Label("id",new Model(sd.getId())));
      item.add(link);
      item.add(new Label("requestCount",new Model(new Integer(sd.getRequests().size()))));
      item.add(new Label("requestsTime",new Model(sd.getRequestsTime())));
      item.add(new Label("sessionSize",new Model(Bytes.bytes(sd.getSessionSize()))));
    }
  }
;
  add(listView);
  PagingNavigator navigator=new PagingNavigator("navigator",listView);
  add(navigator);
}
