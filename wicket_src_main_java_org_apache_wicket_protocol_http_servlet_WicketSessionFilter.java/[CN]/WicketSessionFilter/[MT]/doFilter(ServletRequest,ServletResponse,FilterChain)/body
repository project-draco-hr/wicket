{
  HttpServletRequest httpServletRequest=((HttpServletRequest)request);
  HttpSession httpSession=httpServletRequest.getSession(false);
  WebApplication application=null;
  Session session=null;
  if (httpSession != null) {
    if (sessionKey == null) {
      application=(WebApplication)Application.get(filterName);
      if (application == null) {
        throw new IllegalStateException("Could not find wicket application mapped to filter: " + filterName + ". Make sure you set filterName attribute to the name of the wicket filter "+ "for the wicket application whose session you want to access.");
      }
      sessionKey=application.getSessionAttributePrefix(null,filterName) + Session.SESSION_ATTRIBUTE_NAME;
      log.debug("will use {} as the session key to get the Wicket session",sessionKey);
    }
    session=(Session)httpSession.getAttribute(sessionKey);
  }
 else {
    log.debug("could not set Wicket session: no http session was created yet for {},{}",httpServletRequest.getContextPath(),httpServletRequest.getServerName());
  }
  if (session == null) {
    if (log.isDebugEnabled()) {
      log.debug("could not set Wicket session: key " + sessionKey + " not found in http session for "+ httpServletRequest.getContextPath()+ ","+ httpServletRequest.getServerName());
    }
    chain.doFilter(request,response);
  }
 else {
    try {
      ThreadContext.setApplication(application);
      ThreadContext.setSession(session);
      log.debug("session " + session + " set as current for "+ httpServletRequest.getContextPath()+ ","+ httpServletRequest.getServerName());
      chain.doFilter(request,response);
    }
  finally {
      ThreadContext.detach();
    }
  }
}
