{
class TestPage extends WebPage implements IMarkupResourceStreamProvider {
    private static final long serialVersionUID=1L;
    private String value;
    private boolean submitted;
    public TestPage(){
      Form<Void> form=new Form<Void>("form");
      add(form);
      RadioGroup<String> group=new RadioGroup<String>("group",new PropertyModel<String>(this,"value"));
      form.add(group);
      value="a";
      group.add(new Radio<String>("a",Model.of("a")));
      group.add(new Radio<String>("b",Model.of("b")));
      form.add(new AjaxSubmitLink("submit"){
        @Override protected void onSubmit(        AjaxRequestTarget target,        Form<?> form){
          submitted=true;
        }
        @Override protected void onError(        AjaxRequestTarget target,        Form<?> form){
        }
      }
);
    }
    @Override public IResourceStream getMarkupResourceStream(    MarkupContainer container,    Class<?> containerClass){
      return new StringResourceStream("<html><body><form wicket:id='form'><div wicket:id='group'><input type='radio' wicket:id='a'/><input type='radio' wicket:id='b'/></div><input wicket:id='submit' type='submit'/></form></body></html>");
    }
  }
  TestPage page=new TestPage();
  WicketTester tester=new WicketTester();
  tester.startPage(page);
  tester.clickLink("form:submit");
  assertTrue(page.submitted);
  assertEquals("a",page.value);
}
