{
  Object convertedInput=null;
  Object dateFieldInput=dateField.getConvertedInput();
  if (dateFieldInput != null) {
    MutableDateTime date=new MutableDateTime(dateFieldInput);
    Integer hours=(Integer)hoursField.getConvertedInput();
    Integer minutes=(Integer)minutesField.getConvertedInput();
    AM_PM amOrPm=(AM_PM)amOrPmChoice.getConvertedInput();
    try {
      TimeZone zone=getClientTimeZone();
      if (zone != null) {
        date.setZone(DateTimeZone.forTimeZone(zone));
      }
      if (hours != null) {
        date.set(DateTimeFieldType.hourOfHalfday(),hours.intValue() % 12);
        date.setMinuteOfHour((minutes != null) ? minutes.intValue() : 0);
      }
      if (amOrPm == AM_PM.PM) {
        date.set(DateTimeFieldType.halfdayOfDay(),1);
      }
 else {
        date.set(DateTimeFieldType.halfdayOfDay(),0);
      }
      convertedInput=date.toDate();
    }
 catch (    RuntimeException e) {
      DateTimeField.this.error(e.getMessage());
      invalid();
    }
  }
  setConvertedInput(convertedInput);
}
