{
  StringBuffer sb=new StringBuffer();
  int i;
  JSONArray ja;
  JSONObject jo;
  String key;
  Iterator keys;
  int length;
  String string;
  Object value;
  if (object instanceof JSONObject) {
    if (tagName != null) {
      sb.append('<');
      sb.append(tagName);
      sb.append('>');
    }
    jo=(JSONObject)object;
    keys=jo.keys();
    while (keys.hasNext()) {
      key=keys.next().toString();
      value=jo.opt(key);
      if (value == null) {
        value="";
      }
      if (value instanceof String) {
        string=(String)value;
      }
 else {
        string=null;
      }
      if (key.equals("content")) {
        if (value instanceof JSONArray) {
          ja=(JSONArray)value;
          length=ja.length();
          for (i=0; i < length; i+=1) {
            if (i > 0) {
              sb.append('\n');
            }
            sb.append(escape(ja.get(i).toString()));
          }
        }
 else {
          sb.append(escape(value.toString()));
        }
      }
 else       if (value instanceof JSONArray) {
        ja=(JSONArray)value;
        length=ja.length();
        for (i=0; i < length; i+=1) {
          value=ja.get(i);
          if (value instanceof JSONArray) {
            sb.append('<');
            sb.append(key);
            sb.append('>');
            sb.append(toString(value));
            sb.append("</");
            sb.append(key);
            sb.append('>');
          }
 else {
            sb.append(toString(value,key));
          }
        }
      }
 else       if (value.equals("")) {
        sb.append('<');
        sb.append(key);
        sb.append("/>");
      }
 else {
        sb.append(toString(value,key));
      }
    }
    if (tagName != null) {
      sb.append("</");
      sb.append(tagName);
      sb.append('>');
    }
    return sb.toString();
  }
 else {
    if (object.getClass().isArray()) {
      object=new JSONArray(object);
    }
    if (object instanceof JSONArray) {
      ja=(JSONArray)object;
      length=ja.length();
      for (i=0; i < length; i+=1) {
        sb.append(toString(ja.opt(i),tagName == null ? "array" : tagName));
      }
      return sb.toString();
    }
 else {
      string=(object == null) ? "null" : escape(object.toString());
      return (tagName == null) ? "\"" + string + "\"" : (string.length() == 0) ? "<" + tagName + "/>" : "<" + tagName + ">"+ string+ "</"+ tagName+ ">";
    }
  }
}
