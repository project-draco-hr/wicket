{
  if (component instanceof Iterable<?>) {
    final Iterable<?> container=(Iterable<?>)component;
    if (filter.visitChildren(container)) {
      Visit<R> childTraversal=new Visit<R>();
      for (      final Object child : ((Iterable<?>)component)) {
        visitPostOrderHelper(child,visitor,filter,childTraversal);
        if (childTraversal.isStopped()) {
          visit.stop(childTraversal.getResult());
          return;
        }
      }
    }
  }
  if (filter.visitObject(component)) {
    visitor.component((S)component,visit);
  }
}
