{
  super();
  add(new Label(this,"unscoped","unscoped"));
  add(new ScopedLabel(this,"clicked",new AbstractReadOnlyModel(){
    private static final long serialVersionUID=1L;
    @Override public Object getObject(    Component component){
      return "Clicked: " + _clicked;
    }
  }
));
  add(new ScopedLabel(this,"global","Global"));
  add(new ScopedLink(this,"globalLink"){
    private static final long serialVersionUID=1L;
    @Override public void onClick(){
      _clicked++;
    }
  }
);
  WebMarkupContainer cont1=new WebMarkupContainer(this,"cont1");
  add(cont1);
  cont1.add(new ScopedLabel(cont1,"localscoped","Local Scoped"));
  cont1.add(new Label(cont1,"local","Local"));
  WebMarkupContainer cont11=new WebMarkupContainer(cont1,"cont11");
  cont1.add(cont11);
  cont11.add(new Label(cont11,"global"," hide global"));
  WebMarkupContainer cont2=new WebMarkupContainer(this,"cont2");
  add(cont2);
  cont2.add(new Label(cont2,"local","Local2"));
  cont2.add(new ScopedLabel(cont2,"localscoped","Local Scoped"));
}
