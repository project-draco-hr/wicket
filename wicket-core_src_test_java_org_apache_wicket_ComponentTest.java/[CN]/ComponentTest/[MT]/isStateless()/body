{
  Behavior statefulBehavior=new Behavior(){
    @Override public boolean getStatelessHint(    Component component){
      return false;
    }
  }
;
  WebComponent component=new WebComponent("someId");
  assertTrue(component.isStateless());
  component.add(statefulBehavior);
  assertFalse(component.isStateless());
  component.setVisible(false);
  assertTrue(component.isStateless());
  component.setVisible(true).setEnabled(false);
  assertTrue(component.isStateless());
  component=new WebComponent("someId"){
    @Override public boolean canCallListenerInterface(    Method method){
      return true;
    }
  }
;
  component.add(statefulBehavior);
  component.setVisible(false);
  assertFalse(component.isStateless());
  Link<Void> link=new Link<Void>("someId"){
    @Override public void onClick(){
    }
  }
;
  assertFalse(link.isStateless());
  link.setVisible(false);
  assertTrue(link.isStateless());
  link.setVisible(true).setEnabled(false);
  assertTrue(link.isStateless());
  link=new Link<Void>("someId"){
    @Override public boolean canCallListenerInterface(    Method method){
      return true;
    }
    @Override public void onClick(){
    }
  }
;
  link.setVisible(false);
  assertFalse(link.isStateless());
}
