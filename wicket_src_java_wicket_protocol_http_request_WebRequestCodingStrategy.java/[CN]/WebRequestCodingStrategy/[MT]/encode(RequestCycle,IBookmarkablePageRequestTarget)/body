{
  final Class pageClass=requestTarget.getPageClass();
  final Class homePageClass=requestCycle.getApplication().getHomePage();
  final PageParameters parameters=requestTarget.getPageParameters();
  final StringBuffer url=new StringBuffer(64);
  url.append(urlPrefix(requestCycle));
  url.append("?bookmarkablePage=");
  url.append(pageClass.getName());
  String pageMapName=requestTarget.getPageMapName();
  if (pageMapName == null) {
    IRequestTarget currentTarget=requestCycle.getRequestTarget();
    if (currentTarget instanceof IPageRequestTarget) {
      Page currentPage=((IPageRequestTarget)currentTarget).getPage();
      final PageMap pageMap=currentPage.getPageMap();
      if (!pageMap.isDefault()) {
        url.append("&pagemap=");
        url.append(pageMap.getName());
      }
    }
  }
 else {
    url.append("&pagemap=");
    url.append(pageMapName);
  }
  if (parameters != null) {
    for (final Iterator iterator=parameters.keySet().iterator(); iterator.hasNext(); ) {
      final String key=(String)iterator.next();
      final String value=parameters.getString(key);
      if (value != null) {
        String escapedValue=value;
        try {
          escapedValue=URLEncoder.encode(escapedValue,Application.get().getRequestCycleSettings().getResponseRequestEncoding());
        }
 catch (        UnsupportedEncodingException ex) {
          log.error(ex.getMessage(),ex);
        }
        url.append('&');
        url.append(key);
        url.append('=');
        url.append(escapedValue);
      }
    }
  }
  return requestCycle.getResponse().encodeURL(url.toString());
}
