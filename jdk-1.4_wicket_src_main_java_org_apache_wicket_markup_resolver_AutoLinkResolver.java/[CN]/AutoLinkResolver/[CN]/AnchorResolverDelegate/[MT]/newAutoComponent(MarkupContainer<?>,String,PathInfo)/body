{
  if ((pathInfo.extension != null) && supportedPageExtensions.contains(pathInfo.extension)) {
    Page page=container.getPage();
    final IClassResolver defaultClassResolver=page.getApplication().getApplicationSettings().getClassResolver();
    String className=Packages.absolutePath(page.getClass(),pathInfo.path);
    className=Strings.replaceAll(className,"/",".").toString();
    if (className.startsWith(".")) {
      className=className.substring(1);
    }
    try {
      final Class<? extends Page> clazz=(Class<? extends Page>)defaultClassResolver.resolveClass(className);
      return new AutolinkBookmarkablePageLink(autoId,clazz,pathInfo.pageParameters,pathInfo.anchor);
    }
 catch (    ClassNotFoundException ex) {
      log.warn("Did not find corresponding java class: " + className);
    }
    MarkupContainer<?> parentWithContainer=container;
    if (container.getParent() != null) {
      parentWithContainer=container.findParentWithAssociatedMarkup();
    }
    if ((parentWithContainer instanceof Page) && !pathInfo.path.startsWith("/") && page.getMarkupStream().isMergedMarkup()) {
      Class clazz=container.getMarkupStream().getTag().getMarkupClass();
      if (clazz != null) {
        className=Packages.absolutePath(clazz,pathInfo.path);
        try {
          clazz=defaultClassResolver.resolveClass(className);
          return new AutolinkBookmarkablePageLink(autoId,clazz,pathInfo.getPageParameters(),pathInfo.anchor);
        }
 catch (        ClassNotFoundException ex) {
          log.warn("Did not find corresponding java class: " + className);
        }
      }
    }
  }
 else {
    return newPackageResourceReferenceAutoComponent(container,autoId,pathInfo,attribute);
  }
  return null;
}
