{
  OutputStream out=getOutputStream();
  try {
    Streams.copy(in,out);
  }
 catch (  Exception e) {
    Throwable throwable=e;
    boolean ignoreException=false;
    while (throwable != null) {
      if (throwable instanceof SocketException) {
        String message=throwable.getMessage();
        ignoreException=message != null && (message.indexOf("Connection reset by peer") != -1 || message.indexOf("Software caused connection abort") != -1);
      }
 else {
        ignoreException=throwable.getClass().getName().indexOf("ClientAbortException") >= 0;
        if (ignoreException) {
          if (log.isDebugEnabled()) {
            log.debug("Socket exception ignored for sending Resource " + "response to client (ClientAbort)",e);
          }
          break;
        }
      }
      throwable=throwable.getCause();
      if (!ignoreException) {
        throw new WicketRuntimeException("Unable to write response",e);
      }
    }
  }
 finally {
    try {
      in.close();
      out.flush();
    }
 catch (    IOException e) {
      throw new WicketRuntimeException(e);
    }
  }
}
