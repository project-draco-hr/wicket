{
  final Link actionLink=new Link(this,"actionLink"){
    @Override public void onClick(){
      linkClickCount++;
    }
  }
;
  actionLink.getModel();
  new Label(actionLink,"linkClickCount",new PropertyModel(this,"linkClickCount"));
  new Link<String>(this,"actionOnClickLink"){
    @Override public void onClick(){
      onClickLinkClickCount++;
    }
  }
;
  new Label(this,"onClickLinkClickCount",new PropertyModel(this,"onClickLinkClickCount"));
  new BookmarkablePageLink(this,"page1Link",Page1.class);
  new BookmarkablePageLink(this,"page3Link",Page3.class).setParameter("bookmarkparameter","3++2 & 5 ? >< space + ?");
  new PageLink(this,"bookDetailsLink",new IPageLink(){
    public Page getPage(){
      return new BookDetails(new Book("The Hobbit"));
    }
    public Class getPageIdentity(){
      return BookDetails.class;
    }
  }
);
  new PageLink(this,"bookDetailsLink2",new IPageLink(){
    public Page getPage(){
      return new BookDetails(new Book("Inside The Matrix"));
    }
    public Class getPageIdentity(){
      return BookDetails.class;
    }
  }
);
  PopupSettings popupSettings=new PopupSettings(PageMap.forName("popuppagemap")).setHeight(500).setWidth(500);
  new BookmarkablePageLink(this,"popupLink",Popup.class).setPopupSettings(popupSettings);
  new BookmarkablePageLink(this,"popupButtonLink",Popup.class).setPopupSettings(popupSettings);
  new ExternalLink(this,"google","http://www.google.com","Click this link to go to Google");
  PopupSettings googlePopupSettings=new PopupSettings(PopupSettings.RESIZABLE | PopupSettings.SCROLLBARS).setHeight(500).setWidth(700);
  new ExternalLink(this,"googlePopup","http://www.google.com","Click this link to go to Google in a popup").setPopupSettings(googlePopupSettings);
  new ResourceLink(this,"cancelButtonLink",new ResourceReference("cancelButton"));
  new FeedbackPanel(this,"feedback");
  new RedirectForm(this,"redirectForm");
  Link linkToAnchor=new Link(this,"linkToAnchor"){
    @Override public void onClick(){
    }
  }
;
  new Link(this,"anotherlinkToAnchor"){
    @Override public void onClick(){
    }
  }
;
  Component anchorLabel=new Label(this,"anchorLabel","this label is here to function as an anchor for a link").setOutputMarkupId(true);
  linkToAnchor.setAnchor(anchorLabel);
}
